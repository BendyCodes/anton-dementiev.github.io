//Mejdu FrameWork powered by PIXI

var M3=M3||{};
/*!
 SoundJS
 Visit http://createjs.com/ for documentation, updates and examples.

 Copyright (c) 2010 gskinner.com, inc.

 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without
 restriction, including without limitation the rights to use,
 copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following
 conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 OTHER DEALINGS IN THE SOFTWARE.
*/
this.createjs=this.createjs||{};
(function(){
var s=createjs.SoundJS=createjs.SoundJS||{};
s.version="NEXT";
s.buildDate="Thu, 11 Dec 2014 23:16:15 GMT";
})();
this.createjs=this.createjs||{};
createjs.extend=function(subclass,superclass){
"use strict";
function o(){this.constructor=subclass;}
o.prototype=superclass.prototype;
return(subclass.prototype=new o());
};
this.createjs=this.createjs||{};
createjs.promote=function(subclass,prefix){
"use strict";
var subP=subclass.prototype,supP=(Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;
if(supP){
subP[(prefix+="_")+"constructor"]=supP.constructor;
for(var n in supP){
if(subP.hasOwnProperty(n)&&(typeof supP[n]=="function")){subP[prefix+n]=supP[n];}
}
}
return subclass;
};
this.createjs=this.createjs||{};
createjs.indexOf=function(array,searchElement){
"use strict";
for(var i=0,l=array.length;i<l;i++){
if(searchElement===array[i]){
return i;
}
}
return-1;
};
this.createjs=this.createjs||{};
(function(){
"use strict";
createjs.proxy=function(method,scope){
var aArgs=Array.prototype.slice.call(arguments,2);
return function(){
return method.apply(scope,Array.prototype.slice.call(arguments,0).concat(aArgs));
};
}
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var t=Object.defineProperty?true:false;
var foo={};
try{
Object.defineProperty(foo,"bar",{
get:function(){
return this._bar;
},
set:function(value){
this._bar=value;
}
});
}catch(e){
t=false;
}
createjs.definePropertySupported=t;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function BrowserDetect(){
throw"BrowserDetect cannot be instantiated";
};
var agent=BrowserDetect.agent=window.navigator.userAgent;
BrowserDetect.isWindowPhone=(agent.indexOf("IEMobile")>-1)||(agent.indexOf("Windows Phone")>-1);
BrowserDetect.isFirefox=(agent.indexOf("Firefox")>-1);
BrowserDetect.isOpera=(window.opera!=null);
BrowserDetect.isChrome=(agent.indexOf("Chrome")>-1);
BrowserDetect.isIOS=(agent.indexOf("iPod")>-1||agent.indexOf("iPhone")>-1||agent.indexOf("iPad")>-1)&&!BrowserDetect.isWindowPhone;
BrowserDetect.isAndroid=(agent.indexOf("Android")>-1)&&!BrowserDetect.isWindowPhone;
BrowserDetect.isBlackberry=(agent.indexOf("Blackberry")>-1);
createjs.BrowserDetect=BrowserDetect;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function EventDispatcher(){
this._listeners=null;
this._captureListeners=null;
}
var p=EventDispatcher.prototype;
EventDispatcher.initialize=function(target){
target.addEventListener=p.addEventListener;
target.on=p.on;
target.removeEventListener=target.off=p.removeEventListener;
target.removeAllEventListeners=p.removeAllEventListeners;
target.hasEventListener=p.hasEventListener;
target.dispatchEvent=p.dispatchEvent;
target._dispatchEvent=p._dispatchEvent;
target.willTrigger=p.willTrigger;
};
p.addEventListener=function(type,listener,useCapture){
var listeners;
if(useCapture){
listeners=this._captureListeners=this._captureListeners||{};
}else{
listeners=this._listeners=this._listeners||{};
}
var arr=listeners[type];
if(arr){this.removeEventListener(type,listener,useCapture);}
arr=listeners[type];
if(!arr){listeners[type]=[listener];}
else{arr.push(listener);}
return listener;
};
p.on=function(type,listener,scope,once,data,useCapture){
if(listener.handleEvent){
scope=scope||listener;
listener=listener.handleEvent;
}
scope=scope||this;
return this.addEventListener(type,function(evt){
listener.call(scope,evt,data);
once&&evt.remove();
},useCapture);
};
p.removeEventListener=function(type,listener,useCapture){
var listeners=useCapture?this._captureListeners:this._listeners;
if(!listeners){return;}
var arr=listeners[type];
if(!arr){return;}
for(var i=0,l=arr.length;i<l;i++){
if(arr[i]==listener){
if(l==1){delete(listeners[type]);}
else{arr.splice(i,1);}
break;
}
}
};
p.off=p.removeEventListener;
p.removeAllEventListeners=function(type){
if(!type){this._listeners=this._captureListeners=null;}
else{
if(this._listeners){delete(this._listeners[type]);}
if(this._captureListeners){delete(this._captureListeners[type]);}
}
};
p.dispatchEvent=function(eventObj){
if(typeof eventObj=="string"){
var listeners=this._listeners;
if(!listeners||!listeners[eventObj]){return false;}
eventObj=new createjs.Event(eventObj);
}else if(eventObj.target&&eventObj.clone){
eventObj=eventObj.clone();
}
try{eventObj.target=this;}catch(e){}
if(!eventObj.bubbles||!this.parent){
this._dispatchEvent(eventObj,2);
}else{
var top=this,list=[top];
while(top.parent){list.push(top=top.parent);}
var i,l=list.length;
for(i=l-1;i>=0&&!eventObj.propagationStopped;i--){
list[i]._dispatchEvent(eventObj,1+(i==0));
}
for(i=1;i<l&&!eventObj.propagationStopped;i++){
list[i]._dispatchEvent(eventObj,3);
}
}
return eventObj.defaultPrevented;
};
p.hasEventListener=function(type){
var listeners=this._listeners,captureListeners=this._captureListeners;
return!!((listeners&&listeners[type])||(captureListeners&&captureListeners[type]));
};
p.willTrigger=function(type){
var o=this;
while(o){
if(o.hasEventListener(type)){return true;}
o=o.parent;
}
return false;
};
p.toString=function(){
return"[EventDispatcher]";
};
p._dispatchEvent=function(eventObj,eventPhase){
var l,listeners=(eventPhase==1)?this._captureListeners:this._listeners;
if(eventObj&&listeners){
var arr=listeners[eventObj.type];
if(!arr||!(l=arr.length)){return;}
try{eventObj.currentTarget=this;}catch(e){}
try{eventObj.eventPhase=eventPhase;}catch(e){}
eventObj.removed=false;
arr=arr.slice();
for(var i=0;i<l&&!eventObj.immediatePropagationStopped;i++){
var o=arr[i];
if(o.handleEvent){o.handleEvent(eventObj);}
else{o(eventObj);}
if(eventObj.removed){
this.off(eventObj.type,o,eventPhase==1);
eventObj.removed=false;
}
}
}
};
createjs.EventDispatcher=EventDispatcher;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Event(type,bubbles,cancelable){
this.type=type;
this.target=null;
this.currentTarget=null;
this.eventPhase=0;
this.bubbles=!!bubbles;
this.cancelable=!!cancelable;
this.timeStamp=(new Date()).getTime();
this.defaultPrevented=false;
this.propagationStopped=false;
this.immediatePropagationStopped=false;
this.removed=false;
}
var p=Event.prototype;
p.preventDefault=function(){
this.defaultPrevented=this.cancelable&&true;
};
p.stopPropagation=function(){
this.propagationStopped=true;
};
p.stopImmediatePropagation=function(){
this.immediatePropagationStopped=this.propagationStopped=true;
};
p.remove=function(){
this.removed=true;
};
p.clone=function(){
return new Event(this.type,this.bubbles,this.cancelable);
};
p.set=function(props){
for(var n in props){this[n]=props[n];}
return this;
};
p.toString=function(){
return"[Event (type="+this.type+")]";
};
createjs.Event=Event;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function ErrorEvent(title,message,data){
this.Event_constructor("error");
this.title=title;
this.message=message;
this.data=data;
}
var p=createjs.extend(ErrorEvent,createjs.Event);
p.clone=function(){
return new createjs.ErrorEvent(this.title,this.message,this.data);
};
createjs.ErrorEvent=createjs.promote(ErrorEvent,"Event");
}());
this.createjs=this.createjs||{};
(function(scope){
"use strict";
function ProgressEvent(loaded,total){
this.Event_constructor("progress");
this.loaded=loaded;
this.total=(total==null)?1:total;
this.progress=(total==0)?0:this.loaded/this.total;
};
var p=createjs.extend(ProgressEvent,createjs.Event);
p.clone=function(){
return new createjs.ProgressEvent(this.loaded,this.total);
};
createjs.ProgressEvent=createjs.promote(ProgressEvent,"Event");
}(window));
this.createjs=this.createjs||{};
(function(){
"use strict";
function LoadItem(){
this.src=null;
this.type=null;
this.id=null;
this.maintainOrder=false;
this.callback=null;
this.data=null;
this.method=createjs.LoadItem.GET;
this.values=null;
this.headers=null;
this.withCredentials=false;
this.mimeType=null;
this.crossOrigin="Anonymous";
this.loadTimeout=8000;
};
var p=LoadItem.prototype={};
var s=LoadItem;
s.create=function(value){
if(typeof value=="string"){
var item=new LoadItem();
item.src=value;
return item;
}else if(value instanceof s){
return value;
}else if(value instanceof Object){
return value;
}else{
throw new Error("Type not recognized.");
}
};
p.set=function(props){
for(var n in props){this[n]=props[n];}
return this;
};
createjs.LoadItem=s;
}());
(function(){
var s={};
s.ABSOLUTE_PATT=/^(?:\w+:)?\/{2}/i;
s.RELATIVE_PATT='';
s.EXTENSION_PATT=/\/?[^/]+\.(\w{1,5})$/i;
s.parseURI=function(path){
var info={absolute:false,relative:false};
if(path==null){return info;}
var queryIndex=path.indexOf("?");
if(queryIndex>-1){
path=path.substr(0,queryIndex);
}
var match;
if(s.ABSOLUTE_PATT.test(path)){
info.absolute=true;
}else if(s.RELATIVE_PATT.test(path)){
info.relative=true;
}
if(match=path.match(s.EXTENSION_PATT)){
info.extension=match[1].toLowerCase();
}
return info;
};
s.formatQueryString=function(data,query){
if(data==null){
throw new Error('You must specify data.');
}
var params=[];
for(var n in data){
params.push(n+'='+escape(data[n]));
}
if(query){
params=params.concat(query);
}
return params.join('&');
};
s.buildPath=function(src,data){
if(data==null){
return src;
}
var query=[];
var idx=src.indexOf('?');
if(idx!=-1){
var q=src.slice(idx+1);
query=query.concat(q.split('&'));
}
if(idx!=-1){
return src.slice(0,idx)+'?'+this._formatQueryString(data,query);
}else{
return src+'?'+this._formatQueryString(data,query);
}
};
s.isCrossDomain=function(item){
var target=document.createElement("a");
target.href=item.src;
var host=document.createElement("a");
host.href=location.href;
var crossdomain=(target.hostname!="")&&
(target.port!=host.port||
target.protocol!=host.protocol||
target.hostname!=host.hostname);
return crossdomain;
};
s.isLocal=function(item){
var target=document.createElement("a");
target.href=item.src;
return target.hostname==""&&target.protocol=="file:";
};
s.isBinary=function(type){
switch(type){
case createjs.AbstractLoader.IMAGE:
case createjs.AbstractLoader.BINARY:
return true;
default:
return false;
}
};
s.isImageTag=function(item){
return item instanceof HTMLImageElement;
};
s.isAudioTag=function(item){
if(window.HTMLAudioElement){
return item instanceof HTMLAudioElement;
}else{
return false;
}
};
s.isVideoTag=function(item){
if(window.HTMLVideoElement){
return item instanceof HTMLVideoElement;
}else{
false;
}
};
s.isText=function(type){
switch(type){
case createjs.AbstractLoader.TEXT:
case createjs.AbstractLoader.JSON:
case createjs.AbstractLoader.MANIFEST:
case createjs.AbstractLoader.XML:
case createjs.AbstractLoader.CSS:
case createjs.AbstractLoader.SVG:
case createjs.AbstractLoader.JAVASCRIPT:
return true;
default:
return false;
}
};
s.getTypeByExtension=function(extension){
if(extension==null){
return createjs.AbstractLoader.TEXT;
}
switch(extension.toLowerCase()){
case"jpeg":
case"jpg":
case"gif":
case"png":
case"webp":
case"bmp":
return createjs.AbstractLoader.IMAGE;
case"ogg":
case"mp3":
case"webm":
return createjs.AbstractLoader.SOUND;
case"mp4":
case"webm":
case"ts":
return createjs.AbstractLoader.VIDEO;
case"json":
return createjs.AbstractLoader.JSON;
case"xml":
return createjs.AbstractLoader.XML;
case"css":
return createjs.AbstractLoader.CSS;
case"js":
return createjs.AbstractLoader.JAVASCRIPT;
case'svg':
return createjs.AbstractLoader.SVG;
default:
return createjs.AbstractLoader.TEXT;
}
};
createjs.RequestUtils=s;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function AbstractLoader(loadItem,preferXHR,type){
this.EventDispatcher_constructor();
this.loaded=false;
this.canceled=false;
this.progress=0;
this.type=type;
this.resultFormatter=null;
if(loadItem){
this._item=createjs.LoadItem.create(loadItem);
}else{
this._item=null;
}
this._preferXHR=preferXHR;
this._result=null;
this._rawResult=null;
this._loadedItems=null;
this._tagSrcAttribute=null;
this._tag=null;
};
var p=createjs.extend(AbstractLoader,createjs.EventDispatcher);
var s=AbstractLoader;
s.POST="POST";
s.GET="GET";
s.BINARY="binary";
s.CSS="css";
s.IMAGE="image";
s.JAVASCRIPT="javascript";
s.JSON="json";
s.JSONP="jsonp";
s.MANIFEST="manifest";
s.SOUND="sound";
s.VIDEO="video";
s.SPRITESHEET="spritesheet";
s.SVG="svg";
s.TEXT="text";
s.XML="xml";
p.getItem=function(){
return this._item;
};
p.getResult=function(raw){
return raw?this._rawResult:this._result;
};
p.getTag=function(){
return this._tag;
};
p.setTag=function(tag){
this._tag=tag;
};
p.load=function(){
this._createRequest();
this._request.on("complete",this,this);
this._request.on("progress",this,this);
this._request.on("loadStart",this,this);
this._request.on("abort",this,this);
this._request.on("timeout",this,this);
this._request.on("error",this,this);
var evt=new createjs.Event("initialize");
evt.loader=this._request;
this.dispatchEvent(evt);
this._request.load();
};
p.cancel=function(){
this.canceled=true;
this.destroy();
};
p.destroy=function(){
if(this._request){
this._request.removeAllEventListeners();
this._request.destroy();
}
this._request=null;
this._item=null;
this._rawResult=null;
this._result=null;
this._loadItems=null;
this.removeAllEventListeners();
};
p.getLoadedItems=function(){
return this._loadedItems;
};
p._createRequest=function(){
if(!this._preferXHR){
this._request=new createjs.TagRequest(this._item,this._tag||this._createTag(),this._tagSrcAttribute);
}else{
this._request=new createjs.XHRRequest(this._item);
}
};
p._createTag=function(src){return null;};
p._sendLoadStart=function(){
if(this._isCanceled()){return;}
this.dispatchEvent("loadstart");
};
p._sendProgress=function(value){
if(this._isCanceled()){return;}
var event=null;
if(typeof(value)=="number"){
this.progress=value;
event=new createjs.ProgressEvent(this.progress);
}else{
event=value;
this.progress=value.loaded/value.total;
event.progress=this.progress;
if(isNaN(this.progress)||this.progress==Infinity){this.progress=0;}
}
this.hasEventListener("progress")&&this.dispatchEvent(event);
};
p._sendComplete=function(){
if(this._isCanceled()){return;}
this.loaded=true;
var event=new createjs.Event("complete");
event.rawResult=this._rawResult;
if(this._result!=null){
event.result=this._result;
}
this.dispatchEvent(event);
};
p._sendError=function(event){
if(this._isCanceled()||!this.hasEventListener("error")){return;}
if(event==null){
event=new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY");
}
this.dispatchEvent(event);
};
p._isCanceled=function(){
if(window.createjs==null||this.canceled){
return true;
}
return false;
};
p.resultFormatter=null;
p.handleEvent=function(event){
switch(event.type){
case"complete":
this._rawResult=event.target._response;
var result=this.resultFormatter&&this.resultFormatter(this);
var _this=this;
if(result instanceof Function){
result(function(result){
_this._result=result;
_this._sendComplete();
});
}else{
this._result=result||this._rawResult;
this._sendComplete();
}
break;
case"progress":
this._sendProgress(event);
break;
case"error":
this._sendError(event);
break;
case"loadstart":
this._sendLoadStart();
break;
case"abort":
case"timeout":
if(!this._isCanceled()){
this.dispatchEvent(event.type);
}
break;
}
};
p.buildPath=function(src,data){
return createjs.RequestUtils.buildPath(src,data);
};
p.toString=function(){
return"[PreloadJS AbstractLoader]";
};
createjs.AbstractLoader=createjs.promote(AbstractLoader,"EventDispatcher");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function AbstractMediaLoader(loadItem,preferXHR,type){
this.AbstractLoader_constructor(loadItem,preferXHR,type);
this.resultFormatter=this._formatResult;
this._tagSrcAttribute="src";
};
var p=createjs.extend(AbstractMediaLoader,createjs.AbstractLoader);
p.load=function(){
if(!this._tag){
this._tag=this._createTag(this._item.src);
}
this._tag.preload="auto";
this._tag.load();
this.AbstractLoader_load();
};
p._createTag=function(){};
p._createRequest=function(){
if(!this._preferXHR){
this._request=new createjs.MediaTagRequest(this._item,this._tag||this._createTag(),this._tagSrcAttribute);
}else{
this._request=new createjs.XHRRequest(this._item);
}
};
p._formatResult=function(loader){
this._tag.removeEventListener&&this._tag.removeEventListener("canplaythrough",this._loadedHandler);
this._tag.onstalled=null;
if(this._preferXHR){
loader.getTag().src=loader.getResult(true);
}
return loader.getTag();
};
createjs.AbstractMediaLoader=createjs.promote(AbstractMediaLoader,"AbstractLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractRequest=function(item){
this._item=item;
};
var p=createjs.extend(AbstractRequest,createjs.EventDispatcher);
p.load=function(){};
p.destroy=function(){};
p.cancel=function(){};
createjs.AbstractRequest=createjs.promote(AbstractRequest,"EventDispatcher");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function TagRequest(loadItem,tag,srcAttribute){
this.AbstractRequest_constructor(loadItem);
this._tag=tag;
this._tagSrcAttribute=srcAttribute;
this._loadedHandler=createjs.proxy(this._handleTagComplete,this);
this._addedToDOM=false;
this._startTagVisibility=null;
};
var p=createjs.extend(TagRequest,createjs.AbstractRequest);
p.load=function(){
if(this._tag.parentNode==null){
window.document.body.appendChild(this._tag);
this._addedToDOM=true;
}
this._tag.onload=createjs.proxy(this._handleTagComplete,this);
this._tag.onreadystatechange=createjs.proxy(this._handleReadyStateChange,this);
var evt=new createjs.Event("initialize");
evt.loader=this._tag;
this.dispatchEvent(evt);
this._hideTag();
this._tag[this._tagSrcAttribute]=this._item.src;
};
p.destroy=function(){
this._clean();
this._tag=null;
this.AbstractRequest_destroy();
};
p._handleReadyStateChange=function(){
clearTimeout(this._loadTimeout);
var tag=this._tag;
if(tag.readyState=="loaded"||tag.readyState=="complete"){
this._handleTagComplete();
}
};
p._handleTagComplete=function(){
this._rawResult=this._tag;
this._result=this.resultFormatter&&this.resultFormatter(this)||this._rawResult;
this._clean();
this._showTag();
this.dispatchEvent("complete");
};
p._clean=function(){
this._tag.onload=null;
this._tag.onreadystatechange=null;
if(this._addedToDOM&&this._tag.parentNode!=null){
this._tag.parentNode.removeChild(this._tag);
}
};
p._hideTag=function(){
this._startTagVisibility=this._tag.style.visibility;
this._tag.style.visibility="hidden";
};
p._showTag=function(){
this._tag.style.visibility=this._startTagVisibility;
};
p._handleStalled=function(){
};
createjs.TagRequest=createjs.promote(TagRequest,"AbstractRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function MediaTagRequest(loadItem,tag,srcAttribute){
this.AbstractRequest_constructor(loadItem);
this._tag=tag;
this._tagSrcAttribute=srcAttribute;
this._loadedHandler=createjs.proxy(this._handleTagComplete,this);
};
var p=createjs.extend(MediaTagRequest,createjs.TagRequest);
var s=MediaTagRequest;
p.load=function(){
this._tag.onstalled=createjs.proxy(this._handleStalled,this);
this._tag.onprogress=createjs.proxy(this._handleProgress,this);
this._tag.addEventListener&&this._tag.addEventListener("canplaythrough",this._loadedHandler,false);
this.TagRequest_load();
};
p._handleReadyStateChange=function(){
clearTimeout(this._loadTimeout);
var tag=this._tag;
if(tag.readyState=="loaded"||tag.readyState=="complete"){
this._handleTagComplete();
}
};
p._handleStalled=function(){
};
p._handleProgress=function(event){
if(!event||event.loaded>0&&event.total==0){
return;
}
var newEvent=new createjs.ProgressEvent(event.loaded,event.total);
this.dispatchEvent(newEvent);
};
p._clean=function(){
this._tag.removeEventListener&&this._tag.removeEventListener("canplaythrough",this._loadedHandler);
this._tag.onstalled=null;
this._tag.onprogress=null;
this.TagRequest__clean();
};
createjs.MediaTagRequest=createjs.promote(MediaTagRequest,"TagRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function XHRRequest(item){
this.AbstractRequest_constructor(item);
this._request=null;
this._loadTimeout=null;
this._xhrLevel=1;
this._response=null;
this._rawResponse=null;
this._canceled=false;
this._handleLoadStartProxy=createjs.proxy(this._handleLoadStart,this);
this._handleProgressProxy=createjs.proxy(this._handleProgress,this);
this._handleAbortProxy=createjs.proxy(this._handleAbort,this);
this._handleErrorProxy=createjs.proxy(this._handleError,this);
this._handleTimeoutProxy=createjs.proxy(this._handleTimeout,this);
this._handleLoadProxy=createjs.proxy(this._handleLoad,this);
this._handleReadyStateChangeProxy=createjs.proxy(this._handleReadyStateChange,this);
if(!this._createXHR(item)){
}
};
var p=createjs.extend(XHRRequest,createjs.AbstractRequest);
XHRRequest.ACTIVEX_VERSIONS=[
"Msxml2.XMLHTTP.6.0",
"Msxml2.XMLHTTP.5.0",
"Msxml2.XMLHTTP.4.0",
"MSXML2.XMLHTTP.3.0",
"MSXML2.XMLHTTP",
"Microsoft.XMLHTTP"
];
p.getResult=function(raw){
if(raw&&this._rawResponse){
return this._rawResponse;
}
return this._response;
};
p.cancel=function(){
this.canceled=true;
this._clean();
this._request.abort();
};
p.load=function(){
if(this._request==null){
this._handleError();
return;
}
this._request.addEventListener("loadstart",this._handleLoadStartProxy,false);
this._request.addEventListener("progress",this._handleProgressProxy,false);
this._request.addEventListener("abort",this._handleAbortProxy,false);
this._request.addEventListener("error",this._handleErrorProxy,false);
this._request.addEventListener("timeout",this._handleTimeoutProxy,false);
this._request.addEventListener("load",this._handleLoadProxy,false);
this._request.addEventListener("readystatechange",this._handleReadyStateChangeProxy,false);
if(this._xhrLevel==1){
this._loadTimeout=setTimeout(createjs.proxy(this._handleTimeout,this),this._item.loadTimeout);
}
try{
if(!this._item.values||this._item.method==createjs.AbstractLoader.GET){
this._request.send();
}else if(this._item.method==createjs.AbstractLoader.POST){
this._request.send(createjs.RequestUtils.formatQueryString(this._item.values));
}
}catch(error){
this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND",null,error));
}
};
p.setResponseType=function(type){
this._request.responseType=type;
};
p.getAllResponseHeaders=function(){
if(this._request.getAllResponseHeaders instanceof Function){
return this._request.getAllResponseHeaders();
}else{
return null;
}
};
p.getResponseHeader=function(header){
if(this._request.getResponseHeader instanceof Function){
return this._request.getResponseHeader(header);
}else{
return null;
}
};
p._handleProgress=function(event){
if(!event||event.loaded>0&&event.total==0){
return;
}
var newEvent=new createjs.ProgressEvent(event.loaded,event.total);
this.dispatchEvent(newEvent);
};
p._handleLoadStart=function(event){
clearTimeout(this._loadTimeout);
this.dispatchEvent("loadstart");
};
p._handleAbort=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED",null,event));
};
p._handleError=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent(event.message));
};
p._handleReadyStateChange=function(event){
if(this._request.readyState==4){
this._handleLoad();
}
};
p._handleLoad=function(event){
if(this.loaded){
return;
}
this.loaded=true;
var error=this._checkError();
if(error){
this._handleError(error);
return;
}
this._response=this._getResponse();
this._clean();
this.dispatchEvent(new createjs.Event("complete"));
};
p._handleTimeout=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT",null,event));
};
p._checkError=function(){
var status=parseInt(this._request.status);
switch(status){
case 404:
case 0:
return new Error(status);
}
return null;
};
p._getResponse=function(){
if(this._response!=null){
return this._response;
}
if(this._request.response!=null){
return this._request.response;
}
try{
if(this._request.responseText!=null){
return this._request.responseText;
}
}catch(e){
}
try{
if(this._request.responseXML!=null){
return this._request.responseXML;
}
}catch(e){
}
return null;
};
p._createXHR=function(item){
var crossdomain=createjs.RequestUtils.isCrossDomain(item);
var headers={};
var req=null;
if(window.XMLHttpRequest){
req=new XMLHttpRequest();
if(crossdomain&&req.withCredentials===undefined&&window.XDomainRequest){
req=new XDomainRequest();
}
}else{
for(var i=0,l=s.ACTIVEX_VERSIONS.length;i<l;i++){
var axVersion=s.ACTIVEX_VERSIONS[i];
try{
req=new ActiveXObject(axVersions);
break;
}catch(e){}
}
if(req==null){return false;}
}
if(item.mimeType&&req.overrideMimeType){
req.overrideMimeType(item.mimeType);
}
this._xhrLevel=(typeof req.responseType==="string")?2:1;
var src=null;
if(item.method==createjs.AbstractLoader.GET){
src=createjs.RequestUtils.buildPath(item.src,item.values);
}else{
src=item.src;
}
req.open(item.method||createjs.AbstractLoader.GET,src,true);
if(crossdomain&&req instanceof XMLHttpRequest&&this._xhrLevel==1){
headers["Origin"]=location.origin;
}
if(item.values&&item.method==createjs.AbstractLoader.POST){
headers["Content-Type"]="application/x-www-form-urlencoded";
}
if(!crossdomain&&!headers["X-Requested-With"]){
headers["X-Requested-With"]="XMLHttpRequest";
}
if(item.headers){
for(var n in item.headers){
headers[n]=item.headers[n];
}
}
for(n in headers){
req.setRequestHeader(n,headers[n])
}
if(req instanceof XMLHttpRequest&&item.withCredentials!==undefined){
req.withCredentials=item.withCredentials;
}
this._request=req;
return true;
};
p._clean=function(){
clearTimeout(this._loadTimeout);
this._request.removeEventListener("loadstart",this._handleLoadStartProxy);
this._request.removeEventListener("progress",this._handleProgressProxy);
this._request.removeEventListener("abort",this._handleAbortProxy);
this._request.removeEventListener("error",this._handleErrorProxy);
this._request.removeEventListener("timeout",this._handleTimeoutProxy);
this._request.removeEventListener("load",this._handleLoadProxy);
this._request.removeEventListener("readystatechange",this._handleReadyStateChangeProxy);
};
p.toString=function(){
return"[PreloadJS XHRRequest]";
};
createjs.XHRRequest=createjs.promote(XHRRequest,"AbstractRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function SoundLoader(loadItem,preferXHR){
this.AbstractMediaLoader_constructor(loadItem,preferXHR,createjs.AbstractLoader.SOUND);
if(createjs.RequestUtils.isAudioTag(loadItem)){
this._tag=loadItem;
}else if(createjs.RequestUtils.isAudioTag(loadItem.src)){
this._tag=loadItem;
}else if(createjs.RequestUtils.isAudioTag(loadItem.tag)){
this._tag=createjs.RequestUtils.isAudioTag(loadItem)?loadItem:loadItem.src;
}
if(this._tag!=null){
this._preferXHR=false;
}
};
var p=createjs.extend(SoundLoader,createjs.AbstractMediaLoader);
var s=SoundLoader;
s.canLoadItem=function(item){
return item.type==createjs.AbstractLoader.SOUND;
};
p._createTag=function(src){
var tag=document.createElement("audio");
tag.autoplay=false;
tag.preload="none";
tag.src=src;
return tag;
};
createjs.SoundLoader=createjs.promote(SoundLoader,"AbstractMediaLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Sound(){
throw"Sound cannot be instantiated";
}
var s=Sound;
s.INTERRUPT_ANY="any";
s.INTERRUPT_EARLY="early";
s.INTERRUPT_LATE="late";
s.INTERRUPT_NONE="none";
s.PLAY_INITED="playInited";
s.PLAY_SUCCEEDED="playSucceeded";
s.PLAY_INTERRUPTED="playInterrupted";
s.PLAY_FINISHED="playFinished";
s.PLAY_FAILED="playFailed";
s.SUPPORTED_EXTENSIONS=["mp3","ogg","mpeg","wav","m4a","mp4","aiff","wma","mid"];
s.EXTENSION_MAP={
m4a:"mp4"
};
s.FILE_PATTERN=/^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/;
s.defaultInterruptBehavior=s.INTERRUPT_NONE;
s.alternateExtensions=[];
s.activePlugin=null;
s._pluginsRegistered=false;
s._lastID=0;
s._masterVolume=1;
s._masterMute=false;
s._instances=[];
s._idHash={};
s._preloadHash={};
s.addEventListener=null;
s.removeEventListener=null;
s.removeAllEventListeners=null;
s.dispatchEvent=null;
s.hasEventListener=null;
s._listeners=null;
createjs.EventDispatcher.initialize(s);
s.getPreloadHandlers=function(){
return{
callback:createjs.proxy(s.initLoad,s),
types:["sound"],
extensions:s.SUPPORTED_EXTENSIONS
};
};
s._handleLoadComplete=function(event){
var src=event.target.getItem().src;
if(!s._preloadHash[src]){return;}
for(var i=0,l=s._preloadHash[src].length;i<l;i++){
var item=s._preloadHash[src][i];
s._preloadHash[src][i]=true;
if(!s.hasEventListener("fileload")){continue;}
var event=new createjs.Event("fileload");
event.src=item.src;
event.id=item.id;
event.data=item.data;
event.sprite=item.sprite;
s.dispatchEvent(event);
}
};
s._handleLoadError=function(event){
var src=event.target.getItem().src;
if(!s._preloadHash[src]){return;}
for(var i=0,l=s._preloadHash[src].length;i<l;i++){
var item=s._preloadHash[src][i];
s._preloadHash[src][i]=false;
if(!s.hasEventListener("fileerror")){continue;}
var event=new createjs.Event("fileerror");
event.src=item.src;
event.id=item.id;
event.data=item.data;
event.sprite=item.sprite;
s.dispatchEvent(event);
}
};
s._registerPlugin=function(plugin){
if(plugin.isSupported()){
s.activePlugin=new plugin();
return true;
}
return false;
};
s.registerPlugins=function(plugins){
s._pluginsRegistered=true;
for(var i=0,l=plugins.length;i<l;i++){
if(s._registerPlugin(plugins[i])){
return true;
}
}
return false;
};
s.initializeDefaultPlugins=function(){
if(s.activePlugin!=null){return true;}
if(s._pluginsRegistered){return false;}
if(s.registerPlugins([createjs.WebAudioPlugin,createjs.HTMLAudioPlugin])){return true;}
return false;
};
s.isReady=function(){
return(s.activePlugin!=null);
};
s.getCapabilities=function(){
if(s.activePlugin==null){return null;}
return s.activePlugin._capabilities;
};
s.getCapability=function(key){
if(s.activePlugin==null){return null;}
return s.activePlugin._capabilities[key];
};
s.initLoad=function(loadItem){
return s._registerSound(loadItem);
};
s._registerSound=function(loadItem){
if(!s.initializeDefaultPlugins()){return false;}
var details=s._parsePath(loadItem.src);
if(details==null){return false;}
loadItem.src=details.src;
loadItem.type="sound";
var data=loadItem.data;
var numChannels=s.activePlugin.defaultNumChannels||null;
if(data!=null){
if(!isNaN(data.channels)){
numChannels=parseInt(data.channels);
}else if(!isNaN(data)){
numChannels=parseInt(data);
}
if(data.audioSprite){
var sp;
for(var i=data.audioSprite.length;i--;){
sp=data.audioSprite[i];
s._idHash[sp.id]={src:loadItem.src,startTime:parseInt(sp.startTime),duration:parseInt(sp.duration)};
}
}
}
if(loadItem.id!=null){s._idHash[loadItem.id]={src:loadItem.src}};
var loader=s.activePlugin.register(loadItem,numChannels);
SoundChannel.create(loadItem.src,numChannels);
if(data==null||!isNaN(data)){
loadItem.data=numChannels||SoundChannel.maxPerChannel();
}else{
loadItem.data.channels=numChannels||SoundChannel.maxPerChannel();
}
if(loader.type){loadItem.type=loader.type;}
return loader;
};
s.registerSound=function(src,id,data,basePath){
var loadItem={src:src,id:id,data:data};
if(src instanceof Object){
basePath=id;
loadItem=src;
}
loadItem=createjs.LoadItem.create(loadItem);
if(basePath!=null){loadItem.src=basePath+src;}
var loader=s._registerSound(loadItem);
if(!loader){return false;}
if(!s._preloadHash[loadItem.src]){s._preloadHash[loadItem.src]=[];}
s._preloadHash[loadItem.src].push(loadItem);
if(s._preloadHash[loadItem.src].length==1){
loader.on("complete",createjs.proxy(this._handleLoadComplete,this));
loader.on("error",createjs.proxy(this._handleLoadError,this));
s.activePlugin.preload(loader);
}else{
if(s._preloadHash[loadItem.src][0]==true){return true;}
}
return loadItem;
};
s.registerSounds=function(sounds,basePath){
var returnValues=[];
if(sounds.path){
if(!basePath){
basePath=sounds.path;
}else{
basePath=basePath+sounds.path;
}
}
for(var i=0,l=sounds.length;i<l;i++){
returnValues[i]=createjs.Sound.registerSound(sounds[i].src,sounds[i].id,sounds[i].data,basePath);
}
return returnValues;
};
s.registerManifest=function(manifest,basePath){
try{
console.log("createjs.Sound.registerManifest is deprecated, please use createjs.Sound.registerSounds.")
}catch(error){
};
return this.registerSounds(manifest,basePath);
};
s.removeSound=function(src,basePath){
if(s.activePlugin==null){return false;}
if(src instanceof Object){src=src.src;}
src=s._getSrcById(src).src;
if(basePath!=null){src=basePath+src;}
var details=s._parsePath(src);
if(details==null){return false;}
src=details.src;
for(var prop in s._idHash){
if(s._idHash[prop].src==src){
delete(s._idHash[prop]);
}
}
SoundChannel.removeSrc(src);
delete(s._preloadHash[src]);
s.activePlugin.removeSound(src);
return true;
};
s.removeSounds=function(sounds,basePath){
var returnValues=[];
if(sounds.path){
if(!basePath){
basePath=sounds.path;
}else{
basePath=basePath+sounds.path;
}
}
for(var i=0,l=sounds.length;i<l;i++){
returnValues[i]=createjs.Sound.removeSound(sounds[i].src,basePath);
}
return returnValues;
};
s.removeManifest=function(manifest,basePath){
try{
console.log("createjs.Sound.removeManifest is deprecated, please use createjs.Sound.removeSounds.");
}catch(error){
};
return s.removeSounds(manifest,basePath);
};
s.removeAllSounds=function(){
s._idHash={};
s._preloadHash={};
SoundChannel.removeAll();
if(s.activePlugin){s.activePlugin.removeAllSounds();}
};
s.loadComplete=function(src){
if(!s.isReady()){return false;}
var details=s._parsePath(src);
if(details){
src=s._getSrcById(details.src).src;
}else{
src=s._getSrcById(src).src;
}
return(s._preloadHash[src][0]==true);
};
s._parsePath=function(value){
if(typeof(value)!="string"){value=value.toString();}
var match=value.match(s.FILE_PATTERN);
if(match==null){return false;}
var name=match[4];
var ext=match[5];
var c=s.getCapabilities();
var i=0;
while(!c[ext]){
ext=s.alternateExtensions[i++];
if(i>s.alternateExtensions.length){return null;}
}
value=value.replace("."+match[5],"."+ext);
var ret={name:name,src:value,extension:ext};
return ret;
};
s.play=function(src,interrupt,delay,offset,loop,volume,pan,startTime,duration){
if(interrupt instanceof Object){
delay=interrupt.delay;
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
startTime=interrupt.startTime;
duration=interrupt.duration;
interrupt=interrupt.interrupt;
}
var instance=s.createInstance(src,startTime,duration);
var ok=s._playInstance(instance,interrupt,delay,offset,loop,volume,pan);
if(!ok){instance._playFailed();}
return instance;
};
s.createInstance=function(src,startTime,duration){
if(!s.initializeDefaultPlugins()){return new createjs.DefaultSoundInstance(src,startTime,duration);}
src=s._getSrcById(src);
var details=s._parsePath(src.src);
var instance=null;
if(details!=null&&details.src!=null){
SoundChannel.create(details.src);
if(startTime==null){startTime=src.startTime;}
instance=s.activePlugin.create(details.src,startTime,duration||src.duration);
}else{
instance=new createjs.DefaultSoundInstance(src,startTime,duration);;
}
instance.uniqueId=s._lastID++;
return instance;
};
s.setVolume=function(value){
if(Number(value)==null){return false;}
value=Math.max(0,Math.min(1,value));
s._masterVolume=value;
if(!this.activePlugin||!this.activePlugin.setVolume||!this.activePlugin.setVolume(value)){
var instances=this._instances;
for(var i=0,l=instances.length;i<l;i++){
instances[i].setMasterVolume(value);
}
}
};
s.getVolume=function(){
return s._masterVolume;
};
s.setMute=function(value){
if(value==null){return false;}
this._masterMute=value;
if(!this.activePlugin||!this.activePlugin.setMute||!this.activePlugin.setMute(value)){
var instances=this._instances;
for(var i=0,l=instances.length;i<l;i++){
instances[i].setMasterMute(value);
}
}
return true;
};
s.getMute=function(){
return this._masterMute;
};
s.stop=function(){
var instances=this._instances;
for(var i=instances.length;i--;){
instances[i].stop();
}
};
s._playInstance=function(instance,interrupt,delay,offset,loop,volume,pan){
if(interrupt instanceof Object){
delay=interrupt.delay;
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
interrupt=interrupt.interrupt;
}
interrupt=interrupt||s.defaultInterruptBehavior;
if(delay==null){delay=0;}
if(offset==null){offset=instance.getPosition();}
if(loop==null){loop=instance.loop;}
if(volume==null){volume=instance.volume;}
if(pan==null){pan=instance.pan;}
if(delay==0){
var ok=s._beginPlaying(instance,interrupt,offset,loop,volume,pan);
if(!ok){return false;}
}else{
var delayTimeoutId=setTimeout(function(){
s._beginPlaying(instance,interrupt,offset,loop,volume,pan);
},delay);
instance.delayTimeoutId=delayTimeoutId;
}
this._instances.push(instance);
return true;
};
s._beginPlaying=function(instance,interrupt,offset,loop,volume,pan){
if(!SoundChannel.add(instance,interrupt)){
return false;
}
var result=instance._beginPlaying(offset,loop,volume,pan);
if(!result){
var index=createjs.indexOf(this._instances,instance);
if(index>-1){this._instances.splice(index,1);}
return false;
}
return true;
};
s._getSrcById=function(value){
return s._idHash[value]||{src:value};
};
s._playFinished=function(instance){
SoundChannel.remove(instance);
var index=createjs.indexOf(this._instances,instance);
if(index>-1){this._instances.splice(index,1);}
};
createjs.Sound=Sound;
function SoundChannel(src,max){
this.init(src,max);
}
SoundChannel.channels={};
SoundChannel.create=function(src,max){
var channel=SoundChannel.get(src);
if(channel==null){
SoundChannel.channels[src]=new SoundChannel(src,max);
return true;
}
return false;
};
SoundChannel.removeSrc=function(src){
var channel=SoundChannel.get(src);
if(channel==null){return false;}
channel._removeAll();
delete(SoundChannel.channels[src]);
return true;
};
SoundChannel.removeAll=function(){
for(var channel in SoundChannel.channels){
SoundChannel.channels[channel]._removeAll();
}
SoundChannel.channels={};
};
SoundChannel.add=function(instance,interrupt){
var channel=SoundChannel.get(instance.src);
if(channel==null){return false;}
return channel._add(instance,interrupt);
};
SoundChannel.remove=function(instance){
var channel=SoundChannel.get(instance.src);
if(channel==null){return false;}
channel._remove(instance);
return true;
};
SoundChannel.maxPerChannel=function(){
return p.maxDefault;
};
SoundChannel.get=function(src){
return SoundChannel.channels[src];
};
var p=SoundChannel.prototype;
p.constructor=SoundChannel;
p.src=null;
p.max=null;
p.maxDefault=100;
p.length=0;
p.init=function(src,max){
this.src=src;
this.max=max||this.maxDefault;
if(this.max==-1){this.max=this.maxDefault;}
this._instances=[];
};
p._get=function(index){
return this._instances[index];
};
p._add=function(instance,interrupt){
if(!this._getSlot(interrupt,instance)){return false;}
this._instances.push(instance);
this.length++;
return true;
};
p._remove=function(instance){
var index=createjs.indexOf(this._instances,instance);
if(index==-1){return false;}
this._instances.splice(index,1);
this.length--;
return true;
};
p._removeAll=function(){
for(var i=this.length-1;i>=0;i--){
this._instances[i].stop();
}
};
p._getSlot=function(interrupt,instance){
var target,replacement;
if(interrupt!=Sound.INTERRUPT_NONE){
replacement=this._get(0);
if(replacement==null){
return true;
}
}
for(var i=0,l=this.max;i<l;i++){
target=this._get(i);
if(target==null){
return true;
}
if(target.playState==Sound.PLAY_FINISHED||
target.playState==Sound.PLAY_INTERRUPTED||
target.playState==Sound.PLAY_FAILED){
replacement=target;
break;
}
if(interrupt==Sound.INTERRUPT_NONE){
continue;
}
if((interrupt==Sound.INTERRUPT_EARLY&&target.getPosition()<replacement.getPosition())||
(interrupt==Sound.INTERRUPT_LATE&&target.getPosition()>replacement.getPosition())){
replacement=target;
}
}
if(replacement!=null){
replacement._interrupt();
this._remove(replacement);
return true;
}
return false;
};
p.toString=function(){
return"[Sound SoundChannel]";
};
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractSoundInstance=function(src,startTime,duration,playbackResource){
this.EventDispatcher_constructor();
this.src=src;
this.uniqueId=-1;
this.playState=null;
this.delayTimeoutId=null;
this._startTime=Math.max(0,startTime||0);
this._volume=1;
if(createjs.definePropertySupported){
Object.defineProperty(this,"volume",{
get:this.getVolume,
set:this.setVolume
});
}
this._pan=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"pan",{
get:this.getPan,
set:this.setPan
});
}
this._duration=Math.max(0,duration||0);
if(createjs.definePropertySupported){
Object.defineProperty(this,"duration",{
get:this.getDuration,
set:this.setDuration
});
}
this._playbackResource=null;
if(createjs.definePropertySupported){
Object.defineProperty(this,"playbackResource",{
get:this.getPlaybackResource,
set:this.setPlaybackResource
});
}
if(playbackResource!==false&&playbackResource!==true){this.setPlaybackResource(playbackResource);}
this._position=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"position",{
get:this.getPosition,
set:this.setPosition
});
}
this._loop=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"loop",{
get:this.getLoop,
set:this.setLoop
});
}
this._muted=false;
if(createjs.definePropertySupported){
Object.defineProperty(this,"muted",{
get:this.getMuted,
set:this.setMuted
});
}
this._paused=false;
if(createjs.definePropertySupported){
Object.defineProperty(this,"paused",{
get:this.getPaused,
set:this.setPaused
});
}
};
var p=createjs.extend(AbstractSoundInstance,createjs.EventDispatcher);
p.play=function(interrupt,delay,offset,loop,volume,pan){
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
if(interrupt instanceof Object){
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
}
if(offset!=null){this.setPosition(offset)}
if(loop!=null){this.setLoop(loop);}
if(volume!=null){this.setVolume(volume);}
if(pan!=null){this.setPan(pan);}
if(this._paused){this.setPaused(false);}
return;
}
this._cleanUp();
createjs.Sound._playInstance(this,interrupt,delay,offset,loop,volume,pan);
return this;
};
p.pause=function(){
if(this._paused||this.playState!=createjs.Sound.PLAY_SUCCEEDED){return false;}
this.setPaused(true);
return true;
};
p.resume=function(){
if(!this._paused){return false;}
this.setPaused(false);
return true;
};
p.stop=function(){
this._position=0;
this._paused=false;
this._handleStop();
this._cleanUp();
this.playState=createjs.Sound.PLAY_FINISHED;
return this;
};
p.destroy=function(){
this._cleanUp();
this.src=null;
this.playbackResource=null;
this.removeAllEventListeners();
};
p.toString=function(){
return"[AbstractSoundInstance]";
};
p.getPaused=function(){
return this._paused;
};
p.setPaused=function(value){
if((value!==true&&value!==false)||this._paused==value){return;}
if(value==true&&this.playState!=createjs.Sound.PLAY_SUCCEEDED){return;}
this._paused=value;
if(value){
this._pause();
}else{
this._resume();
}
clearTimeout(this.delayTimeoutId);
return this;
};
p.setVolume=function(value){
if(value==this._volume){return this;}
this._volume=Math.max(0,Math.min(1,value));
if(!this._muted){
this._updateVolume();
}
return this;
};
p.getVolume=function(){
return this._volume;
};
p.setMute=function(value){
this.setMuted(value);
};
p.getMute=function(){
return this._muted;
};
p.setMuted=function(value){
if(value!==true&&value!==false){return;}
this._muted=value;
this._updateVolume();
return this;
};
p.getMuted=function(){
return this._muted;
};
p.setPan=function(value){
if(value==this._pan){return this;}
this._pan=Math.max(-1,Math.min(1,value));
this._updatePan();
return this;
};
p.getPan=function(){
return this._pan;
};
p.getPosition=function(){
if(!this._paused&&this.playState==createjs.Sound.PLAY_SUCCEEDED){
return this._calculateCurrentPosition();
}
return this._position;
};
p.setPosition=function(value){
this._position=Math.max(0,value);
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
this._updatePosition();
}
return this;
};
p.getDuration=function(){
return this._duration;
};
p.setDuration=function(value){
if(value==this._duration){return this;}
this._duration=Math.max(0,value||0);
this._updateDuration();
return this;
};
p.setPlaybackResource=function(value){
this._playbackResource=value;
if(this._duration==0){this._setDurationFromSource();}
return this;
};
p.getPlaybackResource=function(){
return this._playbackResource;
};
p.getLoop=function(){
return this._loop;
};
p.setLoop=function(value){
if(this._playbackResource!=null){
if(this._loop!=0&&value==0){
this._removeLooping(value);
}
if(this._loop==0&&value!=0){
this._addLooping(value);
}
}
this._loop=value;
};
p._sendEvent=function(type){
var event=new createjs.Event(type);
this.dispatchEvent(event);
};
p._cleanUp=function(){
clearTimeout(this.delayTimeoutId);
this._handleCleanUp();
this._paused=false;
createjs.Sound._playFinished(this);
};
p._interrupt=function(){
this._cleanUp();
this.playState=createjs.Sound.PLAY_INTERRUPTED;
this._sendEvent("interrupted");
};
p._beginPlaying=function(offset,loop,volume,pan){
this.setPosition(offset);
this.setLoop(loop);
this.setVolume(volume);
this.setPan(pan);
if(this._playbackResource!=null&&this._position<this._duration){
this._paused=false;
this._handleSoundReady();
this.playState=createjs.Sound.PLAY_SUCCEEDED;
this._sendEvent("succeeded");
return true;
}else{
this._playFailed();
return false;
}
};
p._playFailed=function(){
this._cleanUp();
this.playState=createjs.Sound.PLAY_FAILED;
this._sendEvent("failed");
};
p._handleSoundComplete=function(event){
this._position=0;
if(this._loop!=0){
this._loop--;
this._handleLoop();
this._sendEvent("loop");
return;
}
this._cleanUp();
this.playState=createjs.Sound.PLAY_FINISHED;
this._sendEvent("complete");
};
p._handleSoundReady=function(){
};
p._updateVolume=function(){
};
p._updatePan=function(){
};
p._updateDuration=function(){
};
p._setDurationFromSource=function(){
};
p._calculateCurrentPosition=function(){
};
p._updatePosition=function(){
};
p._removeLooping=function(){
};
p._addLooping=function(){
};
p._pause=function(){
};
p._resume=function(){
};
p._handleStop=function(){
};
p._handleCleanUp=function(){
};
p._handleLoop=function(){
};
createjs.AbstractSoundInstance=createjs.promote(AbstractSoundInstance,"EventDispatcher");
createjs.DefaultSoundInstance=createjs.AbstractSoundInstance;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractPlugin=function(){
this._capabilities=null;
this._loaders={};
this._audioSources={};
this._soundInstances={};
this._loaderClass;
this._soundInstanceClass;
};
var p=AbstractPlugin.prototype;
AbstractPlugin._capabilities=null;
AbstractPlugin.isSupported=function(){
return true;
};
p.register=function(loadItem,instances){
this._audioSources[loadItem.src]=true;
this._soundInstances[loadItem.src]=[];
if(this._loaders[loadItem.src]){return this._loaders[loadItem.src];}
var loader=new this._loaderClass(loadItem);
loader.on("complete",createjs.proxy(this._handlePreloadComplete,this));
this._loaders[loadItem.src]=loader;
return loader;
};
p.preload=function(loader){
loader.on("error",createjs.proxy(this._handlePreloadError,this));
loader.load();
};
p.isPreloadStarted=function(src){
return(this._audioSources[src]!=null);
};
p.isPreloadComplete=function(src){
return(!(this._audioSources[src]==null||this._audioSources[src]==true));
};
p.removeSound=function(src){
if(!this._soundInstances[src]){return;}
for(var i=this._soundInstances[src].length;i--;){
var item=this._soundInstances[src][i];
item.destroy();
}
delete(this._soundInstances[src]);
delete(this._audioSources[src]);
if(this._loaders[src]){this._loaders[src].destroy();}
delete(this._loaders[src]);
};
p.removeAllSounds=function(){
for(var key in this._audioSources){
this.removeSound(key);
}
};
p.create=function(src,startTime,duration){
if(!this.isPreloadStarted(src)){
this.preload(this.register(src));
}
var si=new this._soundInstanceClass(src,startTime,duration,this._audioSources[src]);
this._soundInstances[src].push(si);
return si;
};
p.setVolume=function(value){
this._volume=value;
this._updateVolume();
return true;
};
p.getVolume=function(){
return this._volume;
};
p.setMute=function(value){
this._updateVolume();
return true;
};
p.toString=function(){
return"[AbstractPlugin]";
};
p._handlePreloadComplete=function(event){
var src=event.target.getItem().src;
this._audioSources[src]=event.result;
for(var i=0,l=this._soundInstances[src].length;i<l;i++){
var item=this._soundInstances[src][i];
item.setPlaybackResource(this._audioSources[src]);
}
};
p._handlePreloadError=function(event){
};
p._updateVolume=function(){
};
createjs.AbstractPlugin=AbstractPlugin;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Loader(loadItem){
this.AbstractLoader_constructor(loadItem,true,createjs.AbstractLoader.SOUND);
};
var p=createjs.extend(Loader,createjs.AbstractLoader);
Loader.context=null;
p.toString=function(){
return"[WebAudioLoader]";
};
p._createRequest=function(){
this._request=new createjs.XHRRequest(this._item,false);
this._request.setResponseType("arraybuffer");
};
p._sendComplete=function(event){
Loader.context.decodeAudioData(this._rawResult,
createjs.proxy(this._handleAudioDecoded,this),
createjs.proxy(this._handleError,this));
};
p._handleAudioDecoded=function(decodedAudio){
this._result=decodedAudio;
this.AbstractLoader__sendComplete();
};
createjs.WebAudioLoader=createjs.promote(Loader,"AbstractLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function WebAudioSoundInstance(src,startTime,duration,playbackResource){
this.AbstractSoundInstance_constructor(src,startTime,duration,playbackResource);
this.gainNode=s.context.createGain();
this.panNode=s.context.createPanner();
this.panNode.panningModel=s._panningModel;
this.panNode.connect(this.gainNode);
this.sourceNode=null;
this._soundCompleteTimeout=null;
this._sourceNodeNext=null;
this._playbackStartTime=0;
this._endedHandler=createjs.proxy(this._handleSoundComplete,this);
};
var p=createjs.extend(WebAudioSoundInstance,createjs.AbstractSoundInstance);
var s=WebAudioSoundInstance;
s.context=null;
s.destinationNode=null;
s._panningModel="equalpower";
p.destroy=function(){
this.AbstractSoundInstance_destroy();
this.panNode.disconnect(0);
this.panNode=null;
this.gainNode.disconnect(0);
this.gainNode=null;
};
p.toString=function(){
return"[WebAudioSoundInstance]";
};
p._updatePan=function(){
this.panNode.setPosition(this._pan,0,-0.5);
};
p._removeLooping=function(){
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
};
p._addLooping=function(){
if(this.playState!=createjs.Sound.PLAY_SUCCEEDED){return;}
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
};
p._setDurationFromSource=function(){
this._duration=this.playbackResource.duration*1000;
};
p._handleCleanUp=function(){
if(this.sourceNode&&this.playState==createjs.Sound.PLAY_SUCCEEDED){
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
}
if(this.gainNode.numberOfOutputs!=0){this.gainNode.disconnect(0);}
clearTimeout(this._soundCompleteTimeout);
this._playbackStartTime=0;
};
p._cleanUpAudioNode=function(audioNode){
if(audioNode){
audioNode.stop(0);
audioNode.disconnect(0);
audioNode=null;
}
return audioNode;
};
p._handleSoundReady=function(event){
this.gainNode.connect(s.destinationNode);
var dur=this._duration*0.001;
var pos=this._position*0.001;
this.sourceNode=this._createAndPlayAudioNode((s.context.currentTime-dur),pos);
this._playbackStartTime=this.sourceNode.startTime-pos;
this._soundCompleteTimeout=setTimeout(this._endedHandler,(dur-pos)*1000);
if(this._loop!=0){
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
}
};
p._createAndPlayAudioNode=function(startTime,offset){
var audioNode=s.context.createBufferSource();
audioNode.buffer=this.playbackResource;
audioNode.connect(this.panNode);
var dur=this._duration*0.001;
audioNode.startTime=startTime+dur;
audioNode.start(audioNode.startTime,offset+(this._startTime*0.001),dur-offset);
return audioNode;
};
p._pause=function(){
this._position=(s.context.currentTime-this._playbackStartTime)*1000;
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
if(this.gainNode.numberOfOutputs!=0){this.gainNode.disconnect(0);}
clearTimeout(this._soundCompleteTimeout);
};
p._resume=function(){
this._handleSoundReady();
};
p._updateVolume=function(){
var newVolume=this._muted?0:this._volume;
if(newVolume!=this.gainNode.gain.value){
this.gainNode.gain.value=newVolume;
}
};
p._calculateCurrentPosition=function(){
return((s.context.currentTime-this._playbackStartTime)*1000);
};
p._updatePosition=function(){
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
clearTimeout(this._soundCompleteTimeout);
if(!this._paused){this._handleSoundReady();}
};
p._handleLoop=function(){
this._cleanUpAudioNode(this.sourceNode);
this.sourceNode=this._sourceNodeNext;
this._playbackStartTime=this.sourceNode.startTime;
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
this._soundCompleteTimeout=setTimeout(this._endedHandler,this._duration);
};
p._updateDuration=function(){
this._pause();
this._resume();
};
createjs.WebAudioSoundInstance=createjs.promote(WebAudioSoundInstance,"AbstractSoundInstance");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function WebAudioPlugin(){
this.AbstractPlugin_constructor();
this._panningModel=s._panningModel;;
this._volume=1;
this.context=s.context;
this.dynamicsCompressorNode=this.context.createDynamicsCompressor();
this.dynamicsCompressorNode.connect(this.context.destination);
this.gainNode=this.context.createGain();
this.gainNode.connect(this.dynamicsCompressorNode);
createjs.WebAudioSoundInstance.destinationNode=this.gainNode;
this._capabilities=s._capabilities;
this._loaderClass=createjs.WebAudioLoader;
this._soundInstanceClass=createjs.WebAudioSoundInstance;
this._addPropsToClasses();
}
var p=createjs.extend(WebAudioPlugin,createjs.AbstractPlugin);
var s=WebAudioPlugin;
s._capabilities=null;
s._panningModel="equalpower";
s.context=null;
s.isSupported=function(){
var isMobilePhoneGap=createjs.BrowserDetect.isIOS||createjs.BrowserDetect.isAndroid||createjs.BrowserDetect.isBlackberry;
if(location.protocol=="file:"&&!isMobilePhoneGap&&!this._isFileXHRSupported()){return false;}
s._generateCapabilities();
if(s.context==null){return false;}
return true;
};
s.playEmptySound=function(){
var source=s.context.createBufferSource();
source.buffer=s.context.createBuffer(1,1,22050);
source.connect(s.context.destination);
source.start(0,0,0);
};
s._isFileXHRSupported=function(){
var supported=true;
var xhr=new XMLHttpRequest();
try{
xhr.open("GET","WebAudioPluginTest.fail",false);
}catch(error){
supported=false;
return supported;
}
xhr.onerror=function(){supported=false;};
xhr.onload=function(){supported=this.status==404||(this.status==200||(this.status==0&&this.response!=""));};
try{
xhr.send();
}catch(error){
supported=false;
}
return supported;
};
s._generateCapabilities=function(){
if(s._capabilities!=null){return;}
var t=document.createElement("audio");
if(t.canPlayType==null){return null;}
if(s.context==null){
if(window.AudioContext){
s.context=new AudioContext();
}else if(window.webkitAudioContext){
s.context=new webkitAudioContext();
}else{
return null;
}
}
s._compatibilitySetUp();
s.playEmptySound();
s._capabilities={
panning:true,
volume:true,
tracks:-1
};
var supportedExtensions=createjs.Sound.SUPPORTED_EXTENSIONS;
var extensionMap=createjs.Sound.EXTENSION_MAP;
for(var i=0,l=supportedExtensions.length;i<l;i++){
var ext=supportedExtensions[i];
var playType=extensionMap[ext]||ext;
s._capabilities[ext]=(t.canPlayType("audio/"+ext)!="no"&&t.canPlayType("audio/"+ext)!="")||(t.canPlayType("audio/"+playType)!="no"&&t.canPlayType("audio/"+playType)!="");
}
if(s.context.destination.numberOfChannels<2){
s._capabilities.panning=false;
}
};
s._compatibilitySetUp=function(){
s._panningModel="equalpower";
if(s.context.createGain){return;}
s.context.createGain=s.context.createGainNode;
var audioNode=s.context.createBufferSource();
audioNode.__proto__.start=audioNode.__proto__.noteGrainOn;
audioNode.__proto__.stop=audioNode.__proto__.noteOff;
s._panningModel=0;
};
p.toString=function(){
return"[WebAudioPlugin]";
};
p._addPropsToClasses=function(){
var c=this._soundInstanceClass;
c.context=this.context;
c.destinationNode=this.gainNode;
c._panningModel=this._panningModel;
this._loaderClass.context=this.context;
};
p._updateVolume=function(){
var newVolume=createjs.Sound._masterMute?0:this._volume;
if(newVolume!=this.gainNode.gain.value){
this.gainNode.gain.value=newVolume;
}
};
createjs.WebAudioPlugin=createjs.promote(WebAudioPlugin,"AbstractPlugin");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function TagPool(src){
this.src=src;
this.length=0;
this.available=0;
this.tags=[];
this.duration=0;
};
var p=TagPool.prototype;
p.constructor=TagPool;
var s=TagPool;
s.tags={};
s.get=function(src){
var channel=s.tags[src];
if(channel==null){
channel=s.tags[src]=new TagPool(src);
}
return channel;
};
s.remove=function(src){
var channel=s.tags[src];
if(channel==null){return false;}
channel.removeAll();
delete(s.tags[src]);
return true;
};
s.getInstance=function(src){
var channel=s.tags[src];
if(channel==null){return null;}
return channel.get();
};
s.setInstance=function(src,tag){
var channel=s.tags[src];
if(channel==null){return null;}
return channel.set(tag);
};
s.getDuration=function(src){
var channel=s.tags[src];
if(channel==null){return 0;}
return channel.getDuration();
};
p.add=function(tag){
this.tags.push(tag);
this.length++;
this.available++;
};
p.removeAll=function(){
var tag;
while(this.length--){
tag=this.tags[this.length];
if(tag.parentNode){
tag.parentNode.removeChild(tag);
}
delete(this.tags[this.length]);
}
this.src=null;
this.tags.length=0;
};
p.get=function(){
if(this.tags.length==0){return null;}
this.available=this.tags.length;
var tag=this.tags.pop();
if(tag.parentNode==null){document.body.appendChild(tag);}
return tag;
};
p.set=function(tag){
var index=createjs.indexOf(this.tags,tag);
if(index==-1){this.tags.push(tag);}
this.available=this.tags.length;
};
p.getDuration=function(){
if(!this.duration){this.duration=this.tags[this.tags.length-1].duration*1000;}
return this.duration;
};
p.toString=function(){
return"[HTMLAudioTagPool]";
};
createjs.HTMLAudioTagPool=TagPool;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function HTMLAudioSoundInstance(src,startTime,duration,playbackResource){
this.AbstractSoundInstance_constructor(src,startTime,duration,playbackResource);
this._audioSpriteStopTime=null;
this._delayTimeoutId=null;
this._endedHandler=createjs.proxy(this._handleSoundComplete,this);
this._readyHandler=createjs.proxy(this._handleTagReady,this);
this._stalledHandler=createjs.proxy(this.playFailed,this);
this._audioSpriteEndHandler=createjs.proxy(this._handleAudioSpriteLoop,this);
this._loopHandler=createjs.proxy(this._handleSoundComplete,this);
if(duration){
this._audioSpriteStopTime=(startTime+duration)*0.001;
}else{
this._duration=createjs.HTMLAudioTagPool.getDuration(this.src);
}
}
var p=createjs.extend(HTMLAudioSoundInstance,createjs.AbstractSoundInstance);
p.setMasterVolume=function(value){
this._updateVolume();
};
p.setMasterMute=function(isMuted){
this._updateVolume();
};
p.toString=function(){
return"[HTMLAudioSoundInstance]";
};
p._removeLooping=function(){
if(this._playbackResource==null){return;}
this._playbackResource.loop=false;
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
};
p._addLooping=function(){
if(this._playbackResource==null||this._audioSpriteStopTime){return;}
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.loop=true;
};
p._handleCleanUp=function(){
var tag=this._playbackResource;
if(tag!=null){
tag.pause();
tag.loop=false;
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
try{
tag.currentTime=this._startTime;
}catch(e){
}
createjs.HTMLAudioTagPool.setInstance(this.src,tag);
this._playbackResource=null;
}
};
p._beginPlaying=function(offset,loop,volume,pan){
this._playbackResource=createjs.HTMLAudioTagPool.getInstance(this.src);
return this.AbstractSoundInstance__beginPlaying(offset,loop,volume,pan);
};
p._handleSoundReady=function(event){
if(this._playbackResource.readyState!==4){
var tag=this._playbackResource;
tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
tag.preload="auto";
tag.load();
return;
}
this._updateVolume();
this._playbackResource.currentTime=(this._startTime+this._position)*0.001;
if(this._audioSpriteStopTime){
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
}else{
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
if(this._loop!=0){
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.loop=true;
}
}
this._playbackResource.play();
};
p._handleTagReady=function(event){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
this._handleSoundReady();
};
p._pause=function(){
this._playbackResource.pause();
};
p._resume=function(){
this._playbackResource.play();
};
p._updateVolume=function(){
if(this._playbackResource!=null){
var newVolume=(this._muted||createjs.Sound._masterMute)?0:this._volume*createjs.Sound._masterVolume;
if(newVolume!=this._playbackResource.volume){this._playbackResource.volume=newVolume;}
}
};
p._calculateCurrentPosition=function(){
return(this._playbackResource.currentTime*1000)-this._startTime;
};
p._updatePosition=function(){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._handleSetPositionSeek,false);
try{
this._playbackResource.currentTime=(this._position+this._startTime)*0.001;
}catch(error){
this._handleSetPositionSeek(null);
}
};
p._handleSetPositionSeek=function(event){
if(this._playbackResource==null){return;}
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._handleSetPositionSeek,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
};
p._handleAudioSpriteLoop=function(event){
if(this._playbackResource.currentTime<=this._audioSpriteStopTime){return;}
this._playbackResource.pause();
if(this._loop==0){
this._handleSoundComplete(null);
}else{
this._position=0;
this._loop--;
this._playbackResource.currentTime=this._startTime*0.001;
if(!this._paused){this._playbackResource.play();}
this._sendEvent("loop");
}
};
p._handleLoop=function(event){
if(this._loop==0){
this._playbackResource.loop=false;
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
}
};
p._updateDuration=function(){
this._audioSpriteStopTime=(startTime+duration)*0.001;
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
}
};
createjs.HTMLAudioSoundInstance=createjs.promote(HTMLAudioSoundInstance,"AbstractSoundInstance");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function HTMLAudioPlugin(){
this.AbstractPlugin_constructor();
this.defaultNumChannels=2;
this._capabilities=s._capabilities;
this._loaderClass=createjs.SoundLoader;
this._soundInstanceClass=createjs.HTMLAudioSoundInstance;
}
var p=createjs.extend(HTMLAudioPlugin,createjs.AbstractPlugin);
var s=HTMLAudioPlugin;
s.MAX_INSTANCES=30;
s._AUDIO_READY="canplaythrough";
s._AUDIO_ENDED="ended";
s._AUDIO_SEEKED="seeked";
s._AUDIO_STALLED="stalled";
s._TIME_UPDATE="timeupdate";
s._capabilities=null;
s.enableIOS=false;
s.isSupported=function(){
s._generateCapabilities();
if(s._capabilities==null){return false;}
return true;
};
s._generateCapabilities=function(){
if(s._capabilities!=null){return;}
var t=document.createElement("audio");
if(t.canPlayType==null){return null;}
s._capabilities={
panning:true,
volume:true,
tracks:-1
};
var supportedExtensions=createjs.Sound.SUPPORTED_EXTENSIONS;
var extensionMap=createjs.Sound.EXTENSION_MAP;
for(var i=0,l=supportedExtensions.length;i<l;i++){
var ext=supportedExtensions[i];
var playType=extensionMap[ext]||ext;
s._capabilities[ext]=(t.canPlayType("audio/"+ext)!="no"&&t.canPlayType("audio/"+ext)!="")||(t.canPlayType("audio/"+playType)!="no"&&t.canPlayType("audio/"+playType)!="");
}
};
p.register=function(loadItem,instances){
var channel=createjs.HTMLAudioTagPool.get(loadItem.src);
var tag=null;
for(var i=0;i<instances;i++){
tag=this._createTag(loadItem.src);
channel.add(tag);
}
var loader=this.AbstractPlugin_register(loadItem,instances);
loader.setTag(tag);
return loader;
};
p.removeSound=function(src){
this.AbstractPlugin_removeSound(src);
createjs.HTMLAudioTagPool.remove(src);
};
p.create=function(src,startTime,duration){
var si=this.AbstractPlugin_create(src,startTime,duration);
si.setPlaybackResource(null);
return si;
};
p.toString=function(){
return"[HTMLAudioPlugin]";
};
p.setVolume=p.getVolume=p.setMute=null;
p._createTag=function(src){
var tag=document.createElement("audio");
tag.autoplay=false;
tag.preload="none";
tag.src=src;
return tag;
};
createjs.HTMLAudioPlugin=createjs.promote(HTMLAudioPlugin,"AbstractPlugin");
}());
GodStep.FPS=function(soul,color,alpha){
GodStep.Frame.call(this,'FPS',soul.W,soul.H);
this.addChild(this.text=new GodStep.Text('0',55*this.startS,'Arial','left',color||0x000000));
this.startTime=Date.now();
this.addString((soul.CANVAS)?'C':'W');
this.alpha=alpha;
this.soul=soul;
this.prevTime=this.startTime;
this.msMin=Infinity;
this.msMax=0;
this.fpsMin=Infinity;
this.fpsMax=0;
this.frames=0;
this.lastValue=0;
if(alpha==0)visible=false;
};
extend(GodStep.FPS,GodStep.Frame);
pro.addString=function(v){
this.plusString=v;
};
pro.end=function(){
var time=Date.now();
var ms=time-this.startTime;
this.msMin=Math.min(this.msMin,ms);
this.msMax=Math.max(this.msMax,ms);
if(time>this.prevTime+100){
var fps=Math.round((this.frames*1000)/(time-this.prevTime));
this.lastValue+=(fps-this.lastValue)*.3;
this.fpsMin=Math.min(this.fpsMin,this.lastValue);
this.fpsMax=Math.max(this.fpsMax,this.lastValue);
this.text.setText(Math.round(this.lastValue)+" "+this.plusString);
this.prevTime=time;
this.frames=0;
}
this.frames++;
};
pro.begin=function(){
this.startTime=Date.now();
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=1;
this.text.updateText();
this.y=this.soul.H-this.text.height+(this.soul.OH-this.soul.H)+this.soul.H*.015*this.soul.startS;
this.x=this.soul.W*.02*this.soul.startS;
}
});
GodStep.Text=function(t,size,font,align,color){
this.font=font||'Arial';
this.size=size||15;
this.align=(align||"center");
PIXI.Text.call(this,t,{font:this.size+"px "+this.font,align:this.align,fill:(color)?('#'+color.toString(16)):'#000000'});
};
extend(GodStep.Text,PIXI.Text);
pro.place=function(x,y){
this.x=x;
this.y=y;
};
pro.centerX=function(w,y){
this.y=y;
this.x=w/2-this.width/2;
};
pro.setColor=function(color){
this.style.fill='#'+color.toString(16);
};
pro.setFont=function(font){
this.font=font;
this.style.font=this.size+'px '+this.font;
this.updateText();
};
pro.setSize=function(size){
this.size=size;
this.style.font=this.size+'px '+this.font;
this.updateText();
};
GodStep.LocalStorage=function(){
GodStep.LocalStorage.instance=this;
try{
if('localStorage'in window&&window['localStorage']!==null){
this.storage=window['localStorage'];
window.addEventListener("storage",this.h_storage,false);
this.isAvailable=true;
}
}catch(e){
this.isAvailable=false;
}
};
extend(GodStep.LocalStorage,Object);
pro.getData=function(slot){
if(!this.isAvailable){
return null;
}
var data=this.storage.getItem(slot||"data");
if(data!=null)return JSON.parse(data);
else{
trace('no data');
return null;
}
};
pro.setData=function(data,slot){
if(!this.isAvailable)return;
var d=JSON.stringify(data);
trace('local storage ['+(slot||'data')+']');
trace(d);
try{
this.storage.setItem(slot||"data",d);
}catch(e){
trace('LOCAL STORAGE ERROR');
}
};
GodStep.Clear=function(slot){
GodStep.LocalStorage.instance.setData(null,slot);
};
GodStep.SaveLocal=function(data,slot){
GodStep.LocalStorage.instance.setData(data,slot);
};
GodStep.LoadText=function(text){
return JSON.parse(text);
};
GodStep.LoadLocal=function(slot){
return GodStep.LocalStorage.instance.getData(slot);
};
pro.h_storage=function(e){
trace('storage'+e);
};
Games.Cell=function(xi,yi,w,h){
this.xi=xi;
this.yi=yi;
this.guests=[];
GodStep.Frame.call(this,'Cell['+xi+", "+yi+']',w,h);
GodStep.IDownUp.call(this,w,h);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
};
Games.CELL_UP='cellup';
Games.CELL_DOWN='celldown';
Games.CELL_CLICK='cellclick';
extend(Games.Cell,GodStep.Frame);
pro.h_mouse=function(e){
var t=e.target;
switch(e.type){
case GodStep.FRAME_UP:
dispatch(t,Games.CELL_UP);
break;
case GodStep.FRAME_DOWN:
dispatch(t,Games.CELL_DOWN);
break;
}
};
Games.CellField=function(xc,yc,w,h,cellClass,startS){
GodStep.Frame.call(this,'CellField',w,h);
GodStep.IDownUp.call(this,w,h);
this.startS=startS;
this.cellCountX=xc;
this.cellCountY=yc;
this.cellClass=cellClass;
this.addChild(this.cellContainer=new PIXI.DisplayObjectContainer());
this.addChild(this.objectContainer=new PIXI.DisplayObjectContainer());
this.initField();
};extend(Games.CellField,GodStep.Frame);
pro.initField=function(countX,countY,cW,cH){
var row;
this.cells=[];
this.cellsXY=[];
var cellW=this.cellW=cW||this.W/this.cellCountX;
var cellH=this.cellH=cH||this.H/this.cellCountY;
this.cellCountX=countX||this.cellCountX;
this.cellCountY=countY||this.cellCountY;
var maxW=0,maxH=0;
for(var i=0;i<this.cellCountY;i++){
this.cellsXY.push(row=[]);
for(var j=0;j<this.cellCountX;j++){
if(this.cellClass){
var cell=new this.cellClass(j,i,cellW,cellH,this.startS);
this.addCell(cell,cellW,cellH);
maxW=Math.max(cell.x,maxW);
maxH=Math.max(cell.y,maxH);
addEvent(cell,Games.CELL_UP,this.h_cells);
addEvent(cell,Games.CELL_DOWN,this.h_cells);
}
}
}
};
pro.addCell=function(cell,cellW,cellH){
this.cells.push(cell);this.cellsXY[cell.yi][cell.xi]=cell;
this.addFrame(cell,this.cellContainer);
cell.x=cell.xi*cellW;
cell.y=cell.yi*cellH;
};
pro.getCell=function(xi,yi){
return this.cells[xi+yi*this.cellCountX];
};
pro.h_cells=function(e){
var t=e.target;
var p=t.parent.parent;
switch(e.type){
case Games.CELL_DOWN:
dispatch(p,Games.CELL_DOWN,t);
break;
case Games.CELL_UP:
dispatch(p,Games.CELL_UP,t);
break;
}
};
Games.Transmission=function(soul,speed,color){
this.soul=soul;
this.color=color||GodStep.COLOR_STAGE;
GodStep.Frame.call(this,'Transmission',soul.SW,soul.SH);
this.startS=this.soul.startS;
this.create();
this.timerCache=-1;
this.speed=speed||0.1;
this.cacheAsBitmap=true;
this.visible=false;
this.graphics.scale.y=this.graphics.oS=this.soul.SH/this.graphics.height*soul.assets.Scale;
};
extend(Games.Transmission,GodStep.Frame);
pro.create=function(){
this.createGraphics();
this.rect(this.W,this.H,this.color,1,0,0);
};
pro.start=function(screenArr,outScreen){
if(!this.isStarted){
this.screens=screenArr;
this.outScreen=outScreen;
this.isStarted=true;
this.isGoesUp=true;
this.alpha=0;
this.visible=true;
}
};
pro.update=function(){
if(this.timerCache--==0){
this.timerCache=-1;
var vis=this.visible;
var a=this.alpha;
this.cacheAsBitmap=false;
this.visible=true;
this.alpha=1;
this.cacheAsBitmap=true;
this.visible=vis;
this.alpha=a;
}
if(this.isStarted){
if(this.isGoesUp){
this.alpha+=this.speed;
if(this.alpha>1){
this.alpha=1;
this.isGoesUp=false;
if(this.outScreen.isOnlyOneView){
this.outScreen.destrukt();
}
this.outScreen.visible=false;
for(var s in this.screens){
this.screens[s].init();
}
}
}else{
this.alpha-=this.speed;
if(this.alpha<=0){
this.alpha=0;
this.visible=false;
this.isStarted=false;
}
}
}
};
pro.reskin=function(c){
this.cacheAsBitmap=false;
var vis=this.visible;
this.visible=true;
var a=this.alpha;
this.alpha=1;
this.graphics.clear();
this.rect(this.W,this.H,c,1,0,0);
this.cacheAsBitmap=true;
this.visible=vis;
this.alpha=a;
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.cacheAsBitmap=false;
this.timerCache=25;
this.graphics.y=(this.FULLRESIZE)?0:-(this.soul.OH-this.soul.H)*.5/value;
this.graphics.scale.y=this.graphics.oS*this.soul.OH/this.soul.H;
this.graphics.scale.x=this.graphics.oS*(this.soul.FULLRESIZE?(this.soul.OW/this.soul.W):1);
}
});
GodStep.BitmapText=function(text,size,x,y,align,tint,font){
PIXI.BitmapText.call(this,text,{font:parseInt(size)+"px "+(font?font:"Font"),align:align||"left"});
this.x=x;
this.y=y;
if(tint)this.tint=tint;
this.updateText();
};
extend(GodStep.BitmapText,PIXI.BitmapText);
Games.TextButton=function(text,size,color,px,py){
GodStep.Frame.call(this,null,0,0);
this.color=color;
this.addChild(this.back=new PIXI.Graphics());
this.addChild(this.text=new GodStep.Text(text,size*2,'Arial','left',0xffffff));
this.text.x=-this.text.width/2;
this.text.y=-this.text.height/2;
this.W=this.text.width*1.5;
this.H=this.text.height*1.5;
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.isSelected=false;
this.redraw();
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(Games.TextButton,GodStep.Frame);
pro.destroy=function(){
this.removeChild(this.back);
this.removeChild(this.text);
return this;
};
pro.redraw=function(){
var g=this.back;
g.clear();
g.beginFill(this.color,1);
if(this.isSelected){
g.lineStyle(2,0xffffff,1);
}
g.drawRect(-this.W/2,-this.H/2,this.W,this.H);
g.endFill();
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
this.Scale=.9;
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,Games.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.Scale=1;
break;
case GodStep.FRAME_OVER:
if(this.isDown){
this.Scale=.9;
}
break;
}
};
Object.defineProperty(pro,'Selected',{
get:function(){
return this.isSelected;
},
set:function(value){
this.isSelected=value;
this.redraw();
}
});
Games.ImgButton=function(img,parent,px,py,text,textSize,tdx,tdy,font){
var tex=GodStep.textures[img];
if(tex==undefined||tex==null)trace('TEXTURE NOT FOUND - '+img);
var startS=this.startS=parent.s*Games.SCALE;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.imgName=img;
this.p=parent;
this.scaleble=true;
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
if(text){
this.addChild(this.label=new GodStep.BitmapText(text,(textSize||100)*startS/Games.SCALE,0,0,'center',font));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.addChild(this.over=new GodStep.Frame('over'));this.over.p=this;
GodStep.IDownUp.call(this.over,this.W,this.H);
this.over.visible=false;
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this.over,GodStep.FRAME_UP,this.h_mouse);
};
extend(Games.ImgButton,GodStep.Frame);
Games.ImgButton.CLICK='clickImg';
pro.setTexture=function(name){
var tex=GodStep.textures[name];
this.img.setTexture(tex);
};
pro.rescale=function(s){
if(this.no_scale)return;
if(this.label){
this.label.scale.y=this.label.scale.x=s;
this.label.x=(this.label.HW-(this.label.tdx||0))*this.label.scale.y;
this.label.y=(this.label.HH-(this.label.tdy||0))*this.label.scale.y;
}
this.img.scale.y=this.img.scale.x=s*this.startS;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
this.over.visible=true;
this.over.interactive=true;
this.over.hitArea=new PIXI.Rectangle(-this.p.W*.2,-this.p.W*.2,this.p.W*.4,this.p.W*.4);
this.isClicked=true;
this.isOvered=true;
addEvent(this,GodStep.FRAME_MOVE,this.h_move);
break;
case GodStep.FRAME_UP:
if(this.p.isClicked&&this.p.isOvered){
dispatch(t.parent,Games.ImgButton.CLICK);
}
this.visible=false;
this.p.isOvered=false;
this.p.rescale(1/GodStep.IMAGE_RESOLUTION);
this.p.isDown=false;
delEvent(this.p,GodStep.FRAME_MOVE,this.h_move);
this.p.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.isOvered=false;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
break;
case GodStep.FRAME_OVER:
if(this.isClicked){
this.isOvered=true;
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
}
break;
}
};
pro.h_move=function(e){
var p=e.content.getLocalPosition(this);
this.over.x=p.x;
this.over.y=p.y;
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=
this.scale.y=value;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
}
});
GodStep.LFrame=function(soul,name){
GodStep.Frame.call(this,name||('LFrame '+GodStep.Frame.frameCount++),soul.W,soul.H);
this.OH=soul.OH;
this.OW=soul.OW;
this.s=soul.startS;
this.soul=soul;
this.visible=false;
};extend(GodStep.LFrame,GodStep.Frame);
pro.init=function(){
this.visible=true;
};
pro.initLiquid=function(w,h,d){
this.isLiquid=true;
if(!GodStep.lqobjects){
GodStep.lqobjects=[];
GodStep.lqobjects[0]=[];
}
if(!GodStep.lqobjects[this.name]){
GodStep.lqobjects[0].push(this);
this.isTemplate=true;
this.addChild(this.view=new PIXI.Sprite(this.source=new PIXI.RenderTexture(w,h)));
GodStep.lqobjects[this.name]=this;
this.template=this;
this.brothers=[];
this.passes=[new LQ.Pass(LQ.PASS_LOOP,[1],[new LQ.Pass(LQ.PASS_FILL,[0,0]),new LQ.Pass(LQ.PASS_CIRCLE,[0,0]),new LQ.Pass(LQ.PASS_DRAW,[0])])];
this.states=[new GodStep.State()];
this.colors=[];
this.points=[];
this.params=[];
}else{
GodStep.lqobjects[this.name].brothers.push(this);
this.template=GodStep.lqobjects[this.name];
this.addChild(this.view=new PIXI.Sprite(this.source=this.template.source));
}
this.view.anchor=new PIXI.Point(.5,.5);
this.w=w;
this.h=h;
this.d=d||0;
};
pro.applyToState=function(s){
};
pro.applyState=function(s){
var cur=0;
var i;
var points=this.points;
var colors=this.colors;
var params=this.params;
var values=s.values;
var w=this.w;
var h=this.h;
var d=this.d;
for(i=0;i<points.length;i++){
var p=points[i];
p.x=w*values[cur];
p.y=h*values[cur+1];
p.z=d*values[cur+2];
cur+=3;
}
for(i=0;i<colors.length;i++){
var c=colors[i];
c.r=parseInt(255*values[cur]);
c.g=parseInt(255*values[cur+1]);
c.b=parseInt(255*values[cur+2]);
c.calcHex();
cur+=3;
}
for(i=0;i<params.length;i++){
params[i]=values[cur];
cur++;
}
};
pro.pushParam=function(){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3+this.params.length;
for(var s=0;s<sl;s++){
states[s].values.splice(cur,0,0);
}
this.params.push(0);
};
pro.pushColor=function(c){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3;
var values;
for(var s=0;s<sl;s++){
values=states[s].values;
if(c){
values.splice(cur,0,c.r/255);
values.splice(cur+1,c.g/255);
values.splice(cur+2,0,c.b/255);
}else{
values.splice(cur,0,0);
values.splice(cur+1,0,0);
values.splice(cur+2,0,0);
}
}
if(c){
this.colors.push(c);
}else{
this.colors.push(new GodStep.Color());
}
};
pro.removeColor=function(c){
var id=this.colors.indexOf(c);
var states=this.states;
var sl=states.length;
var values;
var cur=this.points.length*3;
for(var s=0;s<sl;s++){
values=states[s].values;
values.splice(cur+id*3,3);
}
this.colors.splice(id,1);
};
pro.removeParam=function(){
if(this.params.length>0){
this.params.splice(this.params.length-1,1);
}
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3+this.params.length-1;
for(var s=0;s<sl;s++){
states[s].values.splice(cur,1);
}
};
pro.pushPoint=function(){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3;
var values;
for(var s=0;s<sl;s++){
values=states[s].values;
values.splice(cur,0,0);
values.splice(cur+1,0,0);
values.splice(cur+2,0,0);
}
this.points.push(new GodStep.Point());
};
pro.pushState=function(s){
if(s){
this.states.push(s);
}
else{
this.states.push(this.states[0].clone());
}
};
pro.passAll=function(){
LQ.Liquid.passAll(this);
};
pro.getAllValues=function(){
var states=this.states;
var sl=states.length;
var values=[];
for(var i=0;i<sl;i++){
values=values.concat(states[i].values);
}
return values;
};
pro.setData=function(d){
if(this.isTemplate){
this.name=d.name;
this.passes=[];
for(var i=0;i<d.passes.length;i++){
this.passes.push(LQ.Pass.parse(d.passes[i]));
}
this.states=[];
this.colors=[];
this.params=[];
this.points=[];
var state;
var values=d.values;
var sl=values.length/d.sc;
for(var id=0;id<d.dc;id++){
this.points.push(new GodStep.Point());
}
for(var ic=0;ic<d.cc;ic++){
this.colors.push(new GodStep.Color());
}
for(var p=0;p<d.pc;p++){
this.params.push(0);
}
for(var s=0;s<d.sc;s++){
this.states.push(state=new GodStep.State());
state.pushValues(values,sl);
values.splice(0,sl);
}
}
};
pro.getData=function(){
var d={};
d.name=this.name;
d.passes=[];
d.values=this.getAllValues();
d.sc=this.states.length;
d.cc=this.colors.length;
d.dc=this.points.length;
d.pc=this.params.length;
for(var i=0;i<this.passes.length;i++){
var passData=this.passes[i].getData();
d.passes.push(passData);
}
return d;
};
M3.Assets=function(soul){
GodStep.DONT_RESIZE=['Font2'];
GodStep.Preloader.call(this,soul);
this.isOnlyOneView=true;
this.fontLoaderClass=M3.FontLoader;
};
extend(M3.Assets,GodStep.Preloader);
pro.load=function(){
this.addChild(this.back=GodStep.Image.fromImage(M3.IMAGE_PATH+'back_fundemic1.jpg',this.h_preload));
this.addChild(this.logo=GodStep.Image.fromImage(M3.IMAGE_PATH+'fundemic_logo.png',this.h_preload));
this.addChild(this.loading=GodStep.Image.fromImage(M3.IMAGE_PATH+'loading.png',this.h_preload));
var countLoaded=0;
if(this.back.texture.baseTexture.hasLoaded){
this.back.Scale=this.startS;
this.back.anchor=new PIXI.Point(0.5,0.5);
this.back.place(this.W/2,this.H*.5);
this.back.scale.y=this.soul.OH/this.soul.H*this.startS;
this.back.texture.baseTexture.isLoader=true;
countLoaded++;
}
if(this.logo.texture.baseTexture.hasLoaded){
this.logo.Scale=this.startS;
this.logo.anchor=new PIXI.Point(0.5,0.5);
this.logo.place(this.W/2,this.H*.3);
this.logo.texture.baseTexture.isLoader=true;
countLoaded++;
}
if(this.loading.texture.baseTexture.hasLoaded){
this.loading.Scale=this.startS;
this.loading.anchor=new PIXI.Point(0.5,0.5);
this.loading.place(this.W/2,this.H*.7);
this.loading.texture.baseTexture.isLoader=true;
if(countLoaded==2){
this.init();
}
}
};
pro.init=function(){
var pngs=['block','cell','dirt','blue','yellow','red','purple','green','cristal','delete','bonusVert','bonusGor',
'Font2','back_menu','b_more','b_play','b_options','logo','field_button','b_more','sheriff','simbol','pers_back','pers_front','play_shadow','b_shadow',
'back_o','b_back','tutorial_off','tutorial_on','pers_o','off','on','icon_music','icon_sound',
'l_shadow','back_l','lock','unlock','pers_l','slider_1','slider_2','score','move','field_game',
'back_1','back_2','back_3','sq1_2','sq3_2','sq3_1','sq2_2','sq1_1','sq2_1','e_1','e_2','e_3','egg','o_1','b_pause',
'1_1mud_1','1_2mud_1','1_3mud_1','2_1mud_1','2_2mud_1','2_3mud_1','1mud_2','1mud_3','1mud_4','2mud_2','2mud_3','2mud_4','3mud_2','3mud_3','3mud_4',
'star_game','i_1_1','i_1_2','i_1_3','i_2_1','b_rplay','field_record','field','pers_r','back_r','star_shadow','star2',
'back_t1','back_t2','back_t3','pers_start_2','pers_start_1','pers_start_3','field_tutorial','bubble','star','icon_2_1','icon_1_2','icon_1_3','icon_1_1','b_shadow_p',
'back_end','b_menu','b_next','b_replay','pers_e_3','pers_e_2','field_end','e_shadow','b_back_p','b_replay_p','b_menu_p','icon_sound_p','icon_music_p','pers_p_1','pers_p_2',
'field_pause_2','field_pause','tutorial_sheriff','frame_tutorial','arm_1','arm_2','back_pause','off_p','on_p','pers_1_end_fail','pers_2_end_fail','win_1','win_2','field_win',
'win_p','fail_p','b_end_fail','back_end_fail'
];
var i,j;
for(i=1;i<4;i++){
pngs.push(i+'_new');
pngs.push('effect_'+i);
pngs.push('f_'+i);
if(i<3){
for(j=1;j<7;j++){
pngs.push('bonus_'+i+'_'+j);
}
}
}
for(i=1;i<6;i++){
pngs.push(i+'p_1');
pngs.push(i+'p_2');
pngs.push(i+'p_3');
pngs.push(i+'p_4');
pngs.push(i+'_1');
pngs.push(i+'_2');
pngs.push(i+'_3');
pngs.push(i+'d1');
pngs.push(i+'d2');
pngs.push(i+'d3');
pngs.push(i+'d4');
pngs.push(i+'d5');
pngs.push(i+'a1');
pngs.push(i+'a2');
pngs.push(i+'a3');
pngs.push(i+'a4');
pngs.push(i+'a5');
}
GodStep.Preloader.prototype.loadAll.call(this,
M3.IMAGE_PATH,pngs,[],
M3.SOUND_PATH,['button','bamboo','bonus_appear','bonus_row','bonus_turn','crystal','dirt','loss','match','select','start',((this.soul.AUDIOTAG)?'loop_':'')+'theme','victory'],['Font2.fnt']);
};
pro.h_preload=function(e){
var img=this.image;
var p=img.parent;
img.Scale=p.startS;
img.anchor=new PIXI.Point(0.5,0.5);
p.preloadState++;
switch(img){
case p.back:
p.back.scale.y=p.soul.OH/p.soul.H*p.startS;
p.back.place(p.W/2,p.H*.5);
p.back.texture.baseTexture.isLoader=true;
break;
case p.logo:
p.logo.place(p.W/2,p.H*.3);
p.logo.texture.baseTexture.isLoader=true;
break;
case p.loading:
p.loading.place(p.W/2,p.H*.7);
p.loading.texture.baseTexture.isLoader=true;
break;
}
if(p.preloadState==2){
p.init();
}
};
M3.StartMenu=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'StartMenu',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.isFirstTime=true;
this.addChild(this.back=new M3.Background(this,'back_menu'));
this.addChild(this.simbol=new M3.Img('simbol',S,0,0,new PIXI.Point(.5,0)));
this.addChild(this.pers1=new M3.Img('pers_front',S,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.pers2=new M3.Img('pers_back',S,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.pers3=new M3.Img('sheriff',S,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.footer=new M3.Img('field_button',S,0,0,new PIXI.Point(.5,1)));
this.addChild(this.logo=new M3.Img('logo',S,0,0,new PIXI.Point(.5,0)));
this.addChild(this.b_play=new M3.ImgButton('b_play','play_shadow',1.1,this,S,this.W*.5,this.H*.6,null,null,null,null));
this.addChild(this.b_more=new M3.ImgButton('b_more','b_shadow',1.1,this,S,this.W*.2,this.H*.7,null,null,null,null));
this.addChild(this.b_settings=new M3.ImgButton('b_options','b_shadow',1.1,this,S,this.W*.8,this.H*.7,null,null,null,null));
this.addChild(this.b_dev=new Games.TextButton('dev',33*S,0xfa66466,soul.W*.9,soul.H*.05));
addEvent(this.b_dev,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_play,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_settings,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_more,Games.ImgButton.CLICK,this.h_buttons);
this.visible=false;
this.b_dev.visible=false;
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.StartMenu,GodStep.Frame);
pro.update=function(){
if(this.visible){
}
};
pro.init=function(){
if(this.isFirstTime){
this.isFirstTime=false;
}
this.visible=true;
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_play.isDown=
t.b_settings.isDown=
t.b_dev.isDown=
t.b_more.isDown=false;
t.b_more.Scale=
t.b_settings.Scale=
t.b_dev.Scale=
t.b_play.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_dev:
GodStep.playSound('button',0,M3.SOUND);
M3.DEVMODE=true;
s.screenTo([s.levelselect],p);
break;
case p.b_settings:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.settings],p);
break;
case p.b_more:
break;
case p.b_play:
GodStep.playSound('button',0,M3.SOUND);
M3.DEVMODE=false;
s.screenTo([s.levelselect],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var sh=this.soul.H;
var osh=this.soul.OH;
var sw=this.soul.W;
var dy=osh-sh;
this.scale.x=this.scale.y=value;
this.footer.y=(osh-dy/2)/value;
this.pers1.y=this.footer.y-sh*.33/value;
this.pers2.y=this.footer.y-sh*.54/value;
this.pers3.y=this.footer.y-sh*.45/value;
this.pers1.x=sw*.165/value;
this.pers2.x=sw*.38/value;
this.pers3.x=sw*.75/value;
this.logo.y=(-dy/2+sh*.02)/value;
this.logo.x=sw*.5/value;
this.simbol.y=(-dy/2+sh*.02)/value;
this.simbol.x=this.footer.x=sw*.5/value;
this.b_play.y=this.b_more.y=this.b_settings.y=(dy/2+sh*.8)/value;
this.b_more.y=this.b_settings.y+=sh*.063/value;
this.back.rescale(value);
}
});
M3.Transmission=function(soul){
this.soul=soul;
Games.Transmission.call(this,soul,.09,0xffff55);
};
extend(M3.Transmission,Games.Transmission);
M3.Img=function(name,scale,px,py,anchor){
GodStep.Image.call(this,GodStep.textures[name]);
this.Scale=scale/GodStep.IMAGE_RESOLUTION;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(M3.Img,GodStep.Image);
pro.setTexture=function(name){
PIXI.Sprite.prototype.setTexture.call(this,GodStep.textures[name]);
};
GodStep.Slider=function(w,h,s,type,min,max,val,n){
GodStep.Frame.call(this,'Slider');
GodStep.IOverOut.call(this);
GodStep.IDownUp.call(this);
this.CW=20;
this.min=min||0;
this.max=max||1;
this.delta=this.max-this.min;
this.W=w;
this.H=h*s;
this.type=type;
this.isFloat=(type>0&&type<1);
this.back=this.createGraphics('back');
this.cursor=this.createGraphics('cursor');
this.label=this.addFrame(new GodStep.Text(n||'',h*s,'Arial','left',0x0));
this.valueText=this.addFrame(new GodStep.Text(val||'',h*s,'Arial','left',0x0));
this.valueText.y=this.label.y=-this.H;
GodStep.IDownUp.call(this.cursor);
GodStep.addEvent(this,GodStep.FRAME_OUT,this.h_back);
GodStep.addEvent(this,GodStep.FRAME_OVER,this.h_back);
GodStep.addEvent(this,GodStep.FRAME_UP,this.h_cursor);
GodStep.addEvent(this,GodStep.FRAME_MOVE,this.h_move);
GodStep.addEvent(this.cursor,GodStep.FRAME_DOWN,this.h_cursor);
this.setHitArea(0,0,this.W,this.H);
this.setHitArea(0,0,this.CW,this.H,this.cursor);
this.redrawBack();
this.redraw();
this.Value=val;
};
extend(GodStep.Slider,GodStep.Frame);
pro.redrawBack=function(){
if(!this.cursor.IsDown){
this.back.clear();
this.rect(this.W,this.H,(this.IsOver)?0xff4444:0xffaaaa,.8,0,0,this.back);
}
};
pro.redraw=function(){
this.cursor.clear();
this.rect(this.CW,this.H,(this.cursor.IsDown)?0x00ff00:0xffffff,.8,0,0,this.cursor);
};
pro.h_back=function(e){
e.target.redrawBack();
};
pro.h_move=function(e){
var t=e.content.t;
var power;
var dv;
if(e.content.getLocalPosition){
var point=e.content.getLocalPosition(t);
if(t.cursor.IsDown){
power=1;
t.cursor.position.x=Math.max(0,Math.min(point.x-t.cursor.downPoint.x,t.W-t.CW));
dv=(t.cursor.position.x/(t.W-t.CW))*(t.delta)+t.min-t.lastValue;
t.value=t.lastValue+dv*power;
GodStep.dispatch(t,GodStep.FRAME_CHANGED);
if(t.type=='int'){
t.value=parseInt(t.value);
}else{
if(t.isFloat){
t.value=parseInt(t.value/t.type)*t.type;
}else{
t.value=parseInt(t.value/t.type)*t.type;
}
}
t.valueText.setText(t.value);
t.valueText.updateText();
t.valueText.x=t.W-t.valueText.width;
t.updateCursor();
}
}
};
pro.h_cursor=function(e){
if(e.content.t instanceof GodStep.Slider){
e.content.t.cursor.IsDown=false;
e.content.t.redraw();
e.content.t.lastValue=e.content.t.value;
}else{
e.content.t.parent.redraw();
e.content.t.lastValue=e.content.t.value;
}
};
pro.updateCursor=function(){
this.cursor.x=((this.value-this.min)/(this.delta))*(this.W-this.CW);
};
Object.defineProperty(GodStep.Slider.prototype,'IsDown',{
set:function(value){
this.cursor.IsDown=false;
this.redraw();
this.redrawBack();
}
});
Object.defineProperty(GodStep.Slider.prototype,'Value',{
get:function(){
return this.value;
},
set:function(value){
this.value=value;
if(this.type=='int'){
this.value=parseInt(this.value);
}else{
if(this.isFloat){
this.value=parseInt(this.value/this.type)*this.type;
}else{
this.value=parseInt(this.value/this.type)*this.type;
}
}
this.lastValue=this.value;
this.valueText.setText(this.value);
this.valueText.updateText();
this.valueText.x=this.W-this.valueText.width;
this.updateCursor();
}
});
M3.Dev=function(soul){
this.soul=soul;
GodStep.LFrame.call(this,soul,'Dev');
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addFrame(this.b_back=new Games.TextButton('back',30*S,0x562466,soul.W*.1,soul.H*.05));
this.addFrame(this.b_test=new Games.TextButton('[test]',30*S,0x562466,soul.W*.9,soul.H*.125));
this.addFrame(this.b_save=new Games.TextButton('save',30*S,0x562466,soul.W*.9,soul.H*.05));
this.addChild(this.text=new GodStep.Text('Level ID: ',30*S,'Arial','left',0xffffff));
this.standart=[];
for(var i=0;i<M3.Cell.STANDART.length;i++){
var cell=new Games.ImgButton(M3.Cell.STANDART[i],this,this.W*.06,this.H*.07*i+this.H*.3);
this.addChild(cell);
this.standart.push(cell);
addEvent(cell,Games.ImgButton.CLICK,this.h_colors);
}
this.addChild(this.buttonBlock=new Games.ImgButton('block',this,this.W*.94,this.H*.07+this.H*.3));
this.addChild(this.buttonDelete=new Games.ImgButton('delete',this,this.W*.94,this.H*.07*2+this.H*.3));
this.addChild(this.buttonDirt=new Games.ImgButton('dirt',this,this.W*.94,this.H*.07*3+this.H*.3));
this.addChild(this.buttonBonus=new Games.ImgButton('bonusGor',this,this.W*.94,this.H*.07*4+this.H*.3));
addEvent(this.buttonBlock,Games.ImgButton.CLICK,this.h_instrument);
addEvent(this.buttonDelete,Games.ImgButton.CLICK,this.h_instrument);
addEvent(this.buttonDirt,Games.ImgButton.CLICK,this.h_instrument);
addEvent(this.buttonBonus,Games.ImgButton.CLICK,this.h_instrument);
this.clearSelectionInstruments();
var sliderW=soul.W*.6;
var sliderH=35;
this.addFrame(this.s_pointsLimit=new GodStep.Slider(sliderW,sliderH,S,500,0,100000,0,'score target'));
this.addFrame(this.s_itemsLimit=new GodStep.Slider(sliderW,sliderH,S,'int',0,30,0,'items target'));
this.addFrame(this.s_stepLimit=new GodStep.Slider(sliderW,sliderH,S,'int',0,200,0,'steps target'));
this.addFrame(this.s_bonusCount=new GodStep.Slider(sliderW,sliderH,S,'int',0,10,0,'bonus count'));
this.s_bonusCount.x=this.s_stepLimit.x=this.s_itemsLimit.x=this.s_pointsLimit.x=(this.W-sliderW)*.5;
this.s_pointsLimit.y=(this.H*.05);
this.s_itemsLimit.y=this.s_pointsLimit.y+this.s_pointsLimit.H*2;
this.s_stepLimit.y=this.s_itemsLimit.y+this.s_itemsLimit.H*2;
this.s_bonusCount.y=this.s_stepLimit.y+this.s_stepLimit.H*2;
this.text.y=this.H*.015;
this.addFrame(this.field=new M3.Field(soul,7,9));
this.field.x=(this.W-this.field.W*M3.CELLW_SCALE)*.5;
this.field.y=this.H-this.field.x-this.field.H+this.H*.075;
addEvent(this.b_save,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_test,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
this.visible=false;
addEvent(this.field,Games.CELL_DOWN,this.h_cells);
};
extend(M3.Dev,GodStep.Frame);
pro.update=function(){
};
pro.init=function(){
this.clearSelectionInstruments();
M3.SKIN=1;
this.visible=true;
var data=GodStep.LoadLocal(this.soul.SETTINGS_SLOT);
this.text.setText('Level '+M3.LAST_LEVEL_SELECTED);
this.text.updateText();
this.text.x=(this.W*.2);
var level=data.levels[M3.LAST_LEVEL_SELECTED-1]||[];
this.field.setData(level);
this.field.reskin(M3.SKIN);
if(level.length>=1){
var params=level[level.length-1];
this.s_pointsLimit.Value=params.points;
this.s_itemsLimit.Value=params.items;
this.s_stepLimit.Value=params.steps||0;
this.s_bonusCount.Value=params.bonuses||0;
this.buttonBonus.alpha=(params.isBonus)?1:0.2;
for(var st=0;st<this.standart.length;st++){
this.standart[st].alpha=.2;
}
for(var pc=0;pc<params.colors.length;pc++){
this.standart[params.colors[pc]].alpha=1;
}
}
};
pro.clearSelectionInstruments=function(){
this.instrument='';
this.buttonBlock.alpha=this.buttonDelete.alpha=this.buttonDirt.alpha=.2;
};
pro.h_colors=function(e){
var t=e.target;
t.alpha=(t.alpha==1)?.2:1;
};
pro.h_cells=function(e){
var t=e.target;
var p=t.parent;
var cell=e.content.data;
switch(e.type){
case Games.CELL_DOWN:
if(p.instrument!=''){
p.field.addCellObject(new M3.CellObject(p.instrument,p.startS,cell));
}else{
cell.clear();
}
break;
}
};
pro.h_instrument=function(e){
var t=e.target;
var p=t.parent;
switch(t){
case p.buttonBonus:
if(p.buttonBonus.alpha==1){
p.buttonBonus.alpha=.2;
}else{
p.buttonBonus.alpha=1;
}
break;
case p.buttonDirt:
if(p.buttonDirt.alpha==1){
p.clearSelectionInstruments();
}else{
p.clearSelectionInstruments();
p.instrument='dirt';
p.buttonDirt.alpha=1;
}
break;
case p.buttonDelete:
if(p.buttonDelete.alpha==1){
p.clearSelectionInstruments();
}else{
p.clearSelectionInstruments();
p.instrument='delete';
p.buttonDelete.alpha=1;
}
break;
case p.buttonBlock:
if(p.buttonBlock.alpha==1){
p.clearSelectionInstruments();
}else{
p.clearSelectionInstruments();
p.instrument='block';
p.buttonBlock.alpha=1;
}
break;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_test:
case p.b_save:
var data=GodStep.LoadLocal(s.SETTINGS_SLOT);
if(!data.levels){
data.levels=[];
}
var d=p.field.getData();
M3.LAST_LEVEL_DATA=data.levels[M3.LAST_LEVEL_SELECTED-1]=d;
for(var i=0;i<data.levels.length;i++){
var lev=data.levels[i];
var val=lev[lev.length-1];
var colors=[];
for(var st=0;st<p.standart.length;st++){
if(p.standart[st].alpha==1){
colors.push(st);
}
}
if(val==undefined){
val={};
}
if(val.id){
if(M3.LAST_LEVEL_SELECTED==i+1){
data.levels[i][lev.length-1]={points:p.s_pointsLimit.value,items:p.s_itemsLimit.value,colors:colors,steps:p.s_stepLimit.value,bonuses:p.s_bonusCount.value,isBonus:p.buttonBonus.alpha==1,id:i+1};
}
}else{
data.levels[i][lev.length]={points:p.s_pointsLimit.value,items:p.s_itemsLimit.value,colors:colors,steps:p.s_stepLimit.value,bonuses:p.s_bonusCount.value,isBonus:p.buttonBonus.alpha==1,id:i+1};
}
}
GodStep.SaveLocal(data,s.SETTINGS_SLOT);
if(t==p.b_test){
s.screenTo([s.gameplay],p);
}
break;
case p.b_back:
s.screenTo([s.levelselect],p);
break;
}
};
pro.h_mouse=function(e){
var t=e.content.target;
if(e.content.target){
switch(e.type){
case GodStep.FRAME_UP:
if(e.content.target.soul){
for(var i=0;i<t.standart.length;i++){
t.standart[i].Scale=1;
t.standart[i].isDown=false;
}
t.s_stepLimit.IsDown=
t.s_itemsLimit.IsDown=
t.s_bonusCount.IsDown=
t.s_pointsLimit.IsDown=false;
t.b_test.isDown=t.b_back.isDown=t.b_save.isDown=false;
t.b_test.Scale=t.b_back.Scale=t.b_save.Scale=1;
}
break;
}
}
};
M3.Cell=function(xi,yi,w,h,s){
Games.Cell.call(this,xi,yi,w,h);
this.xi=xi;
this.yi=yi;
this.guests=[];
this.addChild(this.img=new M3.Img('sq1_1',s*M3.CELL_SCALE_BACK,this.W*.5,this.H*.5,.5));
this.addFrame(this.label=new M3.Text('100',75*s,0,0,'left'));
this.label.visible=false;
};
M3.Cell.STANDART=['red','yellow','blue','purple','green'];
extend(M3.Cell,Games.Cell);
pro.animate=function(){
if(this.label.visible){
this.label.alpha+=(0-this.label.alpha)*.04;
this.label.y-=this.W*.007;
if(this.label.alpha<0.05){
this.label.visible=false;
}
}
};
pro.clear=function(){
for(var i=0;i<this.guests.length;i++){
this.guests[i].parent.parent.delCellObject(this.guests[i]);
}
this.guests=[];
};
pro.isEmpty=function(){
return this.guests.length==0;
};
pro.isDynamic=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isDynamic){
return true;
}
}
return false;
};
pro.getColored=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isColored){
return this.guests[i];
}
}
return null;
};
pro.replaceColored=function(color){
var guest=this.getColored();
if(guest){
if(guest.isColored){
var field=guest.parent.parent;
field.delCellObject(guest);
this.guests.splice(this.guests.indexOf(guest),1);
var co;
field.addCellObject(co=new M3.CellObject(color,guest.S,this));
co.applyCellPostion(true);
}
}
};
pro.replaceCellObjects=function(cell){
var c1=this.guests[0];
var c2=cell.guests[0];
this.guests[0]=c2;
cell.guests[0]=c1;
c1.cell=cell;
c2.cell=this;
c1.applyCellPostion(true);
c2.applyCellPostion(true);
};
pro.isBusy=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isObject){
return true;
}
}
return false;
};
pro.pushGuest=function(o){
this.guests.push(o);
};
pro.delGuest=function(o){
this.guests.splice(this.guests.indexOf(o),1);
};
pro.setAsGuest=function(o){
if(o.name=='player'){
this.guests.push(o);
}else{
this.guests.splice(0,0,o);
}
o.cell.guests.splice(o.cell.guests.indexOf(o),1);
o.cell=this;
};
pro.setAsSelected=function(ok){
var guests=this.guests;
var length=guests.length;
var guest;
for(var i=0;i<length;i++){
guest=guests[i];
if(guest.isColored){
guest.setAsSelected(ok);
this.isSelected=ok;
}
}
return this.isSelected;
};
pro.isEqual=function(cell){
var object,i,object2;
for(i=0;i<this.guests.length;i++){
if(this.guests[i].isDynamic){
object=this.guests[i];
}
}
for(i=0;i<cell.guests.length;i++){
if(cell.guests[i].isDynamic){
object2=cell.guests[i];
}
}
return(object.typeName==object2.typeName);
};
pro.getBonus=function(){
for(var i=0;i<this.guests.length;i++){
if(this.guests[i].isBonus){
return this.guests[i];
}
}
return null;
};
pro.removeDirt=function(){
var i,obj;
var guests=this.guests;
for(i=0;i<guests.length;i++){
obj=guests[i];
if(obj.isDirt){
if(M3.JUST_DIRT_DELETE==0){
M3.JUST_DIRT_DELETE=5;
GodStep.playSound('dirt',0,M3.SOUND);
}
obj.isKill=true;
this.setCost(500);
return obj;
}
}
return null;
};
pro.removeDynamic=function(bonusKill){
var i,obj;
var guests=this.guests;
for(i=0;i<guests.length;i++){
obj=guests[i];
if(obj.isDynamic){
this.setCost(this.cost);
if(bonusKill){
obj.isKill=false;
obj.isBonusKill=true;
obj.img.setToFrame(9);
}else{
obj.isKill=true;
obj.isBonusKill=false;
obj.img.setToFrame(4);
}
obj.animTimer=0;
return obj;
}
}
return null;
};
pro.removeBlock=function(){
var i,obj;
var guests=this.guests;
for(i=0;i<guests.length;i++){
obj=guests[i];
if(obj.isBlock){
this.setCost(50);
if(M3.JUST_BLOCK_DELETE==0){
M3.JUST_BLOCK_DELETE=5;
GodStep.playSound('bamboo',0,M3.SOUND);
}
guests.splice(i,1);i--;
return obj;
}
}
return null;
};
pro.setCost=function(c){
this.label.alpha=1;
this.label.visible=true;
this.label.setText(c+'');
this.label.updateText();
this.label.x=this.W/2-this.label.width/2;
this.label.y=this.label.height/2;
};
M3.Field=function(soul,xc,yc){
Games.CellField.call(this,xc,yc,soul.W*.95,soul.W*.95,M3.Cell,soul.startS);
this.cellObjects=[];
this.soul=soul;
this.dirts=[];
this.blocks=[];
this.deletes=[];
this.lastSameColor=null;
this.gameplay=soul.gameplay;
this.lines=[];
this.addChildAt(this.dirtField=new PIXI.DisplayObjectContainer(),this.children.length-1);
this.addChildAt(this.lineField=new PIXI.DisplayObjectContainer(),this.children.length-1);
};extend(M3.Field,Games.CellField);
pro.update=function(){
for(var i=0;i<this.cells.length;i++){
this.cells[i].animate();
}
};
pro.reskin=function(skin){
var v=1;
for(var i=0;i<this.cells.length;i++){
this.cells[i].img.setTexture('sq'+skin+'_'+v);
this.cells[i].v=v;
v=(v==1)?2:1;
}
};
pro.initField=function(countX,countY,cW,cH){
var cellW=this.W/this.cellCountX*M3.CELLW_SCALE;
Games.CellField.prototype.initField.call(this,countX,countY,cellW,cellW);
};
pro.fill=function(){
var cells=this.cells;
for(var i=0;i<cells.length;i++){
if(!cells[i].isBusy()){
this.gameplay.generate(cells[i]);
}
}
};
pro.clear=function(){
this.dirts=[];
this.blocks=[];
this.deletes=[];
while(this.cellObjects.length){
this.delFrame(this.cellObjects[0].destroy());
this.cellObjects.splice(0,1);
}
for(var i=0;i<this.cells.length;i++){
this.cells[i].clear();
}
trace('objects'+this.cellObjects.length);
};
pro.setData=function(d){
this.clear();
if(d){
var S=this.soul.startS;
for(var i=0;i<d.length;i++){
var o=d[i];
if(o.id){
}else{
this.addCellObject(new M3.CellObject(o.name,this.soul.startS,this.cells[o.xi+o.yi*this.cellCountX]));
}
}
}
};
pro.getData=function(){
var objects=[];
for(var i=0;i<this.cellObjects.length;i++){
var o=this.cellObjects[i];
var od={name:o.typeName,xi:o.cell.xi,yi:o.cell.yi};
objects.push(od);
}
return objects;
};
pro.delCellObject=function(obj){
if(obj){
this.delFrame(obj);
this.cellObjects.splice(this.cellObjects.indexOf(obj),1);
if(obj.name=='delete'){
this.deletes.splice(this.deletes.indexOf(obj),1);
}
if(obj.name=='block'){
this.blocks.splice(this.blocks.indexOf(obj),1);
}
if(obj.name=='dirt'){
this.dirts.splice(this.dirts.indexOf(obj),1);
}
return true;
}
return false;
};
pro.addCellObject=function(ob){
var o;
var isFound=false;
var isDirt=false;
switch(ob.name){
case'dirt':
isDirt=true;
this.dirts.push(ob);
break;
case'block':
this.blocks.push(ob);
break;
case'delete':
this.deletes.push(ob);
break;
}
for(var i=0;i<this.cellObjects.length;i++){
o=this.cellObjects[i];
if(o.isObject){
if(o.cell.name==ob.cell.name){
isFound=true;
}
}
}
if(!isFound){
ob.cell.pushGuest(ob);
this.cellObjects.push(ob);
if(isDirt){
this.addFrameAt(ob,this.dirtField,this.dirtField.children.length);
}else{
this.addFrameAt(ob,this.objectContainer,this.objectContainer.children.length);
}
}
};
pro.getCellByPoint=function(p,isOver){
var w=this.cellW;
var dw=w*(isOver?.125:0);
var i=Math.max(0,Math.min(this.cellCountX-1,parseInt((p.x-dw*2)/w)));
var j=Math.max(0,Math.min(this.cellCountY-1,parseInt((p.y-dw)/w)));
var cell=this.cellsXY[j][i];
if(GodStep.Point.distance(new PIXI.Point(cell.x,cell.y),new PIXI.Point(p.x,p.y))<w*(isOver?1:1)){
return cell;
}
return null;
};
pro.clearCell=function(cell){
};
pro.getEmptyCount=function(){
var c=0;
for(var i=0;i<this.cells.length;i++){
if(this.cells[i].isEmpty()){
c++;
}
}
return c;
};
pro.getDynamicCount=function(){
var c=0;
for(var i=0;i<this.cells.length;i++){
if(this.cells[i].isDynamic()){
c++;
}
}
return c;
};
pro.removeBlocksAndDirt=function(cell,bonusKill){
var xi=cell.xi;
var yi=cell.yi;
var cells=this.cellsXY;
var row;
var points=0;
cell.removeDynamic(bonusKill);
if(cell.removeDirt()){
points+=500;
}
if(row=cells[yi-1]){
if(row[xi]){
if(this.delCellObject(row[xi].removeBlock())){
points+=50;
}
}
}
if(row=cells[yi+1]){
if(row[xi]){
if(this.delCellObject(row[xi].removeBlock())){
points+=50;
}
}
}
if(cells[yi][xi-1]){
if(this.delCellObject(cells[yi][xi-1].removeBlock())){
points+=50;
}
}
if(cells[yi][xi+1]){
if(this.delCellObject(cells[yi][xi+1].removeBlock())){
points+=50;
}
}
return points;
};
pro.randomizeArea=function(colors,x,y,w,h,deleteColor){
var trueColors=[];
for(var c=0;c<colors.length;c++){
if(deleteColor!=null){
if(colors[c]!=deleteColor)trueColors.push(colors[c]);
}else{
trueColors.push(colors[c]);
}
}
var cells=this.cellsXY;
var line=[];
for(var i=x;i<x+w;i++){
for(var j=y;j<y+h;j++){
line.push(cells[j][i]);
cells[j][i].replaceColored(M3.Cell.STANDART[trueColors[parseInt(Math.random()*trueColors.length)]]);
}
}
return line;
};
pro.replaceCells=function(cell1,cell2){
var g1=cell1.guests[0];
var g2=cell2.guests[0];
cell1.guests[0]=g2;
cell2.guests[0]=g1;
g1.cell=cell2;
g2.cell=cell1;
g1.applyCellPostion(true);
g2.applyCellPostion(true);
};
pro.removeAllLines=function(){
while(this.lines.length){
this.lineField.removeChild(this.lines[0]);
this.lines.splice(0,1);
}
};
pro.removeLastLine=function(){
this.lineField.removeChild(this.lines[this.lines.length-1]);
this.lines.splice(this.lines.length-1,1);
};
pro.addLine=function(cell1,cell2){
var s=this.soul.startS;
var colored=cell1.getColored();
var p=GodStep.Point.middlePoint(cell1.Place,cell2.Place,.5);
var type;
var dx=cell1.xi-cell2.xi;
var dy=cell1.yi-cell2.yi;
var isRotate=0;
if(Math.abs(dx)+Math.abs(dy)==1){
type=colored.t+'_3';
if(Math.abs(dy)>0){
isRotate=1;
}
}else{
if(cell1.xi<cell2.xi){
if(cell1.yi>cell2.yi){
type=colored.t+'_2';
}else{
type=colored.t+'_1';
}
}else{
if(cell1.yi<cell2.yi){
type=colored.t+'_2';
}else{
type=colored.t+'_1';
}
}
}
var line=new M3.Img(type,s,p.x+cell2.W/2,p.y+cell2.H/2,.5);
if(isRotate==1){
line.rotation=Math.PI/2;
}
this.lineField.addChild(line);
this.lines.push(line);
};
pro.findSame=function(cell){
var x=cell.xi,y=cell.yi;
var count=0;
var cellsXY=this.cellsXY;
var mainType=cell.getColored().typeName;
var colored;
var cellRow;
if(cellRow=cellsXY[y-1]){
if(cellRow[x-1]){
colored=cellRow[x-1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(cellRow[x+1]){
colored=cellRow[x+1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
colored=cellRow[x].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
if(count>1)return true;
}
if(cellRow=cellsXY[y+1]){
if(cellRow[x-1]){
colored=cellRow[x-1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(cellRow[x+1]){
colored=cellRow[x+1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
colored=cellRow[x].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
if(count>1)return true;
}
cellRow=cellsXY[y];
if(cellRow[x-1]){
colored=cellRow[x-1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(cellRow[x+1]){
colored=cellRow[x+1].getColored();
if(colored){
if(colored.typeName==mainType)count++;
}
}
if(count>1)return true;
return false;
};
pro.shuffle=function(cells){
var rand1;
var rand2;
trace("перемешали");
for(var i=0;i<cells.length;i++){
rand1=parseInt(Math.random()*cells.length);
rand2=parseInt(Math.random()*cells.length);
cells[rand1].replaceCellObjects(cells[rand2]);
}
};
pro.addSameColors=function(cells){
var count=1;
trace("добавили цвет");
for(var i=0;i<count;i++){
var colored=cells[i].getColored();
if(colored.typeName==this.lastSameColor){
count++;
}else{
cells[i].replaceColored(this.lastSameColor);
}
}
};
pro.findMatchThree=function(){
var cells=[];
var cell;
for(var i=0;i<this.cells.length;i++){
cell=this.cells[i];
if(cell.getColored()){
cells.push(cell);
}
}
if(cells){
if(!this.lastSameColor){
this.lastSameColor=cells[0].getColored().typeName;
}
for(var c=0;c<cells.length;c++){
if(this.findSame(cells[c])){
this.lastSameColor=null;
return;
}
}
this.shuffle(cells);
this.addSameColors(cells);
this.findMatchThree();
}
};
pro.findItem=function(){
var row;
for(var i=0;i<this.cellsXY.length;i++){
row=this.cellsXY[i];
for(var j=0;j<row.length;j++){
var cell=row[j];
for(var g=0;g<cell.guests.length;g++){
if(cell.guests[g].isItem){
return cell.guests[g];
}
}
}
}
};
M3.ImgButton=function(img,s_img,s_scale,parent,scaleS,px,py,text,textSize,tdx,tdy){
var tex=GodStep.textures[img];
if(tex==undefined||tex==null)trace('TEXTURE NOT FOUND - '+img);
var startS=this.startS=scaleS*M3.SCALE;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.scaleble=true;
if(s_img){
var shadow=GodStep.textures[s_img];
this.addChild(this.shadow=new GodStep.Image(shadow));this.shadow.Scale=startS*s_scale/GodStep.IMAGE_RESOLUTION;
this.shadow.anchor=new PIXI.Point(0.5,0.5);
this.shadow.y=tex.height/2*scaleS*1.3/GodStep.IMAGE_RESOLUTION;
}
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
if(text){
this.addChild(this.label=new M3.Text(text,(textSize||100)*startS/M3.SCALE,0,0,'center'));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.ImgButton,GodStep.Frame);
M3.ImgButton.CLICK='clickImg';
pro.rescale=function(s){
if(this.no_scale)return;
if(this.label){
this.label.scale.y=this.label.scale.x=s;
this.label.x=(this.label.HW-(this.label.tdx||0))*this.label.scale.y;
this.label.y=(this.label.HH-(this.label.tdy||0))*this.label.scale.y;
}
this.img.scale.y=this.img.scale.x=s*this.startS;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,M3.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.rescale(1/GodStep.IMAGE_RESOLUTION);
break;
case GodStep.FRAME_OVER:
if(this.isDown){
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
}
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=
this.scale.y=value;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
}
});
M3.LevelSelect=function(soul){
this.soul=soul;
var S=this.startS=soul.startS;
GodStep.Frame.call(this,'LevelSelect',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
this.addChild(this.back=new M3.Background(this,'back_l'));
this.addChild(this.pers=new M3.Img('pers_l',S,this.W*.85,this.H*.2,.5));
this.addChild(this.label=new M3.Text('LEVELS',195*S,this.W*.31,this.H*.1,'left',0xffffff));
this.addChild(this.maska=new PIXI.Graphics());
this.addChild(this.container=new GodStep.Frame('Container',soul.W,soul.H));
GodStep.IDownUp.call(this.container,this.soul.W,this.soul.H);
this.addChild(this.b_back=new M3.ImgButton('b_back','l_shadow',1,this,S,this.W*.16,this.H*.12));
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
this.visible=false;
this.levels=[];
this.container.MY=this.container.y=soul.H*.23;
this.maska.beginFill(0,.1);
this.maska.drawRect(0,this.container.y,this.W,this.H);
this.container.mask=this.maska;
addEvent(this.container,GodStep.FRAME_MOVE,this.h_container);
addEvent(this.container,GodStep.FRAME_DOWN,this.h_container);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.LevelSelect,GodStep.Frame);
pro.init=function(data){
this.visible=true;
this.settingsDATA=data||GodStep.LoadLocal(this.soul.SETTINGS_SLOT);
var player=GodStep.LoadLocal(this.soul.PLAYER_SLOT)||{count:0};
while(this.levels.length){
this.container.removeChild(this.levels[0].destroy());
this.levels.splice(0,1);
}
M3.LEVELS=this.levels=[];
var S=this.startS;
var w=this.W/4.3;
var x,y;
var maxY=0;
var levels=this.settingsDATA.levels;
var plevels=this.soul.playerDATA.levels;
var isActivate=false;
for(var i=0;i<levels.length;i++){
y=parseInt(i/4);
x=i-y*4;
var level=new M3.LevButton('lock',S,x*w+w*.66,y*w+w/2,''+(i+1),200*S,0,this.H*.058,0x3289bf);
maxY=Math.max(maxY,level.y+level.H/2);
this.container.addChild(level);
level.ID=i+1;
level.isDisabled=true;
if(plevels[i][0]==1){
level.isDisabled=false;
level.setAsComplete();
}else{
if(!isActivate){
isActivate=true;
level.isDisabled=false;
level.setAsActive();
}
}
this.levels.push(level);
level.levelData=levels[i];
addEvent(level,M3.ImgButton.CLICK,this.h_levels);
}
if(this.newLevel){
this.container.addChild(this.newLevel.destroy());
this.newLevel=null;
}
if(M3.DEVMODE){
if(!this.b_loadDef){
this.addFrame(this.b_loadDef=new Games.TextButton('Load Default',35,0x562466,this,S,this.soul.W*.5,this.soul.H*.05));
addEvent(this.b_loadDef,Games.ImgButton.CLICK,this.h_buttons);
}
this.b_loadDef.visible=true;
y=parseInt(this.levels.length/4);
x=this.levels.length-y*4;
var newLevel=this.newLevel=new Games.TextButton('add',60,0x555555,this,S,x*w+w/2,y*w+w/2);
newLevel.ID=this.levels.length+1;
addEvent(newLevel,GodStep.FRAME_DOWN,this.h_newLevels);
this.container.addChild(newLevel);
}else{
if(this.b_loadDef){
this.b_loadDef.visible=false;
}
}
this.container.setHitArea(0,0,this.W,maxY);
this.container.MH=maxY+this.H*.1;
this.container.LH=(level)?level.H:0;
};
pro.h_levels=function(e){
var t=e.target;
var p=t.parent.parent;
var s=p.soul;
switch(e.type){
case M3.ImgButton.CLICK:
M3.LAST_LEVEL_SELECTED=t.ID;
M3.LAST_LEVEL_DATA=t.levelData;
if(M3.DEVMODE){
s.screenTo([s.dev],p);
}else{
if(!t.isDisabled){
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.gameplay],p);
}
}
break;
}
};
pro.h_newLevels=function(e){
var t=e.target;
var p=t.parent.parent;
var s=p.soul;
switch(e.type){
case GodStep.FRAME_DOWN:
M3.LAST_LEVEL_SELECTED=t.ID;
s.screenTo([s.dev],p);
break;
}
};
pro.h_container=function(e){
var t=e.target;
var parent=t.parent;
var s=parent.soul;
if(t.name=='Container'){
switch(e.type){
case GodStep.FRAME_MOVE:
if(t.isDown){
var p=e.content.getLocalPosition(t.parent);
var hy=(s.OH-s.H)*.5;
t.y=p.y-t.downPoint.y;
t.y=Math.max(Math.min(t.y,t.MY-hy/parent.scale.x),(s.OH-hy)/parent.scale.x-t.MH);
}
break;
}
}
};
pro.h_mouse=function(e){
var t=e.content.target;
switch(e.type){
case GodStep.FRAME_UP:
if(e.content.target.soul){
t.b_back.Scale=1;
t.b_back.isDown=false;
if(t.b_loadDef){
t.b_loadDef.isDown=false;
t.b_loadDef.Scale=1;
}
for(var i=0;i<t.levels.length;i++){
t.levels[i].Scale=1;
t.levels[i].isDown=false;
}
}
break;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_loadDef:
p.init(GodStep.LoadText(M3.DEFAULT_SETTINGS));
break;
case p.b_back:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.startmenu],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.maska.y=this.container.y=-(this.soul.OH-this.soul.H)*.5/value+this.soul.H*.15/value;
this.container.y-=-this.container.MY+this.soul.H*.15/value;
this.maska.y+=this.soul.H*.07/value;
this.maska.clear();
this.maska.beginFill(0,.1);
this.maska.drawRect(0,0,this.W,this.soul.OH*1.1/value-this.container.y);
var dy=this.soul.OH-this.soul.H;
this.b_back.y=(this.soul.H*.11-dy/2)/value;
this.pers.y=(this.soul.H*.113-dy/2)/value;
this.label.y=(this.soul.H*.028-dy/2)/value;
this.back.rescale(value);
}
});
M3.CellObject=function(name,S,cell){
var type=name;
GodStep.Frame.call(this,type);
this.typeName=name;
this.S=S;
this.startS=S*M3.CELL_SCALE;
this.sy=0;
switch(name){
case'item':
this.isDynamic=true;
this.isItem=true;
this.isObject=true;
this.itemTimer=20;
this.addFrame(this.img=new M3.Img('cristal',this.startS/M3.CELL_SCALE*M3.CELL_SCALE_BACK,cell.W/2,cell.H/2,.5));
break;
case'dirt':
this.animTimer=0;
this.isDirt=true;
this.addFrame(this.img=new M3.MovieClip([cell.v+'_'+M3.SKIN+'mud_1',M3.SKIN+'mud_2',M3.SKIN+'mud_3',M3.SKIN+'mud_4'],this.startS/M3.CELL_SCALE*1.03,cell.W/2,cell.H/2,new PIXI.Point(.515,.515)));
break;
case'block':
this.isBlock=true;
this.isObject=true;
this.addFrame(this.img=new M3.Img('o_1',this.startS/M3.CELL_SCALE*M3.CELL_SCALE_BACK,cell.W/2,cell.H/2,.5));
break;
case'delete':
this.isObject=true;
this.addFrame(this.img=new M3.Img(M3.SKIN+"_new",this.startS/M3.CELL_SCALE*M3.CELL_SCALE_BACK,cell.W/2,cell.H/2,new PIXI.Point(.51,.51)));
break;
case'red':
case'green':
case'purple':
case'blue':
case'yellow':
var t;
switch(name){
case'red':t=1;break;
case'green':t=2;break;
case'purple':t=3;break;
case'blue':t=4;break;
case'yellow':t=5;break;
}
this.animTimer=parseInt(Math.random()*55);
this.isColored=true;
this.isObject=true;
this.isDynamic=true;
this.t=t;
this.addFrame(this.img=new M3.MovieClip([t+'p_1',t+'p_2',t+'p_3',t+'p_4',t+'a1',t+'a2',t+'a3',t+'a4',t+'a5',t+'d1',t+'d2',t+'d3',t+'d4',t+'d5'],this.startS/M3.CELL_SCALE*1.03,cell.W/2,cell.H/2,new PIXI.Point(.515,.515)));
break;
}
this.startS=this.img.scale.x;
this.cell=cell;
this.applyCellPostion(true);
};
extend(M3.CellObject,GodStep.Frame);
M3.CellObject.COLORS=[0x0000ff,0xff0000,0x00ff00,0xffff88,0xff00ff];
pro.update=function(){
if(this.isBonus){
this.bonusanim++;
if(this.bonusanim==6){
this.bonusanim=0;
if(this.bonus){
if(this.isBonusKill){
this.bonus.alpha=0;
}
this.bonus.nextFrame();
}
}
}
if(this.isDirt){
if(this.isKill){
this.animTimer++;
if(this.animTimer==5){
this.animTimer=0;
if(this.img.nextFrame()==0){
this.isDead=true;
this.cell.delGuest(this);
this.cell.parent.parent.delCellObject(this);
}
}
}
return;
}
if(this.isColored){
if(this.isColorSelected){
}else{
if(this.isBonusKill){
this.animTimer++;
if(this.animTimer==6){
this.animTimer=0;
if(this.img.nextFrame()==0){
this.isDead=true;
}
}
}else
if(this.isKill){
this.animTimer++;
if(this.animTimer==5){
this.animTimer=0;
if(this.img.nextFrame()==8){
this.isDead=true;
}
}
}else{
this.animTimer++;
if(this.animTimer==55){
this.animTimer=0;
if(this.img.nextFrame()==3){
this.img.setToFrame(0);
}
}
}
}
}
};
pro.setAsBonus=function(){
this.isBonus=true;
this.bonusanim=0;
this.isVertical=Math.random()>.5;
if(this.isVertical){
this.addChildAt(this.bonus=new M3.MovieClip(['bonus_2_1','bonus_2_2','bonus_2_3','bonus_2_4','bonus_2_5','bonus_2_6'],this.startS*GodStep.IMAGE_RESOLUTION,this.cell.W/2,this.cell.H/2,.5),0);
}else{
this.addChildAt(this.bonus=new M3.MovieClip(['bonus_1_1','bonus_1_2','bonus_1_3','bonus_1_4','bonus_1_5','bonus_1_6'],this.startS*GodStep.IMAGE_RESOLUTION,this.cell.W/2,this.cell.H/2,.5),0);
}
var parent=this.parent;
parent.removeChild(this);
parent.addChild(this);
};
pro.removeBonus=function(){
if(this.bonus){
this.removeChild(this.bonus);this.bonus=null;
}
};
pro.setCell=function(cell){
this.cell.delGuest(this);
this.cell=cell;
cell.pushGuest(this);
this.applyCellPostion(false);
if(this.typeName=='item'){
if(cell.yi==8){
this.isItemDead=true;
}
}
};
pro.applyCellPostion=function(now){
this.nextPlace=new PIXI.Point(this.cell.x,this.cell.y);
if(now){
this.Place=this.nextPlace;
}
};
pro.destroy=function(){
this.cell.guests.splice(this.cell.guests.indexOf(this),1);
this.removeChild(this.img);
if(this.label){
this.removeChild(this.label);
}
if(this.bonus){
this.removeChild(this.bonus);
}
if(this.img1){
this.removeChild(this.img1);
this.img1=null;
}
this.img=null;
return this;
};
pro.setAsSelected=function(ok){
this.animTimer=0;
this.isColorSelected=ok;
this.img.setToFrame(ok?3:0);
};
M3.Text=function(text,size,x,y,align,tint){
PIXI.BitmapText.call(this,text,{font:parseInt(size)+"px Font2",align:align||"left"});
this.x=x;
this.y=y;
if(tint)this.tint=tint;
this.updateText();
};
extend(M3.Text,PIXI.BitmapText);
M3.GamePlay=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'GamePlay',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
this.visible=false;
this.OW=soul.OW;
this.OH=soul.OH;
this.selected=[];
var S=this.startS=soul.startS;
this.addChild(this.background=new M3.Background(this,'back_1'));
this.addFrame(this.field=new M3.Field(soul,7,9));this.field.gameplay=this;
this.addChild(this.hud=new PIXI.DisplayObjectContainer());
this.hud.addChild(this.field_game=new M3.Img('field_game',S,this.W*.5,0,new PIXI.Point(0.5,0)));
this.hud.addChild(this.moveField=new M3.Img('move',S,this.W*.5,this.H*.045,.5));
this.hud.addChild(this.scoreField=new M3.Img('score',S,this.W*.8,this.H*.045,.5));
this.hud.addChild(this.slider_1=new M3.Img('slider_1',S,this.W*.15,this.H*.045,.5));
this.hud.addChild(this.slider_2=new M3.Img('slider_2',S,this.W*.15,this.H*.045,.5));
this.hud.addChild(this.sliderMask=this.createGraphics('sliderMask'));
this.hud.addChild(this.targetIcon=new M3.Img('i_1_1',S,this.W*.171,this.H*.047,.5));
this.slider_2.mask=this.sliderMask;
this.sliderMask.x=-this.W*.2;
this.sliderMask.beginFill(0,1);this.sliderMask.y=this.H*.023;
this.sliderMask.drawRect(0,0,this.W*.3,this.H*.05);
this.sliderMask.endFill();
this.hud.addChild(this.stepText=new M3.Text('',S*100,this.W*.5,this.H*.0,'center'));
this.hud.addChild(this.pointText=new M3.Text('',S*67,this.W*.81,this.H*.015,'right'));
this.hud.addChild(this.needPointText=new M3.Text('',S*58,this.W*.1,this.H*.01,'left'));
this.addChild(this.b_pause=new M3.ImgButton('b_pause',null,1,this,S*.9,this.W*.5,this.H*.5));
this.addChild(this.tutorialOne=new M3.TutorialOne(soul,this));
this.addChild(this.tutorial=new M3.Tutorial(soul));
this.addChild(this.pause=new M3.Pause(soul,this));
addEvent(this.b_pause,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.field,Games.CELL_DOWN,this.h_cells);
addEvent(this.field,Games.CELL_UP,this.h_cells);
addEvent(this.field,GodStep.FRAME_UP,this.h_cells);
this.field.setHitArea(-soul.OW,-soul.OH,soul.OW*2,soul.OH*2);
this.addChild(this.console=new M3.Text('',S*80,this.W*.01,this.H*.0,'center'));
addEvent(this.field,GodStep.FRAME_MOVE,this.h_cells);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.GamePlay,GodStep.Frame);
M3.FRAME_RATE=1/60;
pro.update=function(){
if(this.visible){
if(M3.JUST_BONUS_PWNED>0){
M3.JUST_BONUS_PWNED--;
}
if(M3.JUST_BONUS_GENERATED>0){
M3.JUST_BONUS_GENERATED--;
}
if(M3.JUST_BLOCK_DELETE>0){
M3.JUST_BLOCK_DELETE--;
}
if(M3.JUST_DIRT_DELETE>0){
M3.JUST_DIRT_DELETE--;
}
this.field.update();
this.tutorialOne.update();
if(this.tutorial.isDead){
this.tutorial.alpha+=(0-this.tutorial.alpha)*.1;
if(this.tutorial.alpha<0.05){
this.tutorial.visible=false;
}
}else{
this.tutorial.alpha+=(1-this.tutorial.alpha)*.1;
this.tutorialOne.alpha=0;
}
var fcx=this.field.cellCountX;
var fcy=this.field.cellCountY;
var cells=this.field.cellsXY;
var cell,cellRow,guests,obj,dy,downCellRow,downCell,downLeft,downRight,isMoved,isMovedDown;
var d=this.W*.015;
var t=this.W*.04;
var j,i,o;
var isAllNotInPlace=false;
this.isCanMove=true;
var dddy=0;
var justDroped=this.justDroped=false;
for(j=0;j<fcx;j++){
for(i=fcy-1;i>=0;i--){
cellRow=cells[i];
cell=cellRow[j];
guests=cell.guests;
if(i==0){
if(!cell.isBusy()){
this.generate(cell);
}
}
for(o=0;o<guests.length;o++){
obj=guests[o];
obj.update();
if(obj.isDynamic){
dy=obj.nextPlace.y-obj.y;
obj.sy*=.8;
if(dy<t){
downCellRow=cells[cell.yi+1];
if(downCellRow){
downCell=downCellRow[cell.xi];
if(!downCell.isBusy()){
obj.setCell(downCell);
isMovedDown=true;
justDroped=true;
this.stepEndTimer=290;
this.isCanMove=false;
this.isCanFindMatchThree=true;
}
}
if(obj.isItem){
if(obj.isItemDead){
if(obj.itemTimer--==0){
obj.isDead=true;
this.bonusWaitTimer=100;
}
}
}
if(obj.isDead){
this.field.delCellObject(obj);
this.isCanMove=false;
this.isCanFindMatchThree=true;
obj.cell.delGuest(obj);
if(obj.isItem){
GodStep.playSound('crystal',0,M3.SOUND);
this.itemCountFinished--;
if(this.itemCountFinished<=0){
this.levelEnd();
}
}
this.updateTarget();
}
}else{
isAllNotInPlace=true;
dy+=obj.sy;
obj.sy+=.17;
}
var ddy=0;
obj.x+=Math.min(Math.max(-d,(obj.nextPlace.x-obj.x)*.5),d);
obj.y+=ddy=Math.min(Math.max(-d*1.7,(dy*obj.sy)*.5),d*1.7);
dddy=Math.max(ddy,dddy);
}
}
}
}
if(!justDroped)
if(!isAllNotInPlace){
for(i=fcy-1;i>=0;i--){
cellRow=cells[i];
isMovedDown=false;
for(j=0;j<fcx;j++){
cell=cellRow[j];
guests=cell.guests;
if(i==0){
if(guests.length==0){
this.bonusWaitTimer=40;
this.generate(cell);
}
}
for(o=0;o<guests.length;o++){
isMoved=false;
obj=guests[o];
if(obj.isDynamic){
dy=obj.nextPlace.y-obj.y;
if(dy<t){
downCellRow=cells[cell.yi+1];
if(downCellRow){
downCell=downCellRow[cell.xi];
if(!downCell.isBusy()){
obj.setCell(downCell);
isMovedDown=true;
this.isCanMove=false;
this.isCanFindMatchThree=true;
}else{
if(!isMovedDown){
downLeft=downCellRow[cell.xi-1];
downRight=downCellRow[cell.xi+1];
if(downLeft){
if(!downLeft.isBusy()){
obj.setCell(downLeft);
isMoved=true;
this.isCanMove=false;
this.isCanFindMatchThree=true;
}
}
if(!isMoved){
if(downRight){
if(!downRight.isBusy()){
obj.setCell(downRight);
this.isCanMove=false;
this.isCanFindMatchThree=true;
}
}
}
}
}
}
}
}
}
}
}
}
if(this.isCanMove){
if(this.isCanFindMatchThree){
this.isCanFindMatchThree=false;
this.field.findMatchThree();
if(this.isHaveDirt){
if(this.field.dirts.length==0){
this.levelEnd();
}
}
}
if(this.bonusWaitTimer--==0){
if(this.bonusWaitTimer<-100){
this.bonusWaitTimer=-100;
}
this.generateBonuses();
}
}
if(this.isStepsEnded){
if(this.stepEndTimer--==170){
this.tutorial.initEnd(false);
}
if(this.stepEndTimer--<0){
this.isStepsEnded=false;
this.soul.screenTo([this.soul.replay],this);
}
}
if(this.isFinishLevel){
if(this.bonusFinalTimer--==0){
this.tutorial.initEnd(true);
this.isBonusFinalEnd=true;
this.stepText.setText('0');
}
if(this.bonusFinalTimer==100){
for(var bi=0;bi<this.field.cells.length;bi++){
var bcell=this.field.cells[bi];
if(bcell.getBonus()){
this.destroyBonusFromCell(bcell,bcell.getBonus());bcell.cost=50;
bcell.removeDynamic(true);
}
this.pointText.setText(this.points+'');
this.pointText.updateText();this.pointText.x=this.W*.827-this.pointText.width/2;
}
this.isBonuses=false;
this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][0]=1;
M3.NEW_RECORD=(this.points>this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]);
this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]=Math.max(this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1],this.points);
}
if(this.isBonusFinalEnd){
if(this.levelEndTimer--==0){
this.soul.screenTo([this.soul.victory],this);
}
}
}
}
};
pro.updateTarget=function(){
switch(this.gameType){
case'points':
this.needPointText.setText(this.params.points+'');
this.sliderMask.x=-this.W*.2*Math.min(1,(1-Math.min(1,this.points/this.params.points)));
break;
case'items':
this.needPointText.setText((this.params.items-this.itemCountFinished)+'/'+this.params.items);
this.sliderMask.x=-this.W*.2*(1-(this.params.items-this.itemCountFinished)/this.params.items);
break;
case'dirts':
this.needPointText.setText((this.dirtCount-this.field.dirts.length)+'/'+this.dirtCount);
this.sliderMask.x=-this.W*.2*(1-(this.dirtCount-this.field.dirts.length)/this.dirtCount);
break;
}
this.needPointText.updateText();
this.needPointText.x=this.W*.19-this.needPointText.width/2;
this.needPointText.y=this.H*.019;
};
pro.init=function(){
this.isEndGenerateBonuses=false;
M3.JUST_DIRT_DELETE=0;
M3.JUST_BLOCK_DELETE=0;
M3.JUST_BONUS_GENERATED=0;
M3.JUST_BONUS_PWNED=0;
GodStep.volumeSound('theme',M3.MUSIC);
GodStep.playSound('theme',-1,M3.MUSIC);
GodStep.playSound('start',0,M3.SOUND);
M3.SKIN=Math.min(3,parseInt((M3.LAST_LEVEL_SELECTED-1)/10)+1);
this.bonusFinalTimer=0;
this.pause.visible=false;
this.background.img.setTexture('back_'+M3.SKIN);
this.field.reskin(M3.SKIN);
this.sliderMask.x=-this.W*.2;
this.pointText.setText('0');this.pointText.updateText();this.pointText.x=this.W*.827-this.pointText.width/2;
this.isFinishLevel=false;
this.isStepsEnded=false;
this.points=0;
this.bonusWaitTimer=40;
this.isJustInit=true;
this.itemRandomCount=parseInt(Math.random()*(this.field.cellCountX-2)+1);
this.isCanMove=false;
for(var s=0;s<this.selected.length;s++){
this.selected[s].setAsSelected(false);
}
this.selected=[];
this.visible=true;
this.isFinished=false;
this.playerDATA=GodStep.LoadLocal(this.soul.PLAYER_SLOT);
if(this.playerDATA){
}else{
this.playerDATA={};
trace('default save');
}
var leveldata=M3.LAST_LEVEL_DATA;
this.emptyCount=0;
if(leveldata){
this.field.setData(leveldata);
this.params=leveldata[leveldata.length-1];
this.colors=this.params.colors;
this.steps=this.params.steps;
this.isBonuses=this.params.isBonus;
this.bonusCount=this.params.bonuses||0;
this.stepText.setText(this.steps+'');this.stepText.updateText();this.stepText.x=this.W*.5-this.stepText.width/2;
this.needPointText.setText(this.params.points+'');
this.itemCountFinished=this.itemCount=this.params.items;
this.emptyCount=0;
this.field.isNowFilled=true;
this.field.fill();
this.field.findMatchThree();
this.dirtCount=this.field.dirts.length;
if(this.params.points>0){
this.gameType='points';this.targetIcon.setTexture('star_game');
}else
if(this.field.dirts.length>0){
this.gameType='dirts';this.targetIcon.setTexture('i_1_'+M3.SKIN);
}else
if(this.itemCountFinished>0){
this.gameType='items';this.targetIcon.setTexture('i_2_1');
}
this.field.isNowFilled=false;
}
this.updateTarget();
this.tutorial.init();
this.tutorialOne.init(M3.LAST_LEVEL_SELECTED);
this.isHaveDirt=this.field.dirts.length>0;
switch(M3.LAST_LEVEL_SELECTED){
case 13:
this.itemCounter=4;
break;
}
};
pro.generate=function(cell){
var cid=this.colors[parseInt(Math.random()*this.colors.length)];
var type=M3.Cell.STANDART[cid];
if(this.isJustInit){
if(this.emptyCount==this.itemRandomCount){
if(this.itemCount>0){
this.itemCount--;
this.itemCounter=20+this.itemRandomCount;
type='item';
}
this.isJustInit=false;
}
}else{
if(this.itemCount>0&&!this.field.isNowFilled){
this.itemCounter--;
if(this.itemCounter==0){
this.itemCounter=18;
this.itemCount--;
type='item';
}
}
}
var obj;
this.field.addCellObject(obj=new M3.CellObject(type,this.startS,cell));
obj.y-=cell.H;
this.emptyCount++;
};
pro.generateBonuses=function(){
if(this.isBonuses){
if(this.isEndGenerateBonuses){
if(this.steps>0){
this.steps--;
this.bonusWaitTimer=50;
this.bonusCount+=1;
this.bonusFinalTimer=160;
this.stepText.setText(this.steps+'');
}
}
var c=parseInt(Math.random()*(this.field.cells.length-1));
while(this.bonusCount>0){
if(M3.JUST_BONUS_GENERATED==0){
M3.JUST_BONUS_GENERATED=5;
GodStep.playSound('bonus_appear',0,M3.SOUND);
}
var obj=this.field.cells[c].getColored();
if(this.tutorialOne.bonus){
obj=this.tutorialOne.bonus.getColored();
this.tutorialOne.bonus=null;
}
if(obj){
if(!obj.isBonus){
obj.setAsBonus();
c=parseInt(Math.random()*(this.field.cells.length-1));
this.bonusCount--;
}else{
c++;
}
}else{
c++;
}
if(c==this.field.cells.length){
c=0;
}
}
}
};
pro.h_mouse=function(e){
var t=e.content.target;
if(t){
switch(e.type){
case GodStep.FRAME_UP:
t.b_pause.isDown=false;
t.b_pause.Scale=1;
break;
}
}
};
pro.h_cells=function(e){
var cell=e.content.data;
var t=e.target;
var p=t.parent;
var point,overCell2;
var overCell,dx,dy,s,count,selected;
var cells=t.cellsXY;
if(!p.isCanMove||p.isStepsEnded||p.isFinishLevel||p.justDroped||p.pause.visible)return;
switch(e.type){
case GodStep.FRAME_MOVE:
if(p.cellDown){
if(e.content){
if(e.content.getLocalPosition){
point=e.content.getLocalPosition(t);
point=e.content.getLocalPosition(t);
overCell=t.getCellByPoint(point,true);
overCell2=t.getCellByPoint(point,false);
if(overCell){
dx=Math.abs(overCell.xi-p.cellLast.xi);
dy=Math.abs(overCell.yi-p.cellLast.yi);
if(dy<=1&&dx<=1){
if(!overCell.isSelected){
if(overCell.isEqual(p.cellDown)){
if(overCell.setAsSelected(true)){
GodStep.playSound('select',0,M3.SOUND);
p.selected.push(overCell);
count=parseInt((p.selected.length-1)/3);
overCell.cost=200+count*50;
overCell.setCost(overCell.cost);
p.field.addLine(p.cellLast,overCell);
p.cellLast=overCell;
}
}
}
}
}
if(overCell2){
if(p.selected.length>1){
var prev=p.selected[p.selected.length-2];
if(prev==overCell2){
p.cellLast.setAsSelected(false);
GodStep.playSound('select',0,M3.SOUND);
p.selected.splice(p.selected.length-1,1);
p.cellLast=p.selected[p.selected.length-1];
p.field.removeLastLine();
}
}
}
}
}
}
break;
case Games.CELL_DOWN:
if(p.selected.length==0){
p.selected=[];
if(cell.setAsSelected(true)){
GodStep.playSound('select',0,M3.SOUND);
p.cellDown=cell;
p.cellLast=cell;
cell.cost=200;
cell.setCost(cell.cost);
p.selected.push(cell);
}
}
break;
case GodStep.FRAME_UP:
case Games.CELL_UP:
p.bonusWaitTimer=40;
if(p.cellDown){
p.cellDown.setAsSelected(false);
p.cellDown=null;
}
var points=0;
var skip=false;
if(p.selected.length>2){
if(p.tutorialOne.visible){
if(p.tutorialOne.isComplete(p.selected)){
p.tutorialOne.finish();
if(M3.LAST_LEVEL_SELECTED!=1&&M3.LAST_LEVEL_SELECTED!=4&&M3.LAST_LEVEL_SELECTED!=6&&M3.LAST_LEVEL_SELECTED!=13&&M3.LAST_LEVEL_SELECTED!=21){
p.tutorial.visible=true;
p.tutorial.alpha=0;
}
}else{
for(s=0;s<p.selected.length;s++){
p.selected[s].setAsSelected(false);
}
p.field.removeAllLines();
skip=true;
}
}
if(!skip){
GodStep.playSound('match',0,M3.SOUND);
var isBonus=false;
var bonuses=[];
if(p.isBonuses){
p.bonusCount+=parseInt(p.selected.length/7);
}
for(s=0;s<p.selected.length;s++){
selected=p.selected[s];
points+=selected.cost;
selected.setAsSelected(false);
if(selected.getBonus()){
bonuses.push(selected.getBonus());
isBonus=true;
selected.getBonus().removeBonus();
}
p.points+=t.removeBlocksAndDirt(selected,(s==p.selected.length-1&&isBonus));
}
p.steps--;
if(isBonus){
for(var b=0;b<bonuses.length;b++){
p.destroyBonusFromCell(p.selected[p.selected.length-bonuses.length+b],bonuses[b]);
}
}
p.stepText.setText(p.steps+'');p.stepText.updateText();p.stepText.x=p.W*.5-p.stepText.width/2;
}
}else{
GodStep.playSound('select',0,M3.SOUND);
for(s=0;s<p.selected.length;s++){
p.selected[s].setAsSelected(false);
}
}
p.field.removeAllLines();
p.selected=[];
p.points+=points;
p.pointText.setText(p.points+'');
p.pointText.updateText();p.pointText.x=p.W*.827-p.pointText.width/2;
if(p.points>=p.params.points&&p.params.points!=0){
p.levelEnd();
}else
if(p.isHaveDirt){
if(p.steps==0){
p.gameOver();
}
}else{
if(p.steps==0){
p.gameOver();
}
}
p.isCanFindMatchThree=true;
break;
}
};
pro.gameOver=function(){
this.isStepsEnded=true;
this.stepEndTimer=290;
M3.NEW_RECORD=(this.points>this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]);
this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]=Math.max(this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1],this.points);
};
pro.levelEnd=function(){
if(!this.isFinishLevel){
this.isFinishLevel=true;
this.isStepsEnded=false;
this.isBonuses=true;
if(this.steps==0){
this.bonusFinalTimer=100;
}else{
this.bonusFinalTimer=230;
}
this.isBonusFinalEnd=false;
this.stepEndTimer=290;
this.levelEndTimer=90;
this.isEndGenerateBonuses=true;
}
};
pro.destroyBonusFromCell=function(c,bonus,isDestroy){
var pp;
if(!bonus){
return;
}
if(!bonus.isKilled){
if(M3.JUST_BONUS_PWNED==0){
M3.JUST_BONUS_PWNED=5;
GodStep.playSound('bonus_row',0,M3.SOUND);
}
bonus.isKilled=true;
var field=this.field;
var cells=this.field.cellsXY;
this.points+=700;
var bonusCell=c;
if(bonusCell==null){
bonusCell=bonus.cell;
}
var cell;
if(bonus.isVertical){
for(var i=0;i<field.cellCountY;i++){
cell=cells[i][bonusCell.xi];
if(i!=bonusCell.yi){
if(cell.getColored()){
this.destroyBonusFromCell(null,cell.getBonus());
pp=field.removeBlocksAndDirt(cell,true)+50;
this.points+=pp;
cell.setCost(pp);
}
}
}
}else{
for(var j=0;j<field.cellCountX;j++){
cell=cells[bonusCell.yi][j];
if(j!=bonusCell.xi){
if(cell.getColored()){
this.destroyBonusFromCell(null,cell.getBonus());
pp=field.removeBlocksAndDirt(cell,true)+50;
this.points+=pp;
cell.setCost(pp);
}
}
}
}
}
};
pro.destroyBonus=function(bonus){
var field=this.field;
var cells=this.field.cellsXY;
var cell;
if(bonus){
this.points+=700;
var bonusCell=bonus.cell;
if(bonus.isVertical){
for(var i=0;i<field.cellCountY;i++){
cell=cells[i][bonusCell.xi];
if(i!=bonusCell.yi){
if(cell.getColored()){
this.points+=field.removeBlocksAndDirt(cell);
this.points+=50;
}
}
}
}else{
for(var j=0;j<field.cellCountX;j++){
cell=cells[bonusCell.yi][j];
if(j!=bonusCell.xi){
if(cell.getColored()){
this.points+=field.removeBlocksAndDirt(cell);
this.points+=50;
}
}
}
}
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_pause:
GodStep.playSound('button',0,M3.SOUND);
if(M3.DEVMODE){
s.screenTo([s.dev],p);
}else{
p.pause.init();
}
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.tutorial.Scale=value;
this.tutorialOne.Scale=value;
this.pause.Scale=value;
this.scale.x=this.scale.y=value;
this.background.rescale(value);
var dy=this.soul.OH-this.soul.H;
this.b_pause.y=(this.soul.H*.962+dy/2)/value;
this.hud.y=(-dy/2)/value;
this.console.y=(this.soul.H*.85+dy/2)/value;
this.field.scale.x=this.field.scale.y=Math.min(1.25,1+(this.soul.OH-this.soul.H)/this.soul.H*1.13);
this.field.x=(this.W-this.field.W*M3.CELLW_SCALE*this.field.scale.x)*.5;
this.field.y=this.H-this.field.x*1.05-this.field.H*.989*this.field.scale.x;
}
});
M3.FontLoader=function(assetURLs,crossorigin){
new M3.BitmapFontLoader();
};
extend(M3.FontLoader,PIXI.AssetLoader);
M3.FontString='<font>'+
'<info face="Font2" size="71" />'+
'<common lineHeight="71" scaleW="681" scaleH="682" pages="1" />'+
'<pages>'+
'<page id="0" file="Font2.png" />'+
'</pages>'+
'<chars count="190">'+
'<char id="33" x="654" y="279" width="8" height="51" xoffset="0" yoffset="20" xadvance="12" /><!-- ! -->'+
'<char id="34" x="112" y="348" width="18" height="14" xoffset="0" yoffset="20" xadvance="22" /><!-- " -->'+
'<char id="35" x="254" y="67" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- # -->'+
'<char id="36" x="254" y="132" width="28" height="59" xoffset="0" yoffset="16" xadvance="32" /><!-- $ -->'+
'<char id="37" x="0" y="53" width="53" height="43" xoffset="0" yoffset="28" xadvance="57" /><!-- % -->'+
'<char id="38" x="160" y="456" width="32" height="53" xoffset="0" yoffset="19" xadvance="36" /><!-- & -->'+
'<char id="39" x="494" y="540" width="8" height="14" xoffset="0" yoffset="20" xadvance="12" /><!-- -->'+
'<char id="40" x="632" y="69" width="14" height="55" xoffset="0" yoffset="18" xadvance="18" /><!-- ( -->'+
'<char id="41" x="632" y="0" width="14" height="55" xoffset="0" yoffset="18" xadvance="18" /><!-- ) -->'+
'<char id="42" x="531" y="189" width="22" height="22" xoffset="0" yoffset="24" xadvance="26" /><!-- * -->'+
'<char id="43" x="211" y="100" width="18" height="18" xoffset="0" yoffset="43" xadvance="22" /><!-- + -->'+
'<char id="44" x="295" y="399" width="8" height="16" xoffset="0" yoffset="63" xadvance="12" /><!-- , -->'+
'<char id="45" x="160" y="575" width="11" height="6" xoffset="0" yoffset="53" xadvance="15" /><!-- - -->'+
'<char id="46" x="164" y="320" width="8" height="8" xoffset="0" yoffset="63" xadvance="12" /><!-- . -->'+
'<char id="47" x="418" y="239" width="24" height="51" xoffset="0" yoffset="20" xadvance="28" /><!-- / -->'+
'<char id="48" x="378" y="65" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 0 -->'+
'<char id="49" x="632" y="574" width="14" height="51" xoffset="0" yoffset="20" xadvance="18" /><!-- 1 -->'+
'<char id="50" x="376" y="408" width="26" height="52" xoffset="0" yoffset="19" xadvance="30" /><!-- 2 -->'+
'<char id="51" x="416" y="369" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 3 -->'+
'<char id="52" x="294" y="577" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- 4 -->'+
'<char id="53" x="377" y="541" width="26" height="52" xoffset="0" yoffset="20" xadvance="30" /><!-- 5 -->'+
'<char id="54" x="376" y="474" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 6 -->'+
'<char id="55" x="566" y="266" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- 7 -->'+
'<char id="56" x="335" y="399" width="27" height="53" xoffset="0" yoffset="19" xadvance="31" /><!-- 8 -->'+
'<char id="57" x="338" y="65" width="26" height="53" xoffset="0" yoffset="19" xadvance="30" /><!-- 9 -->'+
'<char id="58" x="601" y="130" width="8" height="24" xoffset="0" yoffset="40" xadvance="12" /><!-- : -->'+
'<char id="59" x="567" y="449" width="8" height="31" xoffset="0" yoffset="40" xadvance="12" /><!-- ; -->'+
'<char id="60" x="567" y="169" width="19" height="34" xoffset="0" yoffset="36" xadvance="23" /><!-- < -->'+
'<char id="61" x="127" y="653" width="18" height="15" xoffset="0" yoffset="49" xadvance="22" /><!-- = -->'+
'<char id="62" x="567" y="217" width="19" height="34" xoffset="0" yoffset="36" xadvance="23" /><!-- > -->'+
'<char id="63" x="338" y="132" width="26" height="47" xoffset="0" yoffset="24" xadvance="30" /><!-- ? -->'+
'<char id="64" x="0" y="382" width="44" height="49" xoffset="0" yoffset="26" xadvance="48" /><!-- @ -->'+
'<char id="65" x="167" y="67" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- A -->'+
'<char id="66" x="297" y="0" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- B -->'+
'<char id="67" x="252" y="289" width="29" height="53" xoffset="0" yoffset="19" xadvance="33" /><!-- C -->'+
'<char id="68" x="337" y="197" width="27" height="51" xoffset="0" yoffset="20" xadvance="31" /><!-- D -->'+
'<char id="69" x="567" y="539" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- E -->'+
'<char id="70" x="567" y="331" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- F -->'+
'<char id="71" x="167" y="0" width="30" height="53" xoffset="0" yoffset="19" xadvance="34" /><!-- G -->'+
'<char id="72" x="292" y="512" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- H -->'+
'<char id="73" x="659" y="138" width="8" height="51" xoffset="0" yoffset="20" xadvance="12" /><!-- I -->'+
'<char id="74" x="602" y="372" width="15" height="51" xoffset="0" yoffset="20" xadvance="19" /><!-- J -->'+
'<char id="75" x="205" y="523" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- K -->'+
'<char id="76" x="566" y="606" width="21" height="51" xoffset="0" yoffset="20" xadvance="25" /><!-- L -->'+
'<char id="77" x="118" y="0" width="35" height="51" xoffset="0" yoffset="20" xadvance="39" /><!-- M -->'+
'<char id="78" x="339" y="0" width="26" height="51" xoffset="0" yoffset="20" xadvance="30" /><!-- N -->'+
'<char id="79" x="254" y="0" width="29" height="53" xoffset="0" yoffset="19" xadvance="33" /><!-- O -->'+
'<char id="80" x="378" y="173" width="26" height="51" xoffset="0" yoffset="20" xadvance="30" /><!-- P -->'+
'<char id="81" x="252" y="356" width="29" height="60" xoffset="0" yoffset="19" xadvance="33" /><!-- Q -->'+
'<char id="82" x="295" y="272" width="28" height="51" xoffset="0" yoffset="20" xadvance="32" /><!-- R -->'+
'<char id="83" x="295" y="205" width="28" height="53" xoffset="0" yoffset="19" xadvance="32" /><!-- S -->'+
'<char id="84" x="377" y="607" width="26" height="51" xoffset="0" yoffset="20" xadvance="30" /><!-- T -->'+
'<char id="85" x="208" y="288" width="30" height="52" xoffset="0" yoffset="20" xadvance="34" /><!-- U -->'+
'<char id="86" x="208" y="223" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- V -->'+
'<char id="87" x="0" y="445" width="44" height="51" xoffset="0" yoffset="20" xadvance="48" /><!-- W -->'+
'<char id="88" x="207" y="588" width="30" height="51" xoffset="0" yoffset="20" xadvance="34" /><!-- X -->'+
'<char id="89" x="249" y="512" width="29" height="51" xoffset="0" yoffset="20" xadvance="33" /><!-- Y -->'+
'<char id="90" x="417" y="502" width="25" height="51" xoffset="0" yoffset="20" xadvance="29" /><!-- Z -->'+
'<char id="91" x="602" y="513" width="16" height="55" xoffset="0" yoffset="18" xadvance="20" /><!-- [ -->'+
'<char id="92" x="632" y="437" width="14" height="51" xoffset="0" yoffset="20" xadvance="18" /><!--  -->'+
'<char id="93" x="602" y="0" width="16" height="55" xoffset="0" yoffset="18" xadvance="20" /><!-- ] -->'+
'<char id="94" x="55" y="649" width="23" height="19" xoffset="0" yoffset="27" xadvance="27" /><!-- ^ -->'+
'<char id="95" x="0" y="650" width="22" height="6" xoffset="0" yoffset="65" xadvance="26" /><!-- _ -->'+
'<char id="96" x="159" y="655" width="12" height="12" xoffset="0" yoffset="20" xadvance="16" /><!-- ` -->'+
'<char id="97" x="455" y="629" width="24" height="38" xoffset="0" yoffset="34" xadvance="28" /><!-- a -->'+
'<char id="98" x="456" y="502" width="24" height="52" xoffset="0" yoffset="20" xadvance="28" /><!-- b -->'+
'<char id="99" x="493" y="422" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- c -->'+
'<char id="100" x="416" y="436" width="25" height="52" xoffset="0" yoffset="20" xadvance="29" /><!-- d -->'+
'<char id="101" x="493" y="568" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- e -->'+
'<char id="102" x="601" y="604" width="17" height="49" xoffset="0" yoffset="22" xadvance="21" /><!-- f -->'+
'<char id="103" x="295" y="337" width="28" height="48" xoffset="0" yoffset="34" xadvance="32" /><!-- g -->'+
'<char id="104" x="531" y="433" width="22" height="51" xoffset="0" yoffset="20" xadvance="26" /><!-- h -->'+
'<char id="105" x="659" y="344" width="8" height="49" xoffset="0" yoffset="22" xadvance="12" /><!-- i -->'+
'<char id="106" x="632" y="502" width="14" height="58" xoffset="0" yoffset="22" xadvance="18" /><!-- j -->'+
'<char id="107" x="456" y="193" width="24" height="51" xoffset="0" yoffset="20" xadvance="28" /><!-- k -->'+
'<char id="108" x="632" y="307" width="8" height="51" xoffset="0" yoffset="20" xadvance="12" /><!-- l -->'+
'<char id="109" x="67" y="53" width="37" height="37" xoffset="0" yoffset="34" xadvance="41" /><!-- m -->'+
'<char id="110" x="530" y="606" width="22" height="37" xoffset="0" yoffset="34" xadvance="26" /><!-- n -->'+
'<char id="111" x="493" y="620" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- o -->'+
'<char id="112" x="456" y="65" width="24" height="48" xoffset="0" yoffset="34" xadvance="28" /><!-- p -->'+
'<char id="113" x="417" y="567" width="25" height="48" xoffset="0" yoffset="34" xadvance="29" /><!-- q -->'+
'<char id="114" x="601" y="79" width="17" height="37" xoffset="0" yoffset="34" xadvance="21" /><!-- r -->'+
'<char id="115" x="456" y="568" width="23" height="38" xoffset="0" yoffset="34" xadvance="27" /><!-- s -->'+
'<char id="116" x="601" y="449" width="17" height="50" xoffset="0" yoffset="22" xadvance="21" /><!-- t -->'+
'<char id="117" x="494" y="367" width="22" height="38" xoffset="0" yoffset="34" xadvance="26" /><!-- u -->'+
'<char id="118" x="418" y="147" width="24" height="37" xoffset="0" yoffset="34" xadvance="28" /><!-- v -->'+
'<char id="119" x="110" y="550" width="36" height="37" xoffset="0" yoffset="33" xadvance="40" /><!-- w -->'+
'<char id="120" x="417" y="629" width="24" height="37" xoffset="0" yoffset="33" xadvance="28" /><!-- x -->'+
'<char id="121" x="418" y="48" width="24" height="46" xoffset="0" yoffset="33" xadvance="28" /><!-- y -->'+
'<char id="122" x="567" y="79" width="20" height="37" xoffset="0" yoffset="33" xadvance="24" /><!-- z -->'+
'<char id="123" x="601" y="238" width="18" height="55" xoffset="0" yoffset="17" xadvance="22" /><!-- { -->'+
'<char id="124" x="660" y="407" width="6" height="59" xoffset="0" yoffset="15" xadvance="10" /><!-- | -->'+
'<char id="125" x="600" y="169" width="18" height="55" xoffset="0" yoffset="17" xadvance="22" /><!-- } -->'+
'<char id="126" x="92" y="655" width="21" height="9" xoffset="0" yoffset="38" xadvance="25" /><!-- ~ -->'+
'<char id="199" x="250" y="431" width="29" height="67" xoffset="0" yoffset="18" xadvance="33" /><!-- Ç -->'+
'<char id="213" x="251" y="577" width="29" height="64" xoffset="0" yoffset="7" xadvance="33" /><!-- Õ -->'+
'<char id="211" x="252" y="209" width="29" height="66" xoffset="0" yoffset="5" xadvance="33" /><!-- Ó -->'+
'<char id="231" x="530" y="367" width="23" height="52" xoffset="0" yoffset="33" xadvance="27" /><!-- ç -->'+
'<char id="237" x="631" y="372" width="14" height="51" xoffset="0" yoffset="19" xadvance="18" /><!-- í -->'+
'<char id="227" x="456" y="320" width="24" height="49" xoffset="0" yoffset="22" xadvance="28" /><!-- ã -->'+
'<char id="243" x="530" y="540" width="23" height="52" xoffset="0" yoffset="19" xadvance="27" /><!-- ó -->'+
'<char id="234" x="494" y="235" width="23" height="52" xoffset="0" yoffset="19" xadvance="27" /><!-- ê -->'+
'<char id="233" x="494" y="169" width="23" height="52" xoffset="0" yoffset="19" xadvance="27" /><!-- é -->'+
'<char id="228" x="456" y="258" width="24" height="48" xoffset="0" yoffset="23" xadvance="28" /><!-- ä -->'+
'<char id="223" x="376" y="341" width="26" height="53" xoffset="0" yoffset="18" xadvance="30" /><!-- ß -->'+
'<char id="246" x="494" y="107" width="23" height="48" xoffset="0" yoffset="23" xadvance="27" /><!-- ö -->'+
'<char id="252" x="531" y="62" width="22" height="48" xoffset="0" yoffset="23" xadvance="26" /><!-- ü -->'+
'<char id="241" x="531" y="0" width="22" height="48" xoffset="0" yoffset="22" xadvance="26" /><!-- ñ -->'+
'<char id="161" x="655" y="203" width="8" height="44" xoffset="0" yoffset="18" xadvance="12" /><!-- ¡ -->'+
'<char id="191" x="567" y="396" width="21" height="39" xoffset="0" yoffset="23" xadvance="25" /><!-- ¿ -->'+
'<char id="200" x="567" y="0" width="21" height="65" xoffset="0" yoffset="5" xadvance="25" /><!-- È -->'+
'<char id="195" x="208" y="354" width="30" height="63" xoffset="0" yoffset="7" xadvance="34" /><!-- Ã -->'+
'<char id="350" x="293" y="430" width="28" height="67" xoffset="0" yoffset="18" xadvance="32" /><!-- Ş -->'+
'<char id="220" x="210" y="132" width="30" height="63" xoffset="0" yoffset="8" xadvance="34" /><!-- Ü -->'+
'<char id="351" x="494" y="474" width="23" height="52" xoffset="0" yoffset="34" xadvance="27" /><!-- ş -->'+
'<char id="287" x="296" y="121" width="28" height="62" xoffset="0" yoffset="20" xadvance="32" /><!-- ğ -->'+
'<char id="280" x="531" y="266" width="21" height="66" xoffset="0" yoffset="20" xadvance="25" /><!-- Ę -->'+
'<char id="281" x="494" y="41" width="23" height="52" xoffset="0" yoffset="34" xadvance="27" /><!-- ę -->'+
'<char id="261" x="456" y="127" width="24" height="52" xoffset="0" yoffset="34" xadvance="28" /><!-- ą -->'+
'<char id="321" x="456" y="0" width="24" height="51" xoffset="0" yoffset="20" xadvance="28" /><!-- Ł -->'+
'<char id="322" x="602" y="307" width="16" height="51" xoffset="0" yoffset="20" xadvance="20" /><!-- ł -->'+
'<char id="324" x="531" y="124" width="22" height="51" xoffset="0" yoffset="20" xadvance="26" /><!-- ń -->'+
'<char id="323" x="378" y="238" width="26" height="65" xoffset="0" yoffset="6" xadvance="30" /><!-- Ń -->'+
'<char id="347" x="494" y="301" width="23" height="52" xoffset="0" yoffset="20" xadvance="27" /><!-- ś -->'+
'<char id="1072" x="418" y="198" width="24" height="27" xoffset="0" yoffset="45" xadvance="28" /><!-- а -->'+
'<char id="1073" x="337" y="341" width="25" height="43" xoffset="0" yoffset="29" xadvance="29" /><!-- б -->'+
'<char id="1074" x="418" y="108" width="24" height="25" xoffset="0" yoffset="46" xadvance="28" /><!-- в -->'+
'<char id="1075" x="567" y="130" width="20" height="25" xoffset="0" yoffset="46" xadvance="24" /><!-- г -->'+
'<char id="1076" x="379" y="0" width="26" height="34" xoffset="0" yoffset="46" xadvance="30" /><!-- д -->'+
'<char id="1077" x="531" y="498" width="21" height="27" xoffset="0" yoffset="45" xadvance="25" /><!-- е -->'+
'<char id="1078" x="0" y="610" width="41" height="26" xoffset="0" yoffset="45" xadvance="45" /><!-- ж -->'+
'<char id="1079" x="566" y="498" width="21" height="27" xoffset="0" yoffset="45" xadvance="25" /><!-- з -->'+
'<char id="1080" x="167" y="132" width="29" height="25" xoffset="0" yoffset="46" xadvance="33" /><!-- и -->'+
'<char id="1082" x="337" y="262" width="27" height="26" xoffset="0" yoffset="45" xadvance="31" /><!-- к -->'+
'<char id="1083" x="335" y="466" width="27" height="26" xoffset="0" yoffset="46" xadvance="31" /><!-- л -->'+
'<char id="1084" x="111" y="382" width="35" height="25" xoffset="0" yoffset="46" xadvance="39" /><!-- м -->'+
'<char id="1085" x="166" y="223" width="28" height="25" xoffset="0" yoffset="46" xadvance="32" /><!-- н -->'+
'<char id="1086" x="378" y="132" width="26" height="27" xoffset="0" yoffset="45" xadvance="30" /><!-- о -->'+
'<char id="1087" x="294" y="642" width="28" height="25" xoffset="0" yoffset="46" xadvance="32" /><!-- п -->'+
'<char id="1088" x="336" y="565" width="27" height="41" xoffset="0" yoffset="44" xadvance="31" /><!-- р -->'+
'<char id="1089" x="531" y="225" width="22" height="27" xoffset="0" yoffset="45" xadvance="26" /><!-- с -->'+
'<char id="1090" x="419" y="0" width="23" height="25" xoffset="0" yoffset="46" xadvance="27" /><!-- т -->'+
'<char id="1091" x="296" y="67" width="28" height="40" xoffset="0" yoffset="46" xadvance="32" /><!-- у -->'+
'<char id="1092" x="115" y="278" width="35" height="56" xoffset="0" yoffset="29" xadvance="39" /><!-- ф -->'+
'<char id="1093" x="118" y="171" width="28" height="25" xoffset="0" yoffset="46" xadvance="32" /><!-- х -->'+
'<char id="1094" x="211" y="52" width="29" height="34" xoffset="0" yoffset="46" xadvance="33" /><!-- ц -->'+
'<char id="1095" x="337" y="302" width="27" height="25" xoffset="0" yoffset="46" xadvance="31" /><!-- ч -->'+
'<char id="1096" x="55" y="610" width="41" height="25" xoffset="0" yoffset="46" xadvance="45" /><!-- ш -->'+
'<char id="1097" x="0" y="562" width="42" height="34" xoffset="0" yoffset="46" xadvance="46" /><!-- щ -->'+
'<char id="1100" x="456" y="383" width="24" height="25" xoffset="0" yoffset="46" xadvance="28" /><!-- ь -->'+
'<char id="1099" x="68" y="0" width="36" height="25" xoffset="0" yoffset="46" xadvance="40" /><!-- ы -->'+
'<char id="1101" x="494" y="0" width="23" height="27" xoffset="0" yoffset="45" xadvance="27" /><!-- э -->'+
'<char id="1102" x="56" y="563" width="37" height="27" xoffset="0" yoffset="45" xadvance="41" /><!-- ю -->'+
'<char id="1103" x="336" y="620" width="27" height="25" xoffset="0" yoffset="46" xadvance="31" /><!-- я -->'+
'<char id="1052" x="0" y="278" width="49" height="38" xoffset="0" yoffset="33" xadvance="53" /><!-- М -->'+
'<char id="1040" x="66" y="110" width="38" height="39" xoffset="0" yoffset="32" xadvance="42" /><!-- А -->'+
'<char id="1043" x="416" y="317" width="26" height="38" xoffset="0" yoffset="33" xadvance="30" /><!-- Г -->'+
'<char id="1047" x="334" y="511" width="27" height="40" xoffset="0" yoffset="32" xadvance="31" /><!-- З -->'+
'<char id="1048" x="59" y="330" width="39" height="38" xoffset="0" yoffset="33" xadvance="43" /><!-- И -->'+
'<char id="1053" x="0" y="510" width="42" height="38" xoffset="0" yoffset="33" xadvance="46" /><!-- Н -->'+
'<char id="1051" x="159" y="601" width="34" height="39" xoffset="0" yoffset="33" xadvance="38" /><!-- Л -->'+
'<char id="1062" x="58" y="382" width="39" height="48" xoffset="0" yoffset="33" xadvance="43" /><!-- Ц -->'+
'<char id="1059" x="110" y="496" width="36" height="40" xoffset="0" yoffset="33" xadvance="40" /><!-- У -->'+
'<char id="1050" x="117" y="215" width="35" height="39" xoffset="0" yoffset="32" xadvance="39" /><!-- К -->'+
'<char id="1041" x="166" y="171" width="30" height="38" xoffset="0" yoffset="33" xadvance="34" /><!-- Б -->'+
'<char id="1061" x="66" y="163" width="38" height="38" xoffset="0" yoffset="33" xadvance="42" /><!-- Х -->'+
'<char id="1063" x="110" y="601" width="35" height="38" xoffset="0" yoffset="33" xadvance="39" /><!-- Ч -->'+
'<char id="1044" x="111" y="421" width="35" height="48" xoffset="0" yoffset="33" xadvance="39" /><!-- Д -->'+
'<char id="1042" x="206" y="456" width="30" height="38" xoffset="0" yoffset="33" xadvance="34" /><!-- В -->'+
'<char id="1055" x="63" y="278" width="38" height="38" xoffset="0" yoffset="33" xadvance="42" /><!-- П -->'+
'<char id="1057" x="118" y="65" width="35" height="40" xoffset="0" yoffset="32" xadvance="39" /><!-- С -->'+
'<char id="1056" x="211" y="0" width="29" height="38" xoffset="0" yoffset="33" xadvance="33" /><!-- Р -->'+
'<char id="1058" x="160" y="402" width="33" height="40" xoffset="0" yoffset="31" xadvance="37" /><!-- Т -->'+
'<char id="1054" x="65" y="224" width="38" height="40" xoffset="0" yoffset="32" xadvance="42" /><!-- О -->'+
'<char id="304" x="633" y="203" width="8" height="62" xoffset="0" yoffset="9" xadvance="12" /><!-- İ -->'+
'<char id="1068" x="164" y="268" width="30" height="38" xoffset="0" yoffset="33" xadvance="34" /><!-- Ь -->'+
'<char id="1046" x="0" y="0" width="54" height="39" xoffset="0" yoffset="32" xadvance="58" /><!-- Ж -->'+
'<char id="1045" x="160" y="523" width="31" height="38" xoffset="0" yoffset="33" xadvance="35" /><!-- Е -->'+
'<char id="224" x="455" y="436" width="24" height="52" xoffset="0" yoffset="20" xadvance="28" /><!-- à -->'+
'<char id="236" x="632" y="138" width="13" height="51" xoffset="0" yoffset="20" xadvance="17" /><!-- ì -->'+
'<char id="1060" x="56" y="510" width="40" height="39" xoffset="0" yoffset="32" xadvance="44" /><!-- Ф -->'+
'<char id="1064" x="0" y="172" width="52" height="38" xoffset="0" yoffset="33" xadvance="56" /><!-- Ш -->'+
'<char id="1065" x="0" y="110" width="52" height="48" xoffset="0" yoffset="33" xadvance="56" /><!-- Щ -->'+
'<char id="1066" x="58" y="444" width="39" height="38" xoffset="0" yoffset="33" xadvance="43" /><!-- Ъ -->'+
'<char id="1067" x="0" y="330" width="45" height="38" xoffset="0" yoffset="33" xadvance="49" /><!-- Ы -->'+
'<char id="1069" x="160" y="348" width="34" height="40" xoffset="0" yoffset="32" xadvance="38" /><!-- Э -->'+
'<char id="1070" x="0" y="224" width="51" height="40" xoffset="0" yoffset="32" xadvance="55" /><!-- Ю -->'+
'<char id="1071" x="118" y="119" width="35" height="38" xoffset="0" yoffset="33" xadvance="39" /><!-- Я -->'+
'<char id="32" x="0" y="0" width="0" height="0" xoffset="0" yoffset="0" xadvance="21" /><!--   -->'+
'<char id="9" x="0" y="0" width="0" height="0" xoffset="0" yoffset="0" xadvance="168" /><!--   -->'+
'</chars>'+
'<kernings count="0">'+
'</kernings>'+
'</font>';
M3.BitmapFontLoader=function(){
var xmlDoc;
if(window.DOMParser)
{
var parser=new DOMParser();
xmlDoc=parser.parseFromString(M3.FontString,"text/xml");
}
else
{
xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
xmlDoc.async=false;
xmlDoc.loadXML(M3.FontString);
}
var responseXML=xmlDoc;
var textureUrl=this.baseUrl+responseXML.getElementsByTagName('page')[0].getAttribute('file');
this.texture=GodStep.textures['Font2'].baseTexture;
var data={};
var info=responseXML.getElementsByTagName('info')[0];
var common=responseXML.getElementsByTagName('common')[0];
data.font=info.getAttribute('face');
data.size=parseInt(info.getAttribute('size'),10);
data.lineHeight=parseInt(common.getAttribute('lineHeight'),10);
data.chars={};
var letters=responseXML.getElementsByTagName('char');
for(var i=0;i<letters.length;i++)
{
var charCode=parseInt(letters[i].getAttribute('id'),10);
var textureRect=new PIXI.Rectangle(
parseInt(letters[i].getAttribute('x'),10),
parseInt(letters[i].getAttribute('y'),10),
parseInt(letters[i].getAttribute('width'),10),
parseInt(letters[i].getAttribute('height'),10)
);
data.chars[charCode]={
xOffset:parseInt(letters[i].getAttribute('xoffset'),10),
yOffset:parseInt(letters[i].getAttribute('yoffset'),10)+20,
xAdvance:parseInt(letters[i].getAttribute('xadvance'),10),
kerning:{},
texture:PIXI.TextureCache[charCode]=new PIXI.Texture(this.texture,textureRect)
};
}
var kernings=responseXML.getElementsByTagName('kerning');
for(i=0;i<kernings.length;i++)
{
var first=parseInt(kernings[i].getAttribute('first'),10);
var second=parseInt(kernings[i].getAttribute('second'),10);
var amount=parseInt(kernings[i].getAttribute('amount'),10);
data.chars[second].kerning[first]=amount;
}
PIXI.BitmapText.fonts[data.font]=data;
};
extend(M3.BitmapFontLoader,PIXI.BitmapFontLoader);
M3.Background=function(parent,name){
this.soul=parent.soul;
this.p=parent;
GodStep.Frame.call(this,'Background',parent.W,parent.H);
this.addChild(this.img=new M3.Img(name,parent.startS,this.W*.5,this.H*.5,.5));
};
extend(M3.Background,GodStep.Frame);
pro.rescale=function(s){
this.scale.x=this.scale.y=this.soul.OH/this.soul.H;
this.x=+(this.soul.W-this.soul.W*this.scale.x)/2;
this.y=-(this.soul.OH-this.soul.H)*.5/s;
};
M3.Settings=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Settings',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_o'));
this.addChild(this.musicLabel=new M3.Img('icon_music',S,this.W*.23,this.H*.565,.5));
this.addChild(this.soundLabel=new M3.Img('icon_sound',S,this.W*.23,this.H*.37,.5));
this.addChild(this.pers=new M3.Img('pers_o',S,this.W*.23,this.H*.1,.5));
this.addChild(this.optLabel=new M3.Text('OPTIONS',200*S,this.W*.5,this.H*.2,'left',0xffffff));
this.addChild(this.musicLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.48,'left',0xffffff));
this.addChild(this.soundLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.29,'left',0xffffff));
this.addChild(this.b_music_on=new M3.ImgButton('on',null,null,this,S,this.W*.72,this.H*.56));
this.addChild(this.b_music_off=new M3.ImgButton('off',null,null,this,S,this.W*.72,this.H*.56));
this.addChild(this.b_sound_on=new M3.ImgButton('on',null,null,this,S,this.W*.72,this.H*.37));
this.addChild(this.b_sound_off=new M3.ImgButton('off',null,null,this,S,this.W*.72,this.H*.37));
this.addChild(this.b_back=new M3.ImgButton('b_back','b_shadow',1,this,S,this.W*.85,this.H*.12));
this.addChild(this.b_tutor_on=new M3.ImgButton('tutorial_on',null,null,this,S,this.W*.23,this.H*.75));
this.addChild(this.b_tutor_off=new M3.ImgButton('tutorial_off',null,null,this,S,this.W*.23,this.H*.75));
this.addChild(this.tutorLabel=new M3.Text('TUTORIAL ON',120*S,this.W*.35,this.H*.69,'left',0xffffff));
this.b_tutor_on.scaleble=this.b_tutor_off.scaleble=this.b_music_off.scaleble=
this.b_sound_on.scaleble=
this.b_music_on.scaleble=
this.b_sound_off.scaleble=false;
this.visible=false;
this.b_tutor_off.visible=this.b_sound_off.visible=this.b_music_off.visible=false;
addEvent(this.b_tutor_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_tutor_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Settings,GodStep.Frame);
pro.init=function(){
this.visible=true;
this.b_music_off.visible=!M3.MUSIC;
this.b_music_on.visible=M3.MUSIC;
this.b_sound_off.visible=!M3.SOUND;
this.b_sound_on.visible=M3.SOUND;
if(M3.MUSIC){
this.musicLabel.setText('ON');this.musicLabel.updateText();
}else{
this.musicLabel.setText('OFF');this.musicLabel.updateText();
}
if(M3.SOUND){
this.soundLabel.setText('ON');this.soundLabel.updateText();
}else{
this.soundLabel.setText('OFF');this.soundLabel.updateText();
}
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_back.isDown=false;
t.b_back.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_tutor_off:
p.b_tutor_off.visible=false;
p.b_tutor_on.visible=true;
p.tutorLabel.setText('TUTORIAL ON');
M3.TUTORIAL=true;
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_tutor_on:
p.b_tutor_on.visible=false;
p.b_tutor_off.visible=true;
p.tutorLabel.setText('TUTORIAL OFF');
M3.TUTORIAL=false;
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_music_on:
M3.MUSIC=false;
GodStep.playSound('button',0,M3.SOUND);
GodStep.volumeSound('theme',M3.MUSIC);
p.b_music_on.visible=false;
p.b_music_off.visible=true;
p.musicLabel.setText('OFF');
break;
case p.b_music_off:
M3.MUSIC=true;
GodStep.volumeSound('theme',M3.MUSIC);
GodStep.playSound('button',0,M3.SOUND);
GodStep.playSound('theme',null,M3.MUSIC);
p.b_music_on.visible=true;
p.b_music_off.visible=false;
p.musicLabel.setText('ON');
break;
case p.b_sound_on:
M3.SOUND=false;
GodStep.playSound('button',0,M3.SOUND);
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=false;
p.b_sound_off.visible=true;
p.soundLabel.setText('OFF');
break;
case p.b_sound_off:
M3.SOUND=true;
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=true;
p.b_sound_off.visible=false;
p.soundLabel.setText('ON');
break;
case p.b_back:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.startmenu],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.scale.x=this.scale.y=value;
this.optLabel.y=this.b_back.y=-(this.soul.OH-this.soul.H)*.5/value+this.soul.H*.1/value;
this.optLabel.y-=this.soul.H*.07/value;
this.b_back.y=(this.soul.H*.88+dy/2)/value;
this.pers.y=(-dy/2+this.soul.H*.12)/value;
this.back.rescale(value);
}
});
M3.LevButton=function(img,scaleS,px,py,text,textSize,tdx,tdy,tint){
var tex=GodStep.textures[img];
var startS=scaleS;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
if(text){
this.addChild(this.label=new M3.Text(text,(textSize||100),0,0,'center',tint));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.downScale=.95;
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.LevButton,GodStep.Frame);
M3.LevButton.COLORS=[0xe77719,0xb1321e,0x608b28,0xc22929,0xc1282c];
pro.setAsComplete=function(){
var id=this.ID-parseInt(this.ID/5)*5+1;
this.img.setTexture(GodStep.textures['unlock']);
this.label.tint=0;
this.isDisabled=false;
this.label.tint=0x36cffb;
this.label.updateText();
};
pro.setAsActive=function(){
var id=this.ID-parseInt(this.ID/5)*5+1;
this.img.setTexture(GodStep.textures['lock']);
this.label.tint=0xFF4079;
this.label.updateText();
this.isDisabled=false;
};
pro.destroy=function(){
this.removeChild(this.img);
delEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
delEvent(this,GodStep.FRAME_OUT,this.h_mouse);
delEvent(this,GodStep.FRAME_OVER,this.h_mouse);
delEvent(this,GodStep.FRAME_UP,this.h_mouse);
if(this.label)this.removeChild(this.label);
return this;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
this.Scale=this.downScale;
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,M3.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.Scale=1;
break;
case GodStep.FRAME_OVER:
if(this.isDown){
this.Scale=this.downScale;
}
break;
}
};
M3.Replay=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Replay',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_end_fail'));
this.addChild(this.pers=new M3.Img('pers_2_end_fail',S,this.W*.3,this.H*.1,.5));
this.addChild(this.pers2=new M3.Img('pers_1_end_fail',S,this.W*.8,this.H*.1,.5));
this.addChild(this.field=new M3.Img('field_end',S,this.W*.5,this.H*.6,.5));
this.addChild(this.field_reccord=new M3.Img('field_record',S,this.W*.5,this.H*.36,.5));
this.addChild(this.star=new M3.ImgButton('star2','star_shadow',.9,this,S,this.W*.5,this.H*.59,null,null,.1,.2));
this.field_reccord.visible=false;
this.addChild(this.b_back=new M3.ImgButton('b_menu','b_end_fail',1,this,S,this.W*.35,this.H*.83));
this.addChild(this.b_play=new M3.ImgButton('b_replay','b_end_fail',1,this,S,this.W*.65,this.H*.83));
this.addChild(this.recordLabel=new M3.Text('LEVEL',150*S,this.W*.5,this.H*.375,'left',0x465763));
this.addChild(this.levelLabel=new M3.Text('FAIL!',290*S,this.W*.5,this.H*.2,'left',0xffffff));
this.addChild(this.targetLabel=new M3.Text('TARGET',150*S,this.W*.5,this.H*.53,'left',0xffffff));
this.visible=false;
this.star.scaleble=false;
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_play,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Replay,GodStep.Frame);
pro.init=function(){
this.visible=true;
this.levelLabel.updateText();
this.levelLabel.x=this.W/2-this.levelLabel.width/2;
GodStep.playSound('loss',0,M3.SOUND);
this.recordLabel.setText('LEVEL '+(M3.LAST_LEVEL_SELECTED));
this.recordLabel.updateText();
this.recordLabel.x=this.W/2-this.recordLabel.width/2;
var leveldata=M3.LAST_LEVEL_DATA;
var dirtCount=0;
for(var i=0;i<leveldata.length-1;i++){
if(leveldata[i].name=='dirt'){
dirtCount++;
}
}
this.params=leveldata[leveldata.length-1];
var points=this.params.points+'';
var text=this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1];
this.targetLabel.setText((M3.NEW_RECORD?'NEW RECORD ':'SCORE ')+M3.Format(text+''));
if(0){
if(this.params.points>0){
this.targetLabel.setText('COLLECT '+(points.substr(0,points.length-3)+','+points.substr(points.length-3,3))+" FOR "+this.params.steps+" MOVE");
}else
if(dirtCount>0){
this.targetLabel.setText('REMOVE ALL '+dirtCount+" DIRT"+" FOR "+this.params.steps+" MOVE");
}else
if(this.params.items>0){
this.targetLabel.setText('DROP DOWN '+this.params.items+" CRYSTALS"+" FOR "+this.params.steps+" MOVE");
}
}
this.targetLabel.updateText();
this.targetLabel.x=this.W/2-this.targetLabel.width/2+(M3.NEW_RECORD?this.W*.11:0);
this.star.visible=M3.NEW_RECORD;
this.star.x=this.targetLabel.x-this.W*.11;
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_play.isDown=false;
t.b_back.isDown=false;
t.b_back.Scale=1;
t.b_play.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_play:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.gameplay],p);
break;
case p.b_back:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.levelselect],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.scale.x=this.scale.y=value;
this.pers2.y=this.pers.y=(-dy/2+this.soul.H*.13)/value;
this.levelLabel.y=(this.soul.H*.18-dy/2)/value;
this.back.rescale(value);
}
});
M3.MovieClip=function(frames,scale,px,py,anchor){
this.frames=frames;
var tex=GodStep.textures[this.frames[0]];
GodStep.Image.call(this,tex);
this.Scale=this.startS=scale/GodStep.IMAGE_RESOLUTION;
this.currentFrame=0;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(M3.MovieClip,GodStep.Image);
pro.setToFrame=function(frame){
this.currentFrame=frame;
this.setTexture(GodStep.textures[this.frames[frame]]);
};
pro.nextFrame=function(){
this.currentFrame++;
if(this.currentFrame==this.frames.length){
this.currentFrame=0;
}
this.setTexture(GodStep.textures[this.frames[this.currentFrame]]);
return this.currentFrame;
};
M3.Tutorial=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Tutorial',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.endTimer=-1;
this.addChild(this.back=new M3.Background(this,'back_t1'));
this.addChild(this.pers=new M3.Img('pers_start_1',S,this.W*.35,this.H*.35,.5));
this.addChild(this.field=new M3.Img('field_tutorial',S,this.W*.5,this.H*.64,.5));
this.addChild(this.bubble=new M3.Img('bubble',S,this.W*.7,this.H*.3,.5));
this.addChild(this.bubbleIcon=new M3.Img('bubble',S,this.W*.7,this.H*.3,.5));
this.addChild(this.targetLabel=new M3.Text('TARGET',90*S,this.W*.5,this.H*.59,'left',0xffffff));
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
};
extend(M3.Tutorial,GodStep.Frame);
pro.initEnd=function(isWin){
this.isEndView=true;
this.endTimer=100;
this.visible=true;
this.alpha=0;
this.isDead=false;
this.bubbleIcon.visible=this.bubble.visible=false;
this.pers.visible=isWin;
this.targetLabel.setText(isWin?'LEVEL COMPLETE':'OUT OF MOVES');
this.targetLabel.updateText();
this.targetLabel.x=this.W/2-this.targetLabel.width/2;
this.field.setTexture((isWin?'win':'fail')+'_p');
};
pro.init=function(){
this.isEndView=false;
this.visible=true;
this.isDead=false;
this.alpha=1;
this.bubbleIcon.visible=this.bubble.visible=this.pers.visible=true;
this.field.setTexture('field_tutorial');
var leveldata=M3.LAST_LEVEL_DATA;
var dirtCount=0;
for(var i=0;i<leveldata.length-1;i++){
if(leveldata[i].name=='dirt'){
dirtCount++;
}
}
this.params=leveldata[leveldata.length-1];
var points=this.params.points+'';
if(this.params.points>0){
this.targetLabel.setText('Score '+M3.Format(points)+" in "+this.params.steps+" moves");
this.bubbleIcon.setTexture('star');
this.pers.setTexture('pers_start_'+3);
this.back.img.setTexture('back_t'+3);
}else
if(dirtCount>0){
this.targetLabel.setText('Pop '+dirtCount+" goo-balls"+" in "+this.params.steps+" moves");
this.bubbleIcon.setTexture('icon_1_'+M3.SKIN);
this.pers.setTexture('pers_start_'+1);
this.back.img.setTexture('back_t'+1);
}else
if(this.params.items>0){
this.targetLabel.setText('Collect '+this.params.items+" crystals"+" in "+this.params.steps+" moves");
this.bubbleIcon.setTexture('icon_2_1');
this.pers.setTexture('pers_start_'+2);
this.back.img.setTexture('back_t'+2);
}
this.targetLabel.updateText();
this.targetLabel.x=this.W/2-this.targetLabel.width/2;
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
if(!t.isEndView){
t.isDead=true;
}
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.back.rescale(value);
}
});
M3.TutorialOne=function(soul,gameplay){
this.soul=soul;
this.gameplay=gameplay;
GodStep.Frame.call(this,'TutorialOne',soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.container=new PIXI.DisplayObjectContainer());
this.addChild(this.container2=new PIXI.DisplayObjectContainer());
this.container.addChild(this.back=new M3.Background(this,'back_menu'));this.back.alpha=.5;
this.animTimer=0;
this.animCursor=0;
this.animCount=0;
this.animLine=[];
this.container2.addChild(this.pers=new M3.Img('tutorial_sheriff',S,this.W*.29,this.H*.33,.5));
this.container2.addChild(this.frame=new M3.Img('frame_tutorial',S*1.38,this.W*.7,this.H*.25,.5));
this.container2.addChild(this.targetLabel=new M3.Text('TEXT TEXT TEXT\nTEXT TEXT\nTEXT!!!',85*S,this.W*.52,this.H*.15,'left',0xffffff));
this.addChild(this.arm=new M3.MovieClip(['arm_1','arm_2'],S,this.W*.5,this.H*.5));
this.addChild(this.maska=this.createGraphics('maska'));
var field=gameplay.field;
this.maska.clear();
this.maska.beginFill(0,1);
var v=0.03;
this.maska.drawRect(0,-this.soul.H*v,this.soul.W,this.soul.H*.555+this.soul.H*v);
this.maska.endFill();
this.visible=false;
this.texts=['Howdy!\nSwipe to wake up the\nwizzies and make magic',
'You rock!\nMake longer chains to\nfill the meter faster',
'Try a combo\nof 7+ wizzies!',
'Use charged wizzie\nto ignite the last row\nor column you touch',
'To remove sticky goo,\nconnect wizzies over it!',
'Collect jade crystals\nby letting them fall\nto the bottom!',
'Swipe next to bamboo\nstems blocking your\nway to weed them out!'
];
};
extend(M3.TutorialOne,GodStep.Frame);
pro.setText=function(v){
this.targetLabel.setText(this.texts[v]);
this.targetLabel.updateText();
this.targetLabel.x=this.W*.7-this.targetLabel.width/2;
this.targetLabel.y=this.W*.24-this.targetLabel.height/2;
};
pro.update=function(){
if(this.visible){
this.alpha+=(1-this.alpha)*.05;
var field=this.field;
var line=this.animLine;
var arm=this.arm;
var fs=field.scale.x;
var cellW2=field.cells[0].W/2;
if(this.animTimer++>40){
this.animTimer=0;
this.animCursor++;
if(this.animCursor>this.animCount){
this.animCursor=0;
}
}
switch(this.animCursor){
case 0:
this.lineCursor=1;
arm.setToFrame(0);
break;
case 1:
arm.x+=(field.x+line[0].x*fs+cellW2-arm.x)*.1;
arm.y+=(field.y+line[0].y*fs+cellW2-arm.y)*.1;
break;
case 2:
if(this.animTimer>20){
arm.setToFrame(1);
}
break;
case 3:
arm.x+=(field.x+line[this.lineCursor].x*fs+cellW2-arm.x)*.1;
arm.y+=(field.y+line[this.lineCursor].y*fs+cellW2-arm.y)*.1;
if(this.animTimer==40){
this.lineCursor++;
if(this.lineCursor<line.length){
this.animTimer=0;
}else{
this.animTimer=50;
}
}
break;
case 4:
if(this.animTimer>20){
arm.setToFrame(0);
}
break;
}
}
};
pro.finish=function(){
this.nextBlock();
};
pro.isComplete=function(selected){
var count=0;
for(var i=0;i<selected.length;i++){
for(var j=0;j<this.animLine.length;j++){
if(selected[i]==this.animLine[j]){
count++;
}
}
}
if(count>=this.animLine.length){
return true;
}else{
return false;
}
};
pro.nextBlock=function(){
this.currentBlock++;
var cell,i;
this.alpha=0;
if(this.currentBlock<=this.blocks){
this.Scale=this.Scale;
switch(M3.LAST_LEVEL_SELECTED){
case 1:
this.animLine=this.animLine2;
for(i=0;i<this.animLine.length;i++){
cell=this.animLine[i];
if(cell.delta){
cell.delta=null;
this.animLine[i]=this.field.cellsXY[cell.yi+1][cell.xi];
}
}
this.animTimer=0;
this.animCursor=0;
this.animCount=5;
this.setText(1);
break;
case 4:
this.animLine=this.animLine2;
for(i=0;i<this.animLine.length;i++){
cell=this.animLine[i];
if(cell.delta){
cell.delta=null;
this.animLine[i]=this.field.cellsXY[cell.yi+1][cell.xi];
}
}
this.animTimer=0;
this.animCursor=0;
this.animCount=5;
this.setText(3);
break;
case 6:
this.setText(4);
this.animLine=this.animLine2;
for(i=0;i<this.animLine.length;i++){
cell=this.animLine[i];
if(cell.delta){
cell.delta=null;
this.animLine[i]=this.field.cellsXY[cell.yi+1][cell.xi];
}
}
this.animTimer=0;
this.animCursor=0;
this.animCount=5;
break;
}
}else{
this.visible=false;
}
};
pro.init=function(level){
if(M3.TUTORIAL==false)return;
this.visible=true;
this.lineCursor=0;
this.alpha=0;
var field=this.field=this.gameplay.field;
var dy=(this.soul.OH-this.soul.H)/2;
this.container.mask=this.maska;
this.animLine=[];
var levelData=M3.LAST_LEVEL_DATA;
var params=levelData[levelData.length-1];
var colors=params.colors;
this.maska.y=this.container2.y=(-dy)/this.s;
var deleteColor,deleteColor2,i;
this.bonus=null;
switch(level){
case 1:
this.setText(0);
this.currentBlock=1;
this.blocks=2;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
field.randomizeArea(colors,0,5,7,3,deleteColor);
this.animLine=field.randomizeArea([deleteColor],2,6,3,1,null);
for(i=0;i<colors.length;i++){
if(colors[i]!=deleteColor){
deleteColor2=colors[i];
break;
}
}
field.randomizeArea(colors,0,0,7,5,deleteColor2);
this.animLine2=field.randomizeArea([deleteColor2],2,2,2,1,null);
this.animLine2[0].delta=[0,1];
this.animLine2[1].delta=[0,1];
field.cellsXY[0][1].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[0][5].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[2][1].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[1][3].replaceColored(M3.Cell.STANDART[deleteColor2]);
field.cellsXY[1][4].replaceColored(M3.Cell.STANDART[deleteColor2]);
this.animLine2.splice(0,0,field.cellsXY[2][1]);
this.animLine2.push(field.cellsXY[1][3]);
this.animLine2[3].delta=[0,1];
this.animLine2.push(field.cellsXY[1][4]);
this.animLine2[4].delta=[0,1];
break;
case 4:
this.currentBlock=1;
this.blocks=2;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
for(i=0;i<colors.length;i++){
if(colors[i]!=deleteColor){
deleteColor2=colors[i];
break;
}
}
field.randomizeArea(colors,0,4,7,5,deleteColor);
this.animLine=field.randomizeArea([deleteColor],1,6,5,1,null);
this.animLine.splice(0,0,field.cellsXY[5][0]);
this.animLine.push(field.cellsXY[7][5]);
field.cellsXY[5][0].replaceColored(M3.Cell.STANDART[deleteColor]);
field.cellsXY[7][5].replaceColored(M3.Cell.STANDART[deleteColor]);
field.randomizeArea(colors,0,0,7,4,deleteColor2);
this.animLine2=field.randomizeArea([deleteColor2],5,2,2,1,null);
this.animLine2.push(field.cellsXY[1][6]);
field.cellsXY[1][6].replaceColored(M3.Cell.STANDART[deleteColor2]);
this.bonus=field.cellsXY[1][6];
this.setText(2);
break;
case 6:
this.currentBlock=1;
this.blocks=2;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
for(i=0;i<colors.length;i++){
if(colors[i]!=deleteColor){
deleteColor2=colors[i];
break;
}
}
field.randomizeArea(colors,0,4,7,5,deleteColor);
this.animLine=field.randomizeArea([deleteColor],2,6,3,1,null);
field.randomizeArea(colors,0,0,7,4,deleteColor2);
this.animLine2=field.randomizeArea([deleteColor2],2,2,3,1,null);
this.animLine2[0].delta=[0,1];
this.animLine2[1].delta=[0,1];
this.animLine2[2].delta=[0,1];
this.setText(4);
break;
case 13:
this.currentBlock=1;
this.blocks=1;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
field.randomizeArea(colors,0,4,7,5,deleteColor);
this.setText(5);
var item=field.findItem();
var itemCell=item.cell;
field.replaceCells(item.cell,field.cellsXY[item.cell.yi+5][item.cell.xi]);
this.animLine=field.randomizeArea([deleteColor],item.cell.xi,item.cell.yi+1,1,3,null);
break;
case 21:
this.setText(6);
this.currentBlock=2;
this.Scale=this.Scale;
this.blocks=1;
this.animCount=5;
this.animTimer=0;
this.animCursor=0;
deleteColor=parseInt(Math.random()*colors.length);
field.randomizeArea(colors,0,0,7,4,deleteColor);
this.animLine=field.randomizeArea([deleteColor],2,3,3,1,null);
break;
default:
this.visible=false;
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.s;
},
set:function(value){
this.s=value;
var dy=this.soul.OH-this.soul.H;
this.container2.y=this.maska.y=(-dy/2)/value+(this.currentBlock==2?this.soul.OH*.5:0)/value;
this.maska.scale.y=this.soul.OH/this.soul.H;
this.container2.y-=(this.currentBlock==2?this.soul.H*.05:0)/value;
this.back.rescale(value);
}
});
M3.Victory=function(soul){
this.soul=soul;
GodStep.Frame.call(this,'Victory',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_end'));
this.addChild(this.backAnim=new M3.MovieClip(['f_1','f_2','f_3'],S,this.W*.5,this.H*.3,.5));this.backAnim.animTimer=0;
this.addChild(this.winAnim=new M3.MovieClip(['win_1','win_2'],S,this.W*.5,this.H*.28,.5));this.winAnim.animTimer=0;
this.addChild(this.pers=new M3.Img('pers_e_2',S,this.W*.25,this.H*.1,.5));
this.addChild(this.pers2=new M3.Img('pers_e_3',S,this.W*.8,this.H*.1,.5));
this.addChild(this.field=new M3.Img('field_end',S,this.W*.5,this.H*.6,.5));
this.addChild(this.b_back=new M3.ImgButton('b_menu','e_shadow',1,this,S,this.W*.25,this.H*.8));
this.addChild(this.b_replay=new M3.ImgButton('b_replay','e_shadow',1,this,S,this.W*.5,this.H*.8));
this.addChild(this.b_next=new M3.ImgButton('b_next','e_shadow',1,this,S,this.W*.75,this.H*.8));
this.addChild(this.star=new M3.ImgButton('star2','star_shadow',.9,this,S,this.W*.5,this.H*.59,null,null,.1,.2));
this.star.scaleble=false;
this.addChild(this.victory=new M3.Text('VICTORY!',285*S,this.W*.22,this.H*.2,'left',0xffffff));
this.addChild(this.levelLabel=new M3.Text('LEVEL',140*S,this.W*.5,this.H*.37,'left',0xCC6600));this.levelLabel.alpha=.7;
this.addChild(this.recordLabel=new M3.Text('RECORD',150*S,this.W*.5,this.H*.53,'left',0xffffff));
this.victory.x=this.W/2-this.victory.width/2;
this.visible=false;
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_next,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_replay,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Victory,GodStep.Frame);
pro.init=function(){
this.visible=true;
var player=this.soul.playerDATA;
this.levelLabel.setText('LEVEL '+M3.LAST_LEVEL_SELECTED);
this.levelLabel.updateText();
this.levelLabel.x=this.W/2-this.levelLabel.width/2;
this.star.visible=this.levelLabel.visible=this.victory.visible=this.backAnim.visible=this.pers.visible=this.pers2.visible=this.b_next.visible=M3.LAST_LEVEL_SELECTED<30;
this.winAnim.visible=!this.b_next.visible;
GodStep.playSound('victory',0,M3.SOUND);
if(M3.LAST_LEVEL_SELECTED==30){
this.b_replay.x=this.W*.65;
this.b_back.x=this.W*.35;
this.recordLabel.setText('YOU WON!');
this.recordLabel.updateText();
this.recordLabel.scale.x=this.recordLabel.scale.y=1.5;
this.recordLabel.x=this.W/2-(this.recordLabel.width/2);
this.field.setTexture('field_win');
this.recordLabel.y=this.H*.49;
}else{
this.star.visible=M3.NEW_RECORD;
this.recordLabel.setText((M3.NEW_RECORD?'NEW RECORD ':'SCORE ')+M3.Format(this.soul.playerDATA.levels[M3.LAST_LEVEL_SELECTED-1][1]+''));
this.recordLabel.scale.x=this.recordLabel.scale.y=1;
this.recordLabel.updateText();
this.recordLabel.x=this.W/2-this.recordLabel.width/2+(M3.NEW_RECORD?this.W*.11:0);
this.b_next.x=this.W*.75;
this.b_replay.x=this.W*.5;
this.b_back.x=this.W*.25;
this.field.setTexture('field_end');
this.recordLabel.y=this.H*.53;
}
this.star.x=this.recordLabel.x-this.W*.11;
};
pro.update=function(){
if(this.visible){
if(this.winAnim.animTimer++>15){
this.winAnim.nextFrame();this.winAnim.animTimer=0;
}
if(this.backAnim.animTimer++>10){
this.backAnim.nextFrame();this.backAnim.animTimer=0;
}
}
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_replay.isDown=false;
t.b_next.isDown=false;
t.b_back.isDown=false;
t.b_back.Scale=1;
t.b_replay.Scale=1;
t.b_next.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_next:
p.settingsDATA=GodStep.LoadLocal(p.soul.SETTINGS_SLOT);
M3.LAST_LEVEL_SELECTED++;
if(M3.LAST_LEVEL_SELECTED>p.settingsDATA.levels.length){
s.screenTo([s.startmenu],p);
}else{
M3.LAST_LEVEL_DATA=p.settingsDATA.levels[M3.LAST_LEVEL_SELECTED-1];
s.screenTo([s.gameplay],p);
}
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_back:
s.screenTo([s.levelselect],p);
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_replay:
p.settingsDATA=GodStep.LoadLocal(p.soul.SETTINGS_SLOT);
M3.LAST_LEVEL_DATA=p.settingsDATA.levels[M3.LAST_LEVEL_SELECTED-1];
s.screenTo([s.gameplay],p);
GodStep.playSound('button',0,M3.SOUND);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.scale.x=this.scale.y=value;
this.pers2.y=this.pers.y=(-dy/2+this.soul.H*.13)/value;
this.victory.y=this.pers2.y+this.H*.05;
this.back.rescale(value);
}
});
M3.Pause=function(soul,gameplay){
this.soul=soul;
this.gameplay=gameplay;
GodStep.Frame.call(this,'Pause',soul.W,soul.H);
GodStep.IDownUp.call(this,soul.W,soul.H);
var S=this.startS=soul.startS;
this.addChild(this.back=new M3.Background(this,'back_pause'));
this.addChild(this.field1=new M3.Img('field_pause',S,this.W*.5,this.H*.2,.5));
this.addChild(this.field2=new M3.Img('field_pause_2',S,this.W*.5,this.H*.76,.5));
this.addChild(this.pers=new M3.Img('pers_p_1',S,this.W*.2,this.H*.1,.5));
this.addChild(this.pers2=new M3.Img('pers_p_2',S,this.W*.8,this.H*.1,.5));
this.addChild(this.b_back=new M3.ImgButton('b_back_p','b_shadow_p',1,this,S,this.W*.25,this.H*.38));
this.addChild(this.b_menu=new M3.ImgButton('b_menu_p','b_shadow_p',1,this,S,this.W*.5,this.H*.38));
this.addChild(this.b_replay=new M3.ImgButton('b_replay_p','b_shadow_p',1,this,S,this.W*.75,this.H*.38));
var dy=this.H*.31;
this.addChild(this.musicLabel=new M3.Img('icon_music_p',S,this.W*.23,this.H*.525+dy,.5));
this.addChild(this.soundLabel=new M3.Img('icon_sound_p',S,this.W*.23,this.H*.37+dy,.5));
this.addChild(this.musicLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.44+dy,'left',0xffffff));
this.addChild(this.soundLabel=new M3.Text('ON',160*S,this.W*.4,this.H*.29+dy,'left',0xffffff));
this.addChild(this.b_music_on=new M3.ImgButton('on_p',null,null,this,S,this.W*.72,this.H*.52+dy));
this.addChild(this.b_music_off=new M3.ImgButton('off_p',null,null,this,S,this.W*.72,this.H*.52+dy));
this.addChild(this.b_sound_on=new M3.ImgButton('on_p',null,null,this,S,this.W*.72,this.H*.37+dy));
this.addChild(this.b_sound_off=new M3.ImgButton('off_p',null,null,this,S,this.W*.72,this.H*.37+dy));
this.addChild(this.pauseLabel=new M3.Text('PAUSE',200*S,this.W*.33,this.H*.2,'left',0xffffff));
this.b_music_off.scaleble=
this.b_sound_on.scaleble=
this.b_music_on.scaleble=
this.b_sound_off.scaleble=false;
this.b_music_off.visible=false;
this.b_sound_off.visible=false;
addEvent(this.b_back,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_menu,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_replay,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_on,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_off,M3.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(M3.Pause,GodStep.Frame);
pro.init=function(){
this.visible=true;
this.b_music_off.visible=!M3.MUSIC;
this.b_music_on.visible=M3.MUSIC;
this.b_sound_off.visible=!M3.SOUND;
this.b_sound_on.visible=M3.SOUND;
if(M3.MUSIC){
this.musicLabel.setText('ON');this.musicLabel.updateText();
}else{
this.musicLabel.setText('OFF');this.musicLabel.updateText();
}
if(M3.SOUND){
this.soundLabel.setText('ON');this.soundLabel.updateText();
}else{
this.soundLabel.setText('OFF');this.soundLabel.updateText();
}
};
pro.h_mouse=function(e){
if(e.content.target.soul){
var t=e.content.target;
t.b_replay.isDown=false;
t.b_menu.isDown=false;
t.b_back.isDown=false;
t.b_menu.Scale=1;
t.b_replay.Scale=1;
t.b_back.Scale=1;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_back:
p.visible=false;
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_menu:
s.screenTo([s.levelselect],p.gameplay);
GodStep.volumeSound('theme',0);
GodStep.playSound('button',0,M3.SOUND);
break;
case p.b_replay:
GodStep.playSound('button',0,M3.SOUND);
s.screenTo([s.gameplay],p.gameplay);
break;
case p.b_music_on:
M3.MUSIC=false;
GodStep.volumeSound('theme',M3.MUSIC);
p.b_music_on.visible=false;
p.b_music_off.visible=true;
p.musicLabel.setText('OFF');
break;
case p.b_music_off:
M3.MUSIC=true;
GodStep.volumeSound('theme',M3.MUSIC);
GodStep.playSound('button',0,M3.SOUND);
GodStep.playSound('theme',null,M3.MUSIC);
p.b_music_on.visible=true;
p.b_music_off.visible=false;
p.musicLabel.setText('ON');
break;
case p.b_sound_on:
M3.SOUND=false;
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=false;
p.b_sound_off.visible=true;
p.soundLabel.setText('OFF');
break;
case p.b_sound_off:
M3.SOUND=true;
GodStep.playSound('button',0,M3.SOUND);
p.b_sound_on.visible=true;
p.b_sound_off.visible=false;
p.soundLabel.setText('ON');
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
var dy=this.soul.OH-this.soul.H;
this.back.rescale(value);
this.pers2.y=this.pers.y=(-dy/2+this.soul.H*.13)/value;
this.pauseLabel.y=(-dy/2+this.soul.H*.03)/value;
this.field1.y=(-dy/2+this.soul.H*.13)/value;
}
});
M3.SunCharms=function(){
GodStep.Game.TRANSPARENT=true;
GodStep.Game.call(this,'SunCharms',0x888888,M3.Assets,'M3_settings1021','M3_player',M3.DEFAULT_SETTINGS);
M3.SunCharms.instance=this;
M3.SOUND=M3.MUSIC=true;
this.MW=1536;
this.MH=1854;
};
extend(M3.SunCharms,GodStep.Game);
M3.SCALE=1;
M3.CELL_SCALE=.85;
M3.CELL_SCALE_BACK=1.06;
M3.CELLW_SCALE=.8;
M3.IMAGE_PATH='src/SunCharms/img/';
M3.SOUND_PATH='src/SunCharms/sounds/';
M3.DEFAULT_SETTINGS='{"levels":[[{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":6},{"name":"delete","xi":6,"yi":5},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":6,"yi":3},{"name":"delete","xi":6,"yi":2},{"name":"delete","xi":6,"yi":0},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":0,"yi":0},{"name":"delete","xi":0,"yi":1},{"name":"delete","xi":0,"yi":2},{"name":"delete","xi":0,"yi":3},{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":0,"yi":6},{"name":"delete","xi":0,"yi":7},{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":2,"yi":8},{"name":"delete","xi":2,"yi":7},{"name":"delete","xi":3,"yi":7},{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":4,"yi":8},{"name":"delete","xi":4,"yi":7},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":8},{"points":5000,"items":0,"colors":[0,1,2],"steps":7,"bonuses":0,"isBonus":false,"id":1}],[{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":2,"yi":8},{"name":"delete","xi":4,"yi":8},{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":5,"yi":8},{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":3,"yi":7},{"name":"delete","xi":3,"yi":6},{"name":"delete","xi":2,"yi":5},{"name":"delete","xi":3,"yi":5},{"name":"delete","xi":4,"yi":5},{"points":10000,"items":0,"colors":[0,1,2],"steps":8,"bonuses":0,"isBonus":false,"id":2}],[{"name":"delete","xi":0,"yi":0},{"name":"delete","xi":0,"yi":1},{"name":"delete","xi":6,"yi":0},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":0,"yi":7},{"name":"delete","xi":0,"yi":8},{"points":20000,"items":0,"colors":[0,1,2,3],"steps":12,"bonuses":0,"isBonus":false,"id":3}],[{"name":"delete","xi":3,"yi":2},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":1,"yi":5},{"name":"delete","xi":5,"yi":5},{"points":24000,"items":0,"colors":[0,1,2,3],"steps":13,"bonuses":0,"isBonus":true,"id":4}],[{"name":"delete","xi":3,"yi":2},{"name":"delete","xi":2,"yi":3},{"name":"delete","xi":4,"yi":3},{"name":"delete","xi":3,"yi":5},{"name":"delete","xi":1,"yi":6},{"name":"delete","xi":5,"yi":6},{"points":28000,"items":0,"colors":[0,1,2,3],"steps":19,"bonuses":0,"isBonus":true,"id":5}],[{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":2,"yi":3},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":4,"yi":3},{"points":0,"items":0,"colors":[0,1,2,3],"steps":10,"bonuses":0,"isBonus":true,"id":6}],[{"name":"dirt","xi":2,"yi":3},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":4,"yi":3},{"name":"dirt","xi":4,"yi":4},{"name":"dirt","xi":3,"yi":4},{"name":"dirt","xi":2,"yi":4},{"name":"dirt","xi":2,"yi":5},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":4,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3],"steps":14,"bonuses":0,"isBonus":true,"id":7}],[{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":3,"yi":7},{"name":"dirt","xi":4,"yi":7},{"name":"dirt","xi":5,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":1,"yi":5},{"name":"dirt","xi":2,"yi":5},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":4,"yi":5},{"name":"dirt","xi":5,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3],"steps":12,"bonuses":0,"isBonus":true,"id":8}],[{"name":"delete","xi":1,"yi":0},{"name":"delete","xi":1,"yi":1},{"name":"delete","xi":5,"yi":0},{"name":"delete","xi":5,"yi":1},{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":8},{"name":"dirt","xi":3,"yi":0},{"name":"dirt","xi":3,"yi":1},{"name":"dirt","xi":3,"yi":2},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":3,"yi":4},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":3,"yi":7},{"name":"dirt","xi":3,"yi":8},{"name":"dirt","xi":1,"yi":4},{"name":"dirt","xi":2,"yi":4},{"name":"dirt","xi":4,"yi":4},{"name":"dirt","xi":5,"yi":4},{"points":0,"items":0,"colors":[0,1,2,3],"steps":12,"bonuses":0,"isBonus":true,"id":9}],[{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":3,"yi":7},{"name":"dirt","xi":2,"yi":8},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":4,"yi":7},{"name":"dirt","xi":4,"yi":8},{"name":"dirt","xi":3,"yi":5},{"name":"dirt","xi":3,"yi":4},{"name":"dirt","xi":3,"yi":3},{"name":"dirt","xi":4,"yi":3},{"name":"dirt","xi":2,"yi":3},{"name":"dirt","xi":0,"yi":6},{"name":"dirt","xi":6,"yi":6},{"name":"dirt","xi":0,"yi":4},{"name":"dirt","xi":6,"yi":4},{"name":"dirt","xi":0,"yi":1},{"name":"dirt","xi":6,"yi":1},{"points":0,"items":0,"colors":[0,1,2,3],"steps":10,"bonuses":0,"isBonus":true,"id":10}],[{"points":25000,"items":0,"colors":[0,1,2,3,4],"steps":12,"bonuses":0,"isBonus":true,"id":11}],[{"points":30000,"items":0,"colors":[0,1,2,3,4],"steps":16,"bonuses":0,"isBonus":true,"id":12}],[{"points":0,"items":2,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":13}],[{"name":"delete","xi":0,"yi":1},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":5,"yi":1},{"name":"delete","xi":1,"yi":1},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":1,"yi":5},{"name":"delete","xi":5,"yi":5},{"name":"delete","xi":6,"yi":5},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":14}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":3,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":0,"yi":3},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":6,"yi":3},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":15}],[{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":0,"yi":7},{"name":"delete","xi":0,"yi":6},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":6,"yi":5},{"name":"delete","xi":6,"yi":6},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":8},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":8},{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":1,"yi":8},{"name":"delete","xi":2,"yi":2},{"name":"delete","xi":3,"yi":2},{"name":"delete","xi":4,"yi":2},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":26,"bonuses":0,"isBonus":true,"id":16}],[{"name":"delete","xi":1,"yi":2},{"name":"delete","xi":5,"yi":5},{"name":"delete","xi":0,"yi":8},{"name":"delete","xi":1,"yi":8},{"name":"dirt","xi":0,"yi":3},{"name":"dirt","xi":1,"yi":3},{"name":"dirt","xi":5,"yi":6},{"name":"dirt","xi":6,"yi":6},{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":0,"yi":7},{"name":"dirt","xi":6,"yi":1},{"name":"dirt","xi":6,"yi":2},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":11,"bonuses":0,"isBonus":true,"id":17}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":2,"yi":4},{"name":"delete","xi":4,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":1,"yi":2},{"name":"delete","xi":5,"yi":2},{"name":"delete","xi":1,"yi":6},{"name":"delete","xi":5,"yi":6},{"points":0,"items":4,"colors":[0,1,2,3,4],"steps":24,"bonuses":0,"isBonus":true,"id":18}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":1,"yi":4},{"name":"delete","xi":1,"yi":3},{"name":"delete","xi":0,"yi":3},{"name":"delete","xi":5,"yi":1},{"name":"delete","xi":5,"yi":0},{"name":"delete","xi":6,"yi":0},{"name":"delete","xi":6,"yi":1},{"name":"delete","xi":5,"yi":8},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":6,"yi":7},{"name":"delete","xi":6,"yi":8},{"points":35000,"items":0,"colors":[0,1,2,3,4],"steps":25,"bonuses":0,"isBonus":true,"id":19}],[{"name":"delete","xi":1,"yi":7},{"name":"delete","xi":5,"yi":7},{"name":"delete","xi":5,"yi":3},{"name":"delete","xi":1,"yi":3},{"points":0,"items":4,"colors":[0,1,2,3,4],"steps":29,"bonuses":0,"isBonus":true,"id":20}],[{"name":"block","xi":0,"yi":4},{"name":"block","xi":1,"yi":4},{"name":"block","xi":2,"yi":4},{"name":"block","xi":3,"yi":4},{"name":"block","xi":4,"yi":4},{"name":"block","xi":5,"yi":4},{"name":"block","xi":6,"yi":4},{"points":17000,"items":0,"colors":[0,1,2,3,4],"steps":10,"bonuses":0,"isBonus":true,"id":21}],[{"name":"block","xi":3,"yi":0},{"name":"block","xi":3,"yi":1},{"name":"block","xi":3,"yi":2},{"name":"block","xi":3,"yi":3},{"name":"block","xi":3,"yi":4},{"name":"block","xi":3,"yi":5},{"name":"block","xi":3,"yi":6},{"name":"block","xi":3,"yi":7},{"name":"block","xi":3,"yi":8},{"name":"block","xi":2,"yi":4},{"name":"block","xi":1,"yi":4},{"name":"block","xi":0,"yi":4},{"name":"block","xi":4,"yi":4},{"name":"block","xi":5,"yi":4},{"name":"block","xi":6,"yi":4},{"points":20000,"items":0,"colors":[0,1,2,3,4],"steps":14,"bonuses":0,"isBonus":true,"id":22}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":0,"yi":5},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":6,"yi":5},{"name":"delete","xi":2,"yi":0},{"name":"delete","xi":3,"yi":0},{"name":"delete","xi":4,"yi":0},{"name":"delete","xi":2,"yi":8},{"name":"delete","xi":3,"yi":8},{"name":"delete","xi":4,"yi":8},{"name":"delete","xi":6,"yi":3},{"name":"delete","xi":0,"yi":3},{"name":"block","xi":5,"yi":5},{"name":"block","xi":4,"yi":5},{"name":"block","xi":4,"yi":4},{"name":"block","xi":4,"yi":3},{"name":"block","xi":3,"yi":3},{"name":"block","xi":3,"yi":2},{"name":"block","xi":2,"yi":2},{"name":"block","xi":2,"yi":1},{"name":"dirt","xi":1,"yi":6},{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":5,"yi":2},{"name":"dirt","xi":5,"yi":1},{"name":"dirt","xi":6,"yi":1},{"name":"dirt","xi":6,"yi":2},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":9,"bonuses":0,"isBonus":true,"id":23}],[{"name":"block","xi":0,"yi":4},{"name":"block","xi":2,"yi":4},{"name":"block","xi":3,"yi":4},{"name":"block","xi":3,"yi":3},{"name":"block","xi":3,"yi":2},{"name":"block","xi":4,"yi":4},{"name":"block","xi":6,"yi":4},{"name":"block","xi":3,"yi":0},{"name":"block","xi":3,"yi":1},{"name":"block","xi":5,"yi":5},{"name":"block","xi":1,"yi":5},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":24}],[{"name":"block","xi":6,"yi":0},{"name":"block","xi":6,"yi":1},{"name":"block","xi":5,"yi":2},{"name":"block","xi":5,"yi":3},{"name":"block","xi":4,"yi":4},{"name":"block","xi":4,"yi":5},{"name":"block","xi":3,"yi":6},{"name":"block","xi":3,"yi":7},{"name":"block","xi":2,"yi":7},{"name":"block","xi":2,"yi":8},{"name":"block","xi":3,"yi":5},{"name":"block","xi":1,"yi":8},{"name":"block","xi":0,"yi":8},{"name":"block","xi":4,"yi":3},{"name":"block","xi":5,"yi":1},{"points":0,"items":4,"colors":[0,1,2,3,4],"steps":18,"bonuses":0,"isBonus":true,"id":25}],[{"name":"block","xi":1,"yi":1},{"name":"block","xi":3,"yi":2},{"name":"block","xi":5,"yi":1},{"name":"block","xi":1,"yi":4},{"name":"block","xi":5,"yi":4},{"name":"block","xi":3,"yi":3},{"name":"block","xi":1,"yi":3},{"name":"block","xi":5,"yi":3},{"name":"block","xi":1,"yi":0},{"name":"block","xi":5,"yi":0},{"name":"block","xi":1,"yi":6},{"name":"block","xi":1,"yi":7},{"name":"block","xi":1,"yi":8},{"name":"block","xi":5,"yi":6},{"name":"block","xi":5,"yi":7},{"name":"block","xi":5,"yi":8},{"name":"block","xi":3,"yi":7},{"name":"block","xi":3,"yi":6},{"points":50000,"items":0,"colors":[0,1,2,3,4],"steps":28,"bonuses":0,"isBonus":true,"id":26}],[{"name":"dirt","xi":0,"yi":8},{"name":"dirt","xi":1,"yi":8},{"name":"dirt","xi":2,"yi":8},{"name":"dirt","xi":3,"yi":8},{"name":"dirt","xi":4,"yi":8},{"name":"dirt","xi":5,"yi":8},{"name":"dirt","xi":6,"yi":8},{"name":"dirt","xi":6,"yi":7},{"name":"dirt","xi":6,"yi":6},{"name":"dirt","xi":6,"yi":5},{"name":"dirt","xi":6,"yi":4},{"name":"dirt","xi":6,"yi":2},{"name":"dirt","xi":6,"yi":3},{"name":"dirt","xi":6,"yi":1},{"name":"dirt","xi":6,"yi":0},{"name":"dirt","xi":5,"yi":0},{"name":"dirt","xi":4,"yi":0},{"name":"dirt","xi":3,"yi":0},{"name":"dirt","xi":2,"yi":0},{"name":"dirt","xi":1,"yi":0},{"name":"dirt","xi":0,"yi":0},{"name":"dirt","xi":0,"yi":1},{"name":"dirt","xi":0,"yi":2},{"name":"dirt","xi":0,"yi":3},{"name":"dirt","xi":0,"yi":4},{"name":"dirt","xi":0,"yi":5},{"name":"dirt","xi":0,"yi":6},{"name":"dirt","xi":0,"yi":7},{"name":"delete","xi":3,"yi":3},{"name":"delete","xi":3,"yi":4},{"name":"delete","xi":3,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":27}],[{"name":"block","xi":3,"yi":8},{"name":"block","xi":0,"yi":8},{"name":"block","xi":1,"yi":8},{"name":"block","xi":2,"yi":8},{"name":"block","xi":4,"yi":8},{"name":"block","xi":5,"yi":8},{"name":"block","xi":6,"yi":8},{"name":"block","xi":0,"yi":7},{"name":"block","xi":1,"yi":7},{"name":"block","xi":2,"yi":7},{"name":"block","xi":3,"yi":7},{"name":"block","xi":4,"yi":7},{"name":"block","xi":5,"yi":7},{"name":"block","xi":6,"yi":7},{"name":"block","xi":6,"yi":6},{"name":"block","xi":5,"yi":6},{"name":"block","xi":4,"yi":6},{"name":"block","xi":3,"yi":6},{"name":"block","xi":2,"yi":6},{"name":"block","xi":1,"yi":6},{"name":"block","xi":0,"yi":6},{"points":0,"items":3,"colors":[0,1,2,3,4],"steps":15,"bonuses":0,"isBonus":true,"id":28}],[{"name":"delete","xi":0,"yi":4},{"name":"delete","xi":1,"yi":4},{"name":"delete","xi":2,"yi":4},{"name":"delete","xi":5,"yi":4},{"name":"delete","xi":6,"yi":4},{"name":"delete","xi":4,"yi":4},{"name":"dirt","xi":0,"yi":8},{"name":"dirt","xi":1,"yi":8},{"name":"dirt","xi":2,"yi":8},{"name":"dirt","xi":3,"yi":8},{"name":"dirt","xi":4,"yi":8},{"name":"dirt","xi":5,"yi":8},{"name":"dirt","xi":6,"yi":8},{"name":"dirt","xi":5,"yi":7},{"name":"dirt","xi":4,"yi":7},{"name":"dirt","xi":3,"yi":7},{"name":"dirt","xi":2,"yi":7},{"name":"dirt","xi":1,"yi":7},{"name":"dirt","xi":2,"yi":6},{"name":"dirt","xi":3,"yi":6},{"name":"dirt","xi":4,"yi":6},{"name":"dirt","xi":3,"yi":5},{"points":0,"items":0,"colors":[0,1,2,3,4],"steps":11,"bonuses":0,"isBonus":true,"id":29}],[{"name":"block","xi":6,"yi":0},{"name":"block","xi":6,"yi":1},{"name":"block","xi":6,"yi":2},{"name":"block","xi":6,"yi":3},{"name":"block","xi":6,"yi":4},{"name":"block","xi":6,"yi":5},{"name":"block","xi":6,"yi":6},{"name":"block","xi":6,"yi":7},{"name":"block","xi":6,"yi":8},{"name":"block","xi":0,"yi":0},{"name":"block","xi":0,"yi":1},{"name":"block","xi":0,"yi":3},{"name":"block","xi":0,"yi":2},{"name":"block","xi":0,"yi":4},{"name":"block","xi":0,"yi":5},{"name":"block","xi":0,"yi":6},{"name":"block","xi":0,"yi":7},{"name":"block","xi":0,"yi":8},{"name":"block","xi":1,"yi":8},{"name":"block","xi":2,"yi":8},{"name":"block","xi":3,"yi":8},{"name":"block","xi":5,"yi":8},{"name":"block","xi":4,"yi":8},{"name":"block","xi":5,"yi":7},{"name":"block","xi":5,"yi":6},{"name":"block","xi":5,"yi":5},{"name":"block","xi":5,"yi":3},{"name":"block","xi":5,"yi":4},{"name":"block","xi":5,"yi":2},{"name":"block","xi":5,"yi":1},{"name":"block","xi":5,"yi":0},{"name":"block","xi":1,"yi":0},{"name":"block","xi":1,"yi":1},{"name":"block","xi":1,"yi":3},{"name":"block","xi":1,"yi":2},{"name":"block","xi":1,"yi":4},{"name":"block","xi":1,"yi":5},{"name":"block","xi":1,"yi":6},{"name":"block","xi":1,"yi":7},{"name":"block","xi":2,"yi":7},{"name":"block","xi":3,"yi":7},{"name":"block","xi":4,"yi":7},{"points":27000,"items":0,"colors":[0,1,2,3,4],"steps":14,"bonuses":0,"isBonus":true,"id":30}]]}';
pro.update=function(){
this.beginFps();
GodStep.Mejdu.prototype.update.call(this);
this.endFps();
};
pro.run=function(){
if(!this.isRunning){
trace('running');
this.isRunning=true;
this.addFrame(this.startmenu=new M3.StartMenu(this));
this.addFrame(this.levelselect=new M3.LevelSelect(this));
this.addFrame(this.gameplay=new M3.GamePlay(this));
this.addFrame(this.settings=new M3.Settings(this));
this.addFrame(this.replay=new M3.Replay(this));
this.addFrame(this.victory=new M3.Victory(this));
this.addFrame(this.dev=new M3.Dev(this));
this.addFrame(this.fps=new GodStep.FPS(this,0x22aa00));this.fps.addString((this.CANVAS)?'C':'W');
this.fps.visible=false;
this.addFrame(this.transmission=new M3.Transmission(this));
this.settingsDATA=GodStep.LoadLocal(this.SETTINGS_SLOT);
this.playerDATA={levels:[]};
for(var i=0;i<this.settingsDATA.levels.length;i++){
this.playerDATA.levels.push([0,0]);
}
this.screenTo([this.startmenu],this.assets);
this.resizeWindow(this.OW,this.OH);
this.reposition();
}
};
M3.Format=function(v){
if(v.length<=3)return v;
return v.substr(0,v.length-3)+','+v.substr(v.length-3,3);
};
function startSunCharms(){
if(!M3.SunCharms.instance){
var game=new M3.SunCharms();
game.div.style.margin='0 auto';
game.div.style['vertical-align']='middle';
game.initResizeEvents();
}
}
