//Mejdu FrameWork powered by PIXI

var SS=SS||{};
/*!
 SoundJS
 Visit http://createjs.com/ for documentation, updates and examples.

 Copyright (c) 2010 gskinner.com, inc.

 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without
 restriction, including without limitation the rights to use,
 copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following
 conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 OTHER DEALINGS IN THE SOFTWARE.
*/
this.createjs=this.createjs||{};
(function(){
var s=createjs.SoundJS=createjs.SoundJS||{};
s.version="NEXT";
s.buildDate="Thu, 11 Dec 2014 23:16:15 GMT";
})();
this.createjs=this.createjs||{};
createjs.extend=function(subclass,superclass){
"use strict";
function o(){this.constructor=subclass;}
o.prototype=superclass.prototype;
return(subclass.prototype=new o());
};
this.createjs=this.createjs||{};
createjs.promote=function(subclass,prefix){
"use strict";
var subP=subclass.prototype,supP=(Object.getPrototypeOf&&Object.getPrototypeOf(subP))||subP.__proto__;
if(supP){
subP[(prefix+="_")+"constructor"]=supP.constructor;
for(var n in supP){
if(subP.hasOwnProperty(n)&&(typeof supP[n]=="function")){subP[prefix+n]=supP[n];}
}
}
return subclass;
};
this.createjs=this.createjs||{};
createjs.indexOf=function(array,searchElement){
"use strict";
for(var i=0,l=array.length;i<l;i++){
if(searchElement===array[i]){
return i;
}
}
return-1;
};
this.createjs=this.createjs||{};
(function(){
"use strict";
createjs.proxy=function(method,scope){
var aArgs=Array.prototype.slice.call(arguments,2);
return function(){
return method.apply(scope,Array.prototype.slice.call(arguments,0).concat(aArgs));
};
}
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var t=Object.defineProperty?true:false;
var foo={};
try{
Object.defineProperty(foo,"bar",{
get:function(){
return this._bar;
},
set:function(value){
this._bar=value;
}
});
}catch(e){
t=false;
}
createjs.definePropertySupported=t;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function BrowserDetect(){
throw"BrowserDetect cannot be instantiated";
};
var agent=BrowserDetect.agent=window.navigator.userAgent;
BrowserDetect.isWindowPhone=(agent.indexOf("IEMobile")>-1)||(agent.indexOf("Windows Phone")>-1);
BrowserDetect.isFirefox=(agent.indexOf("Firefox")>-1);
BrowserDetect.isOpera=(window.opera!=null);
BrowserDetect.isChrome=(agent.indexOf("Chrome")>-1);
BrowserDetect.isIOS=(agent.indexOf("iPod")>-1||agent.indexOf("iPhone")>-1||agent.indexOf("iPad")>-1)&&!BrowserDetect.isWindowPhone;
BrowserDetect.isAndroid=(agent.indexOf("Android")>-1)&&!BrowserDetect.isWindowPhone;
BrowserDetect.isBlackberry=(agent.indexOf("Blackberry")>-1);
createjs.BrowserDetect=BrowserDetect;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function EventDispatcher(){
this._listeners=null;
this._captureListeners=null;
}
var p=EventDispatcher.prototype;
EventDispatcher.initialize=function(target){
target.addEventListener=p.addEventListener;
target.on=p.on;
target.removeEventListener=target.off=p.removeEventListener;
target.removeAllEventListeners=p.removeAllEventListeners;
target.hasEventListener=p.hasEventListener;
target.dispatchEvent=p.dispatchEvent;
target._dispatchEvent=p._dispatchEvent;
target.willTrigger=p.willTrigger;
};
p.addEventListener=function(type,listener,useCapture){
var listeners;
if(useCapture){
listeners=this._captureListeners=this._captureListeners||{};
}else{
listeners=this._listeners=this._listeners||{};
}
var arr=listeners[type];
if(arr){this.removeEventListener(type,listener,useCapture);}
arr=listeners[type];
if(!arr){listeners[type]=[listener];}
else{arr.push(listener);}
return listener;
};
p.on=function(type,listener,scope,once,data,useCapture){
if(listener.handleEvent){
scope=scope||listener;
listener=listener.handleEvent;
}
scope=scope||this;
return this.addEventListener(type,function(evt){
listener.call(scope,evt,data);
once&&evt.remove();
},useCapture);
};
p.removeEventListener=function(type,listener,useCapture){
var listeners=useCapture?this._captureListeners:this._listeners;
if(!listeners){return;}
var arr=listeners[type];
if(!arr){return;}
for(var i=0,l=arr.length;i<l;i++){
if(arr[i]==listener){
if(l==1){delete(listeners[type]);}
else{arr.splice(i,1);}
break;
}
}
};
p.off=p.removeEventListener;
p.removeAllEventListeners=function(type){
if(!type){this._listeners=this._captureListeners=null;}
else{
if(this._listeners){delete(this._listeners[type]);}
if(this._captureListeners){delete(this._captureListeners[type]);}
}
};
p.dispatchEvent=function(eventObj){
if(typeof eventObj=="string"){
var listeners=this._listeners;
if(!listeners||!listeners[eventObj]){return false;}
eventObj=new createjs.Event(eventObj);
}else if(eventObj.target&&eventObj.clone){
eventObj=eventObj.clone();
}
try{eventObj.target=this;}catch(e){}
if(!eventObj.bubbles||!this.parent){
this._dispatchEvent(eventObj,2);
}else{
var top=this,list=[top];
while(top.parent){list.push(top=top.parent);}
var i,l=list.length;
for(i=l-1;i>=0&&!eventObj.propagationStopped;i--){
list[i]._dispatchEvent(eventObj,1+(i==0));
}
for(i=1;i<l&&!eventObj.propagationStopped;i++){
list[i]._dispatchEvent(eventObj,3);
}
}
return eventObj.defaultPrevented;
};
p.hasEventListener=function(type){
var listeners=this._listeners,captureListeners=this._captureListeners;
return!!((listeners&&listeners[type])||(captureListeners&&captureListeners[type]));
};
p.willTrigger=function(type){
var o=this;
while(o){
if(o.hasEventListener(type)){return true;}
o=o.parent;
}
return false;
};
p.toString=function(){
return"[EventDispatcher]";
};
p._dispatchEvent=function(eventObj,eventPhase){
var l,listeners=(eventPhase==1)?this._captureListeners:this._listeners;
if(eventObj&&listeners){
var arr=listeners[eventObj.type];
if(!arr||!(l=arr.length)){return;}
try{eventObj.currentTarget=this;}catch(e){}
try{eventObj.eventPhase=eventPhase;}catch(e){}
eventObj.removed=false;
arr=arr.slice();
for(var i=0;i<l&&!eventObj.immediatePropagationStopped;i++){
var o=arr[i];
if(o.handleEvent){o.handleEvent(eventObj);}
else{o(eventObj);}
if(eventObj.removed){
this.off(eventObj.type,o,eventPhase==1);
eventObj.removed=false;
}
}
}
};
createjs.EventDispatcher=EventDispatcher;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Event(type,bubbles,cancelable){
this.type=type;
this.target=null;
this.currentTarget=null;
this.eventPhase=0;
this.bubbles=!!bubbles;
this.cancelable=!!cancelable;
this.timeStamp=(new Date()).getTime();
this.defaultPrevented=false;
this.propagationStopped=false;
this.immediatePropagationStopped=false;
this.removed=false;
}
var p=Event.prototype;
p.preventDefault=function(){
this.defaultPrevented=this.cancelable&&true;
};
p.stopPropagation=function(){
this.propagationStopped=true;
};
p.stopImmediatePropagation=function(){
this.immediatePropagationStopped=this.propagationStopped=true;
};
p.remove=function(){
this.removed=true;
};
p.clone=function(){
return new Event(this.type,this.bubbles,this.cancelable);
};
p.set=function(props){
for(var n in props){this[n]=props[n];}
return this;
};
p.toString=function(){
return"[Event (type="+this.type+")]";
};
createjs.Event=Event;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function ErrorEvent(title,message,data){
this.Event_constructor("error");
this.title=title;
this.message=message;
this.data=data;
}
var p=createjs.extend(ErrorEvent,createjs.Event);
p.clone=function(){
return new createjs.ErrorEvent(this.title,this.message,this.data);
};
createjs.ErrorEvent=createjs.promote(ErrorEvent,"Event");
}());
this.createjs=this.createjs||{};
(function(scope){
"use strict";
function ProgressEvent(loaded,total){
this.Event_constructor("progress");
this.loaded=loaded;
this.total=(total==null)?1:total;
this.progress=(total==0)?0:this.loaded/this.total;
};
var p=createjs.extend(ProgressEvent,createjs.Event);
p.clone=function(){
return new createjs.ProgressEvent(this.loaded,this.total);
};
createjs.ProgressEvent=createjs.promote(ProgressEvent,"Event");
}(window));
this.createjs=this.createjs||{};
(function(){
"use strict";
function LoadItem(){
this.src=null;
this.type=null;
this.id=null;
this.maintainOrder=false;
this.callback=null;
this.data=null;
this.method=createjs.LoadItem.GET;
this.values=null;
this.headers=null;
this.withCredentials=false;
this.mimeType=null;
this.crossOrigin="Anonymous";
this.loadTimeout=8000;
};
var p=LoadItem.prototype={};
var s=LoadItem;
s.create=function(value){
if(typeof value=="string"){
var item=new LoadItem();
item.src=value;
return item;
}else if(value instanceof s){
return value;
}else if(value instanceof Object){
return value;
}else{
throw new Error("Type not recognized.");
}
};
p.set=function(props){
for(var n in props){this[n]=props[n];}
return this;
};
createjs.LoadItem=s;
}());
(function(){
var s={};
s.ABSOLUTE_PATT=/^(?:\w+:)?\/{2}/i;
s.RELATIVE_PATT='';
s.EXTENSION_PATT=/\/?[^/]+\.(\w{1,5})$/i;
s.parseURI=function(path){
var info={absolute:false,relative:false};
if(path==null){return info;}
var queryIndex=path.indexOf("?");
if(queryIndex>-1){
path=path.substr(0,queryIndex);
}
var match;
if(s.ABSOLUTE_PATT.test(path)){
info.absolute=true;
}else if(s.RELATIVE_PATT.test(path)){
info.relative=true;
}
if(match=path.match(s.EXTENSION_PATT)){
info.extension=match[1].toLowerCase();
}
return info;
};
s.formatQueryString=function(data,query){
if(data==null){
throw new Error('You must specify data.');
}
var params=[];
for(var n in data){
params.push(n+'='+escape(data[n]));
}
if(query){
params=params.concat(query);
}
return params.join('&');
};
s.buildPath=function(src,data){
if(data==null){
return src;
}
var query=[];
var idx=src.indexOf('?');
if(idx!=-1){
var q=src.slice(idx+1);
query=query.concat(q.split('&'));
}
if(idx!=-1){
return src.slice(0,idx)+'?'+this._formatQueryString(data,query);
}else{
return src+'?'+this._formatQueryString(data,query);
}
};
s.isCrossDomain=function(item){
var target=document.createElement("a");
target.href=item.src;
var host=document.createElement("a");
host.href=location.href;
var crossdomain=(target.hostname!="")&&
(target.port!=host.port||
target.protocol!=host.protocol||
target.hostname!=host.hostname);
return crossdomain;
};
s.isLocal=function(item){
var target=document.createElement("a");
target.href=item.src;
return target.hostname==""&&target.protocol=="file:";
};
s.isBinary=function(type){
switch(type){
case createjs.AbstractLoader.IMAGE:
case createjs.AbstractLoader.BINARY:
return true;
default:
return false;
}
};
s.isImageTag=function(item){
return item instanceof HTMLImageElement;
};
s.isAudioTag=function(item){
if(window.HTMLAudioElement){
return item instanceof HTMLAudioElement;
}else{
return false;
}
};
s.isVideoTag=function(item){
if(window.HTMLVideoElement){
return item instanceof HTMLVideoElement;
}else{
false;
}
};
s.isText=function(type){
switch(type){
case createjs.AbstractLoader.TEXT:
case createjs.AbstractLoader.JSON:
case createjs.AbstractLoader.MANIFEST:
case createjs.AbstractLoader.XML:
case createjs.AbstractLoader.CSS:
case createjs.AbstractLoader.SVG:
case createjs.AbstractLoader.JAVASCRIPT:
return true;
default:
return false;
}
};
s.getTypeByExtension=function(extension){
if(extension==null){
return createjs.AbstractLoader.TEXT;
}
switch(extension.toLowerCase()){
case"jpeg":
case"jpg":
case"gif":
case"png":
case"webp":
case"bmp":
return createjs.AbstractLoader.IMAGE;
case"ogg":
case"mp3":
case"webm":
return createjs.AbstractLoader.SOUND;
case"mp4":
case"webm":
case"ts":
return createjs.AbstractLoader.VIDEO;
case"json":
return createjs.AbstractLoader.JSON;
case"xml":
return createjs.AbstractLoader.XML;
case"css":
return createjs.AbstractLoader.CSS;
case"js":
return createjs.AbstractLoader.JAVASCRIPT;
case'svg':
return createjs.AbstractLoader.SVG;
default:
return createjs.AbstractLoader.TEXT;
}
};
createjs.RequestUtils=s;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function AbstractLoader(loadItem,preferXHR,type){
this.EventDispatcher_constructor();
this.loaded=false;
this.canceled=false;
this.progress=0;
this.type=type;
this.resultFormatter=null;
if(loadItem){
this._item=createjs.LoadItem.create(loadItem);
}else{
this._item=null;
}
this._preferXHR=preferXHR;
this._result=null;
this._rawResult=null;
this._loadedItems=null;
this._tagSrcAttribute=null;
this._tag=null;
};
var p=createjs.extend(AbstractLoader,createjs.EventDispatcher);
var s=AbstractLoader;
s.POST="POST";
s.GET="GET";
s.BINARY="binary";
s.CSS="css";
s.IMAGE="image";
s.JAVASCRIPT="javascript";
s.JSON="json";
s.JSONP="jsonp";
s.MANIFEST="manifest";
s.SOUND="sound";
s.VIDEO="video";
s.SPRITESHEET="spritesheet";
s.SVG="svg";
s.TEXT="text";
s.XML="xml";
p.getItem=function(){
return this._item;
};
p.getResult=function(raw){
return raw?this._rawResult:this._result;
};
p.getTag=function(){
return this._tag;
};
p.setTag=function(tag){
this._tag=tag;
};
p.load=function(){
this._createRequest();
this._request.on("complete",this,this);
this._request.on("progress",this,this);
this._request.on("loadStart",this,this);
this._request.on("abort",this,this);
this._request.on("timeout",this,this);
this._request.on("error",this,this);
var evt=new createjs.Event("initialize");
evt.loader=this._request;
this.dispatchEvent(evt);
this._request.load();
};
p.cancel=function(){
this.canceled=true;
this.destroy();
};
p.destroy=function(){
if(this._request){
this._request.removeAllEventListeners();
this._request.destroy();
}
this._request=null;
this._item=null;
this._rawResult=null;
this._result=null;
this._loadItems=null;
this.removeAllEventListeners();
};
p.getLoadedItems=function(){
return this._loadedItems;
};
p._createRequest=function(){
if(!this._preferXHR){
this._request=new createjs.TagRequest(this._item,this._tag||this._createTag(),this._tagSrcAttribute);
}else{
this._request=new createjs.XHRRequest(this._item);
}
};
p._createTag=function(src){return null;};
p._sendLoadStart=function(){
if(this._isCanceled()){return;}
this.dispatchEvent("loadstart");
};
p._sendProgress=function(value){
if(this._isCanceled()){return;}
var event=null;
if(typeof(value)=="number"){
this.progress=value;
event=new createjs.ProgressEvent(this.progress);
}else{
event=value;
this.progress=value.loaded/value.total;
event.progress=this.progress;
if(isNaN(this.progress)||this.progress==Infinity){this.progress=0;}
}
this.hasEventListener("progress")&&this.dispatchEvent(event);
};
p._sendComplete=function(){
if(this._isCanceled()){return;}
this.loaded=true;
var event=new createjs.Event("complete");
event.rawResult=this._rawResult;
if(this._result!=null){
event.result=this._result;
}
this.dispatchEvent(event);
};
p._sendError=function(event){
if(this._isCanceled()||!this.hasEventListener("error")){return;}
if(event==null){
event=new createjs.ErrorEvent("PRELOAD_ERROR_EMPTY");
}
this.dispatchEvent(event);
};
p._isCanceled=function(){
if(window.createjs==null||this.canceled){
return true;
}
return false;
};
p.resultFormatter=null;
p.handleEvent=function(event){
switch(event.type){
case"complete":
this._rawResult=event.target._response;
var result=this.resultFormatter&&this.resultFormatter(this);
var _this=this;
if(result instanceof Function){
result(function(result){
_this._result=result;
_this._sendComplete();
});
}else{
this._result=result||this._rawResult;
this._sendComplete();
}
break;
case"progress":
this._sendProgress(event);
break;
case"error":
this._sendError(event);
break;
case"loadstart":
this._sendLoadStart();
break;
case"abort":
case"timeout":
if(!this._isCanceled()){
this.dispatchEvent(event.type);
}
break;
}
};
p.buildPath=function(src,data){
return createjs.RequestUtils.buildPath(src,data);
};
p.toString=function(){
return"[PreloadJS AbstractLoader]";
};
createjs.AbstractLoader=createjs.promote(AbstractLoader,"EventDispatcher");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function AbstractMediaLoader(loadItem,preferXHR,type){
this.AbstractLoader_constructor(loadItem,preferXHR,type);
this.resultFormatter=this._formatResult;
this._tagSrcAttribute="src";
};
var p=createjs.extend(AbstractMediaLoader,createjs.AbstractLoader);
p.load=function(){
if(!this._tag){
this._tag=this._createTag(this._item.src);
}
this._tag.preload="auto";
this._tag.load();
this.AbstractLoader_load();
};
p._createTag=function(){};
p._createRequest=function(){
if(!this._preferXHR){
this._request=new createjs.MediaTagRequest(this._item,this._tag||this._createTag(),this._tagSrcAttribute);
}else{
this._request=new createjs.XHRRequest(this._item);
}
};
p._formatResult=function(loader){
this._tag.removeEventListener&&this._tag.removeEventListener("canplaythrough",this._loadedHandler);
this._tag.onstalled=null;
if(this._preferXHR){
loader.getTag().src=loader.getResult(true);
}
return loader.getTag();
};
createjs.AbstractMediaLoader=createjs.promote(AbstractMediaLoader,"AbstractLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractRequest=function(item){
this._item=item;
};
var p=createjs.extend(AbstractRequest,createjs.EventDispatcher);
p.load=function(){};
p.destroy=function(){};
p.cancel=function(){};
createjs.AbstractRequest=createjs.promote(AbstractRequest,"EventDispatcher");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function TagRequest(loadItem,tag,srcAttribute){
this.AbstractRequest_constructor(loadItem);
this._tag=tag;
this._tagSrcAttribute=srcAttribute;
this._loadedHandler=createjs.proxy(this._handleTagComplete,this);
this._addedToDOM=false;
this._startTagVisibility=null;
};
var p=createjs.extend(TagRequest,createjs.AbstractRequest);
p.load=function(){
if(this._tag.parentNode==null){
window.document.body.appendChild(this._tag);
this._addedToDOM=true;
}
this._tag.onload=createjs.proxy(this._handleTagComplete,this);
this._tag.onreadystatechange=createjs.proxy(this._handleReadyStateChange,this);
var evt=new createjs.Event("initialize");
evt.loader=this._tag;
this.dispatchEvent(evt);
this._hideTag();
this._tag[this._tagSrcAttribute]=this._item.src;
};
p.destroy=function(){
this._clean();
this._tag=null;
this.AbstractRequest_destroy();
};
p._handleReadyStateChange=function(){
clearTimeout(this._loadTimeout);
var tag=this._tag;
if(tag.readyState=="loaded"||tag.readyState=="complete"){
this._handleTagComplete();
}
};
p._handleTagComplete=function(){
this._rawResult=this._tag;
this._result=this.resultFormatter&&this.resultFormatter(this)||this._rawResult;
this._clean();
this._showTag();
this.dispatchEvent("complete");
};
p._clean=function(){
this._tag.onload=null;
this._tag.onreadystatechange=null;
if(this._addedToDOM&&this._tag.parentNode!=null){
this._tag.parentNode.removeChild(this._tag);
}
};
p._hideTag=function(){
this._startTagVisibility=this._tag.style.visibility;
this._tag.style.visibility="hidden";
};
p._showTag=function(){
this._tag.style.visibility=this._startTagVisibility;
};
p._handleStalled=function(){
};
createjs.TagRequest=createjs.promote(TagRequest,"AbstractRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function MediaTagRequest(loadItem,tag,srcAttribute){
this.AbstractRequest_constructor(loadItem);
this._tag=tag;
this._tagSrcAttribute=srcAttribute;
this._loadedHandler=createjs.proxy(this._handleTagComplete,this);
};
var p=createjs.extend(MediaTagRequest,createjs.TagRequest);
var s=MediaTagRequest;
p.load=function(){
this._tag.onstalled=createjs.proxy(this._handleStalled,this);
this._tag.onprogress=createjs.proxy(this._handleProgress,this);
this._tag.addEventListener&&this._tag.addEventListener("canplaythrough",this._loadedHandler,false);
this.TagRequest_load();
};
p._handleReadyStateChange=function(){
clearTimeout(this._loadTimeout);
var tag=this._tag;
if(tag.readyState=="loaded"||tag.readyState=="complete"){
this._handleTagComplete();
}
};
p._handleStalled=function(){
};
p._handleProgress=function(event){
if(!event||event.loaded>0&&event.total==0){
return;
}
var newEvent=new createjs.ProgressEvent(event.loaded,event.total);
this.dispatchEvent(newEvent);
};
p._clean=function(){
this._tag.removeEventListener&&this._tag.removeEventListener("canplaythrough",this._loadedHandler);
this._tag.onstalled=null;
this._tag.onprogress=null;
this.TagRequest__clean();
};
createjs.MediaTagRequest=createjs.promote(MediaTagRequest,"TagRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function XHRRequest(item){
this.AbstractRequest_constructor(item);
this._request=null;
this._loadTimeout=null;
this._xhrLevel=1;
this._response=null;
this._rawResponse=null;
this._canceled=false;
this._handleLoadStartProxy=createjs.proxy(this._handleLoadStart,this);
this._handleProgressProxy=createjs.proxy(this._handleProgress,this);
this._handleAbortProxy=createjs.proxy(this._handleAbort,this);
this._handleErrorProxy=createjs.proxy(this._handleError,this);
this._handleTimeoutProxy=createjs.proxy(this._handleTimeout,this);
this._handleLoadProxy=createjs.proxy(this._handleLoad,this);
this._handleReadyStateChangeProxy=createjs.proxy(this._handleReadyStateChange,this);
if(!this._createXHR(item)){
}
};
var p=createjs.extend(XHRRequest,createjs.AbstractRequest);
XHRRequest.ACTIVEX_VERSIONS=[
"Msxml2.XMLHTTP.6.0",
"Msxml2.XMLHTTP.5.0",
"Msxml2.XMLHTTP.4.0",
"MSXML2.XMLHTTP.3.0",
"MSXML2.XMLHTTP",
"Microsoft.XMLHTTP"
];
p.getResult=function(raw){
if(raw&&this._rawResponse){
return this._rawResponse;
}
return this._response;
};
p.cancel=function(){
this.canceled=true;
this._clean();
this._request.abort();
};
p.load=function(){
if(this._request==null){
this._handleError();
return;
}
this._request.addEventListener("loadstart",this._handleLoadStartProxy,false);
this._request.addEventListener("progress",this._handleProgressProxy,false);
this._request.addEventListener("abort",this._handleAbortProxy,false);
this._request.addEventListener("error",this._handleErrorProxy,false);
this._request.addEventListener("timeout",this._handleTimeoutProxy,false);
this._request.addEventListener("load",this._handleLoadProxy,false);
this._request.addEventListener("readystatechange",this._handleReadyStateChangeProxy,false);
if(this._xhrLevel==1){
this._loadTimeout=setTimeout(createjs.proxy(this._handleTimeout,this),this._item.loadTimeout);
}
try{
if(!this._item.values||this._item.method==createjs.AbstractLoader.GET){
this._request.send();
}else if(this._item.method==createjs.AbstractLoader.POST){
this._request.send(createjs.RequestUtils.formatQueryString(this._item.values));
}
}catch(error){
this.dispatchEvent(new createjs.ErrorEvent("XHR_SEND",null,error));
}
};
p.setResponseType=function(type){
this._request.responseType=type;
};
p.getAllResponseHeaders=function(){
if(this._request.getAllResponseHeaders instanceof Function){
return this._request.getAllResponseHeaders();
}else{
return null;
}
};
p.getResponseHeader=function(header){
if(this._request.getResponseHeader instanceof Function){
return this._request.getResponseHeader(header);
}else{
return null;
}
};
p._handleProgress=function(event){
if(!event||event.loaded>0&&event.total==0){
return;
}
var newEvent=new createjs.ProgressEvent(event.loaded,event.total);
this.dispatchEvent(newEvent);
};
p._handleLoadStart=function(event){
clearTimeout(this._loadTimeout);
this.dispatchEvent("loadstart");
};
p._handleAbort=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent("XHR_ABORTED",null,event));
};
p._handleError=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent(event.message));
};
p._handleReadyStateChange=function(event){
if(this._request.readyState==4){
this._handleLoad();
}
};
p._handleLoad=function(event){
if(this.loaded){
return;
}
this.loaded=true;
var error=this._checkError();
if(error){
this._handleError(error);
return;
}
this._response=this._getResponse();
this._clean();
this.dispatchEvent(new createjs.Event("complete"));
};
p._handleTimeout=function(event){
this._clean();
this.dispatchEvent(new createjs.ErrorEvent("PRELOAD_TIMEOUT",null,event));
};
p._checkError=function(){
var status=parseInt(this._request.status);
switch(status){
case 404:
case 0:
return new Error(status);
}
return null;
};
p._getResponse=function(){
if(this._response!=null){
return this._response;
}
if(this._request.response!=null){
return this._request.response;
}
try{
if(this._request.responseText!=null){
return this._request.responseText;
}
}catch(e){
}
try{
if(this._request.responseXML!=null){
return this._request.responseXML;
}
}catch(e){
}
return null;
};
p._createXHR=function(item){
var crossdomain=createjs.RequestUtils.isCrossDomain(item);
var headers={};
var req=null;
if(window.XMLHttpRequest){
req=new XMLHttpRequest();
if(crossdomain&&req.withCredentials===undefined&&window.XDomainRequest){
req=new XDomainRequest();
}
}else{
for(var i=0,l=s.ACTIVEX_VERSIONS.length;i<l;i++){
var axVersion=s.ACTIVEX_VERSIONS[i];
try{
req=new ActiveXObject(axVersions);
break;
}catch(e){}
}
if(req==null){return false;}
}
if(item.mimeType&&req.overrideMimeType){
req.overrideMimeType(item.mimeType);
}
this._xhrLevel=(typeof req.responseType==="string")?2:1;
var src=null;
if(item.method==createjs.AbstractLoader.GET){
src=createjs.RequestUtils.buildPath(item.src,item.values);
}else{
src=item.src;
}
req.open(item.method||createjs.AbstractLoader.GET,src,true);
if(crossdomain&&req instanceof XMLHttpRequest&&this._xhrLevel==1){
headers["Origin"]=location.origin;
}
if(item.values&&item.method==createjs.AbstractLoader.POST){
headers["Content-Type"]="application/x-www-form-urlencoded";
}
if(!crossdomain&&!headers["X-Requested-With"]){
headers["X-Requested-With"]="XMLHttpRequest";
}
if(item.headers){
for(var n in item.headers){
headers[n]=item.headers[n];
}
}
for(n in headers){
req.setRequestHeader(n,headers[n])
}
if(req instanceof XMLHttpRequest&&item.withCredentials!==undefined){
req.withCredentials=item.withCredentials;
}
this._request=req;
return true;
};
p._clean=function(){
clearTimeout(this._loadTimeout);
this._request.removeEventListener("loadstart",this._handleLoadStartProxy);
this._request.removeEventListener("progress",this._handleProgressProxy);
this._request.removeEventListener("abort",this._handleAbortProxy);
this._request.removeEventListener("error",this._handleErrorProxy);
this._request.removeEventListener("timeout",this._handleTimeoutProxy);
this._request.removeEventListener("load",this._handleLoadProxy);
this._request.removeEventListener("readystatechange",this._handleReadyStateChangeProxy);
};
p.toString=function(){
return"[PreloadJS XHRRequest]";
};
createjs.XHRRequest=createjs.promote(XHRRequest,"AbstractRequest");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function SoundLoader(loadItem,preferXHR){
this.AbstractMediaLoader_constructor(loadItem,preferXHR,createjs.AbstractLoader.SOUND);
if(createjs.RequestUtils.isAudioTag(loadItem)){
this._tag=loadItem;
}else if(createjs.RequestUtils.isAudioTag(loadItem.src)){
this._tag=loadItem;
}else if(createjs.RequestUtils.isAudioTag(loadItem.tag)){
this._tag=createjs.RequestUtils.isAudioTag(loadItem)?loadItem:loadItem.src;
}
if(this._tag!=null){
this._preferXHR=false;
}
};
var p=createjs.extend(SoundLoader,createjs.AbstractMediaLoader);
var s=SoundLoader;
s.canLoadItem=function(item){
return item.type==createjs.AbstractLoader.SOUND;
};
p._createTag=function(src){
var tag=document.createElement("audio");
tag.autoplay=false;
tag.preload="none";
tag.src=src;
return tag;
};
createjs.SoundLoader=createjs.promote(SoundLoader,"AbstractMediaLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Sound(){
throw"Sound cannot be instantiated";
}
var s=Sound;
s.INTERRUPT_ANY="any";
s.INTERRUPT_EARLY="early";
s.INTERRUPT_LATE="late";
s.INTERRUPT_NONE="none";
s.PLAY_INITED="playInited";
s.PLAY_SUCCEEDED="playSucceeded";
s.PLAY_INTERRUPTED="playInterrupted";
s.PLAY_FINISHED="playFinished";
s.PLAY_FAILED="playFailed";
s.SUPPORTED_EXTENSIONS=["mp3","ogg","mpeg","wav","m4a","mp4","aiff","wma","mid"];
s.EXTENSION_MAP={
m4a:"mp4"
};
s.FILE_PATTERN=/^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/;
s.defaultInterruptBehavior=s.INTERRUPT_NONE;
s.alternateExtensions=[];
s.activePlugin=null;
s._pluginsRegistered=false;
s._lastID=0;
s._masterVolume=1;
s._masterMute=false;
s._instances=[];
s._idHash={};
s._preloadHash={};
s.addEventListener=null;
s.removeEventListener=null;
s.removeAllEventListeners=null;
s.dispatchEvent=null;
s.hasEventListener=null;
s._listeners=null;
createjs.EventDispatcher.initialize(s);
s.getPreloadHandlers=function(){
return{
callback:createjs.proxy(s.initLoad,s),
types:["sound"],
extensions:s.SUPPORTED_EXTENSIONS
};
};
s._handleLoadComplete=function(event){
var src=event.target.getItem().src;
if(!s._preloadHash[src]){return;}
for(var i=0,l=s._preloadHash[src].length;i<l;i++){
var item=s._preloadHash[src][i];
s._preloadHash[src][i]=true;
if(!s.hasEventListener("fileload")){continue;}
var event=new createjs.Event("fileload");
event.src=item.src;
event.id=item.id;
event.data=item.data;
event.sprite=item.sprite;
s.dispatchEvent(event);
}
};
s._handleLoadError=function(event){
var src=event.target.getItem().src;
if(!s._preloadHash[src]){return;}
for(var i=0,l=s._preloadHash[src].length;i<l;i++){
var item=s._preloadHash[src][i];
s._preloadHash[src][i]=false;
if(!s.hasEventListener("fileerror")){continue;}
var event=new createjs.Event("fileerror");
event.src=item.src;
event.id=item.id;
event.data=item.data;
event.sprite=item.sprite;
s.dispatchEvent(event);
}
};
s._registerPlugin=function(plugin){
if(plugin.isSupported()){
s.activePlugin=new plugin();
return true;
}
return false;
};
s.registerPlugins=function(plugins){
s._pluginsRegistered=true;
for(var i=0,l=plugins.length;i<l;i++){
if(s._registerPlugin(plugins[i])){
return true;
}
}
return false;
};
s.initializeDefaultPlugins=function(){
if(s.activePlugin!=null){return true;}
if(s._pluginsRegistered){return false;}
if(s.registerPlugins([createjs.WebAudioPlugin,createjs.HTMLAudioPlugin])){return true;}
return false;
};
s.isReady=function(){
return(s.activePlugin!=null);
};
s.getCapabilities=function(){
if(s.activePlugin==null){return null;}
return s.activePlugin._capabilities;
};
s.getCapability=function(key){
if(s.activePlugin==null){return null;}
return s.activePlugin._capabilities[key];
};
s.initLoad=function(loadItem){
return s._registerSound(loadItem);
};
s._registerSound=function(loadItem){
if(!s.initializeDefaultPlugins()){return false;}
var details=s._parsePath(loadItem.src);
if(details==null){return false;}
loadItem.src=details.src;
loadItem.type="sound";
var data=loadItem.data;
var numChannels=s.activePlugin.defaultNumChannels||null;
if(data!=null){
if(!isNaN(data.channels)){
numChannels=parseInt(data.channels);
}else if(!isNaN(data)){
numChannels=parseInt(data);
}
if(data.audioSprite){
var sp;
for(var i=data.audioSprite.length;i--;){
sp=data.audioSprite[i];
s._idHash[sp.id]={src:loadItem.src,startTime:parseInt(sp.startTime),duration:parseInt(sp.duration)};
}
}
}
if(loadItem.id!=null){s._idHash[loadItem.id]={src:loadItem.src}};
var loader=s.activePlugin.register(loadItem,numChannels);
SoundChannel.create(loadItem.src,numChannels);
if(data==null||!isNaN(data)){
loadItem.data=numChannels||SoundChannel.maxPerChannel();
}else{
loadItem.data.channels=numChannels||SoundChannel.maxPerChannel();
}
if(loader.type){loadItem.type=loader.type;}
return loader;
};
s.registerSound=function(src,id,data,basePath){
var loadItem={src:src,id:id,data:data};
if(src instanceof Object){
basePath=id;
loadItem=src;
}
loadItem=createjs.LoadItem.create(loadItem);
if(basePath!=null){loadItem.src=basePath+src;}
var loader=s._registerSound(loadItem);
if(!loader){return false;}
if(!s._preloadHash[loadItem.src]){s._preloadHash[loadItem.src]=[];}
s._preloadHash[loadItem.src].push(loadItem);
if(s._preloadHash[loadItem.src].length==1){
loader.on("complete",createjs.proxy(this._handleLoadComplete,this));
loader.on("error",createjs.proxy(this._handleLoadError,this));
s.activePlugin.preload(loader);
}else{
if(s._preloadHash[loadItem.src][0]==true){return true;}
}
return loadItem;
};
s.registerSounds=function(sounds,basePath){
var returnValues=[];
if(sounds.path){
if(!basePath){
basePath=sounds.path;
}else{
basePath=basePath+sounds.path;
}
}
for(var i=0,l=sounds.length;i<l;i++){
returnValues[i]=createjs.Sound.registerSound(sounds[i].src,sounds[i].id,sounds[i].data,basePath);
}
return returnValues;
};
s.registerManifest=function(manifest,basePath){
try{
console.log("createjs.Sound.registerManifest is deprecated, please use createjs.Sound.registerSounds.")
}catch(error){
};
return this.registerSounds(manifest,basePath);
};
s.removeSound=function(src,basePath){
if(s.activePlugin==null){return false;}
if(src instanceof Object){src=src.src;}
src=s._getSrcById(src).src;
if(basePath!=null){src=basePath+src;}
var details=s._parsePath(src);
if(details==null){return false;}
src=details.src;
for(var prop in s._idHash){
if(s._idHash[prop].src==src){
delete(s._idHash[prop]);
}
}
SoundChannel.removeSrc(src);
delete(s._preloadHash[src]);
s.activePlugin.removeSound(src);
return true;
};
s.removeSounds=function(sounds,basePath){
var returnValues=[];
if(sounds.path){
if(!basePath){
basePath=sounds.path;
}else{
basePath=basePath+sounds.path;
}
}
for(var i=0,l=sounds.length;i<l;i++){
returnValues[i]=createjs.Sound.removeSound(sounds[i].src,basePath);
}
return returnValues;
};
s.removeManifest=function(manifest,basePath){
try{
console.log("createjs.Sound.removeManifest is deprecated, please use createjs.Sound.removeSounds.");
}catch(error){
};
return s.removeSounds(manifest,basePath);
};
s.removeAllSounds=function(){
s._idHash={};
s._preloadHash={};
SoundChannel.removeAll();
if(s.activePlugin){s.activePlugin.removeAllSounds();}
};
s.loadComplete=function(src){
if(!s.isReady()){return false;}
var details=s._parsePath(src);
if(details){
src=s._getSrcById(details.src).src;
}else{
src=s._getSrcById(src).src;
}
return(s._preloadHash[src][0]==true);
};
s._parsePath=function(value){
if(typeof(value)!="string"){value=value.toString();}
var match=value.match(s.FILE_PATTERN);
if(match==null){return false;}
var name=match[4];
var ext=match[5];
var c=s.getCapabilities();
var i=0;
while(!c[ext]){
ext=s.alternateExtensions[i++];
if(i>s.alternateExtensions.length){return null;}
}
value=value.replace("."+match[5],"."+ext);
var ret={name:name,src:value,extension:ext};
return ret;
};
s.play=function(src,interrupt,delay,offset,loop,volume,pan,startTime,duration){
if(interrupt instanceof Object){
delay=interrupt.delay;
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
startTime=interrupt.startTime;
duration=interrupt.duration;
interrupt=interrupt.interrupt;
}
var instance=s.createInstance(src,startTime,duration);
var ok=s._playInstance(instance,interrupt,delay,offset,loop,volume,pan);
if(!ok){instance._playFailed();}
return instance;
};
s.createInstance=function(src,startTime,duration){
if(!s.initializeDefaultPlugins()){return new createjs.DefaultSoundInstance(src,startTime,duration);}
src=s._getSrcById(src);
var details=s._parsePath(src.src);
var instance=null;
if(details!=null&&details.src!=null){
SoundChannel.create(details.src);
if(startTime==null){startTime=src.startTime;}
instance=s.activePlugin.create(details.src,startTime,duration||src.duration);
}else{
instance=new createjs.DefaultSoundInstance(src,startTime,duration);;
}
instance.uniqueId=s._lastID++;
return instance;
};
s.setVolume=function(value){
if(Number(value)==null){return false;}
value=Math.max(0,Math.min(1,value));
s._masterVolume=value;
if(!this.activePlugin||!this.activePlugin.setVolume||!this.activePlugin.setVolume(value)){
var instances=this._instances;
for(var i=0,l=instances.length;i<l;i++){
instances[i].setMasterVolume(value);
}
}
};
s.getVolume=function(){
return s._masterVolume;
};
s.setMute=function(value){
if(value==null){return false;}
this._masterMute=value;
if(!this.activePlugin||!this.activePlugin.setMute||!this.activePlugin.setMute(value)){
var instances=this._instances;
for(var i=0,l=instances.length;i<l;i++){
instances[i].setMasterMute(value);
}
}
return true;
};
s.getMute=function(){
return this._masterMute;
};
s.stop=function(){
var instances=this._instances;
for(var i=instances.length;i--;){
instances[i].stop();
}
};
s._playInstance=function(instance,interrupt,delay,offset,loop,volume,pan){
if(interrupt instanceof Object){
delay=interrupt.delay;
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
interrupt=interrupt.interrupt;
}
interrupt=interrupt||s.defaultInterruptBehavior;
if(delay==null){delay=0;}
if(offset==null){offset=instance.getPosition();}
if(loop==null){loop=instance.loop;}
if(volume==null){volume=instance.volume;}
if(pan==null){pan=instance.pan;}
if(delay==0){
var ok=s._beginPlaying(instance,interrupt,offset,loop,volume,pan);
if(!ok){return false;}
}else{
var delayTimeoutId=setTimeout(function(){
s._beginPlaying(instance,interrupt,offset,loop,volume,pan);
},delay);
instance.delayTimeoutId=delayTimeoutId;
}
this._instances.push(instance);
return true;
};
s._beginPlaying=function(instance,interrupt,offset,loop,volume,pan){
if(!SoundChannel.add(instance,interrupt)){
return false;
}
var result=instance._beginPlaying(offset,loop,volume,pan);
if(!result){
var index=createjs.indexOf(this._instances,instance);
if(index>-1){this._instances.splice(index,1);}
return false;
}
return true;
};
s._getSrcById=function(value){
return s._idHash[value]||{src:value};
};
s._playFinished=function(instance){
SoundChannel.remove(instance);
var index=createjs.indexOf(this._instances,instance);
if(index>-1){this._instances.splice(index,1);}
};
createjs.Sound=Sound;
function SoundChannel(src,max){
this.init(src,max);
}
SoundChannel.channels={};
SoundChannel.create=function(src,max){
var channel=SoundChannel.get(src);
if(channel==null){
SoundChannel.channels[src]=new SoundChannel(src,max);
return true;
}
return false;
};
SoundChannel.removeSrc=function(src){
var channel=SoundChannel.get(src);
if(channel==null){return false;}
channel._removeAll();
delete(SoundChannel.channels[src]);
return true;
};
SoundChannel.removeAll=function(){
for(var channel in SoundChannel.channels){
SoundChannel.channels[channel]._removeAll();
}
SoundChannel.channels={};
};
SoundChannel.add=function(instance,interrupt){
var channel=SoundChannel.get(instance.src);
if(channel==null){return false;}
return channel._add(instance,interrupt);
};
SoundChannel.remove=function(instance){
var channel=SoundChannel.get(instance.src);
if(channel==null){return false;}
channel._remove(instance);
return true;
};
SoundChannel.maxPerChannel=function(){
return p.maxDefault;
};
SoundChannel.get=function(src){
return SoundChannel.channels[src];
};
var p=SoundChannel.prototype;
p.constructor=SoundChannel;
p.src=null;
p.max=null;
p.maxDefault=100;
p.length=0;
p.init=function(src,max){
this.src=src;
this.max=max||this.maxDefault;
if(this.max==-1){this.max=this.maxDefault;}
this._instances=[];
};
p._get=function(index){
return this._instances[index];
};
p._add=function(instance,interrupt){
if(!this._getSlot(interrupt,instance)){return false;}
this._instances.push(instance);
this.length++;
return true;
};
p._remove=function(instance){
var index=createjs.indexOf(this._instances,instance);
if(index==-1){return false;}
this._instances.splice(index,1);
this.length--;
return true;
};
p._removeAll=function(){
for(var i=this.length-1;i>=0;i--){
this._instances[i].stop();
}
};
p._getSlot=function(interrupt,instance){
var target,replacement;
if(interrupt!=Sound.INTERRUPT_NONE){
replacement=this._get(0);
if(replacement==null){
return true;
}
}
for(var i=0,l=this.max;i<l;i++){
target=this._get(i);
if(target==null){
return true;
}
if(target.playState==Sound.PLAY_FINISHED||
target.playState==Sound.PLAY_INTERRUPTED||
target.playState==Sound.PLAY_FAILED){
replacement=target;
break;
}
if(interrupt==Sound.INTERRUPT_NONE){
continue;
}
if((interrupt==Sound.INTERRUPT_EARLY&&target.getPosition()<replacement.getPosition())||
(interrupt==Sound.INTERRUPT_LATE&&target.getPosition()>replacement.getPosition())){
replacement=target;
}
}
if(replacement!=null){
replacement._interrupt();
this._remove(replacement);
return true;
}
return false;
};
p.toString=function(){
return"[Sound SoundChannel]";
};
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractSoundInstance=function(src,startTime,duration,playbackResource){
this.EventDispatcher_constructor();
this.src=src;
this.uniqueId=-1;
this.playState=null;
this.delayTimeoutId=null;
this._startTime=Math.max(0,startTime||0);
this._volume=1;
if(createjs.definePropertySupported){
Object.defineProperty(this,"volume",{
get:this.getVolume,
set:this.setVolume
});
}
this._pan=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"pan",{
get:this.getPan,
set:this.setPan
});
}
this._duration=Math.max(0,duration||0);
if(createjs.definePropertySupported){
Object.defineProperty(this,"duration",{
get:this.getDuration,
set:this.setDuration
});
}
this._playbackResource=null;
if(createjs.definePropertySupported){
Object.defineProperty(this,"playbackResource",{
get:this.getPlaybackResource,
set:this.setPlaybackResource
});
}
if(playbackResource!==false&&playbackResource!==true){this.setPlaybackResource(playbackResource);}
this._position=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"position",{
get:this.getPosition,
set:this.setPosition
});
}
this._loop=0;
if(createjs.definePropertySupported){
Object.defineProperty(this,"loop",{
get:this.getLoop,
set:this.setLoop
});
}
this._muted=false;
if(createjs.definePropertySupported){
Object.defineProperty(this,"muted",{
get:this.getMuted,
set:this.setMuted
});
}
this._paused=false;
if(createjs.definePropertySupported){
Object.defineProperty(this,"paused",{
get:this.getPaused,
set:this.setPaused
});
}
};
var p=createjs.extend(AbstractSoundInstance,createjs.EventDispatcher);
p.play=function(interrupt,delay,offset,loop,volume,pan){
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
if(interrupt instanceof Object){
offset=interrupt.offset;
loop=interrupt.loop;
volume=interrupt.volume;
pan=interrupt.pan;
}
if(offset!=null){this.setPosition(offset)}
if(loop!=null){this.setLoop(loop);}
if(volume!=null){this.setVolume(volume);}
if(pan!=null){this.setPan(pan);}
if(this._paused){this.setPaused(false);}
return;
}
this._cleanUp();
createjs.Sound._playInstance(this,interrupt,delay,offset,loop,volume,pan);
return this;
};
p.pause=function(){
if(this._paused||this.playState!=createjs.Sound.PLAY_SUCCEEDED){return false;}
this.setPaused(true);
return true;
};
p.resume=function(){
if(!this._paused){return false;}
this.setPaused(false);
return true;
};
p.stop=function(){
this._position=0;
this._paused=false;
this._handleStop();
this._cleanUp();
this.playState=createjs.Sound.PLAY_FINISHED;
return this;
};
p.destroy=function(){
this._cleanUp();
this.src=null;
this.playbackResource=null;
this.removeAllEventListeners();
};
p.toString=function(){
return"[AbstractSoundInstance]";
};
p.getPaused=function(){
return this._paused;
};
p.setPaused=function(value){
if((value!==true&&value!==false)||this._paused==value){return;}
if(value==true&&this.playState!=createjs.Sound.PLAY_SUCCEEDED){return;}
this._paused=value;
if(value){
this._pause();
}else{
this._resume();
}
clearTimeout(this.delayTimeoutId);
return this;
};
p.setVolume=function(value){
if(value==this._volume){return this;}
this._volume=Math.max(0,Math.min(1,value));
if(!this._muted){
this._updateVolume();
}
return this;
};
p.getVolume=function(){
return this._volume;
};
p.setMute=function(value){
this.setMuted(value);
};
p.getMute=function(){
return this._muted;
};
p.setMuted=function(value){
if(value!==true&&value!==false){return;}
this._muted=value;
this._updateVolume();
return this;
};
p.getMuted=function(){
return this._muted;
};
p.setPan=function(value){
if(value==this._pan){return this;}
this._pan=Math.max(-1,Math.min(1,value));
this._updatePan();
return this;
};
p.getPan=function(){
return this._pan;
};
p.getPosition=function(){
if(!this._paused&&this.playState==createjs.Sound.PLAY_SUCCEEDED){
return this._calculateCurrentPosition();
}
return this._position;
};
p.setPosition=function(value){
this._position=Math.max(0,value);
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
this._updatePosition();
}
return this;
};
p.getDuration=function(){
return this._duration;
};
p.setDuration=function(value){
if(value==this._duration){return this;}
this._duration=Math.max(0,value||0);
this._updateDuration();
return this;
};
p.setPlaybackResource=function(value){
this._playbackResource=value;
if(this._duration==0){this._setDurationFromSource();}
return this;
};
p.getPlaybackResource=function(){
return this._playbackResource;
};
p.getLoop=function(){
return this._loop;
};
p.setLoop=function(value){
if(this._playbackResource!=null){
if(this._loop!=0&&value==0){
this._removeLooping(value);
}
if(this._loop==0&&value!=0){
this._addLooping(value);
}
}
this._loop=value;
};
p._sendEvent=function(type){
var event=new createjs.Event(type);
this.dispatchEvent(event);
};
p._cleanUp=function(){
clearTimeout(this.delayTimeoutId);
this._handleCleanUp();
this._paused=false;
createjs.Sound._playFinished(this);
};
p._interrupt=function(){
this._cleanUp();
this.playState=createjs.Sound.PLAY_INTERRUPTED;
this._sendEvent("interrupted");
};
p._beginPlaying=function(offset,loop,volume,pan){
this.setPosition(offset);
this.setLoop(loop);
this.setVolume(volume);
this.setPan(pan);
if(this._playbackResource!=null&&this._position<this._duration){
this._paused=false;
this._handleSoundReady();
this.playState=createjs.Sound.PLAY_SUCCEEDED;
this._sendEvent("succeeded");
return true;
}else{
this._playFailed();
return false;
}
};
p._playFailed=function(){
this._cleanUp();
this.playState=createjs.Sound.PLAY_FAILED;
this._sendEvent("failed");
};
p._handleSoundComplete=function(event){
this._position=0;
if(this._loop!=0){
this._loop--;
this._handleLoop();
this._sendEvent("loop");
return;
}
this._cleanUp();
this.playState=createjs.Sound.PLAY_FINISHED;
this._sendEvent("complete");
};
p._handleSoundReady=function(){
};
p._updateVolume=function(){
};
p._updatePan=function(){
};
p._updateDuration=function(){
};
p._setDurationFromSource=function(){
};
p._calculateCurrentPosition=function(){
};
p._updatePosition=function(){
};
p._removeLooping=function(){
};
p._addLooping=function(){
};
p._pause=function(){
};
p._resume=function(){
};
p._handleStop=function(){
};
p._handleCleanUp=function(){
};
p._handleLoop=function(){
};
createjs.AbstractSoundInstance=createjs.promote(AbstractSoundInstance,"EventDispatcher");
createjs.DefaultSoundInstance=createjs.AbstractSoundInstance;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
var AbstractPlugin=function(){
this._capabilities=null;
this._loaders={};
this._audioSources={};
this._soundInstances={};
this._loaderClass;
this._soundInstanceClass;
};
var p=AbstractPlugin.prototype;
AbstractPlugin._capabilities=null;
AbstractPlugin.isSupported=function(){
return true;
};
p.register=function(loadItem,instances){
this._audioSources[loadItem.src]=true;
this._soundInstances[loadItem.src]=[];
if(this._loaders[loadItem.src]){return this._loaders[loadItem.src];}
var loader=new this._loaderClass(loadItem);
loader.on("complete",createjs.proxy(this._handlePreloadComplete,this));
this._loaders[loadItem.src]=loader;
return loader;
};
p.preload=function(loader){
loader.on("error",createjs.proxy(this._handlePreloadError,this));
loader.load();
};
p.isPreloadStarted=function(src){
return(this._audioSources[src]!=null);
};
p.isPreloadComplete=function(src){
return(!(this._audioSources[src]==null||this._audioSources[src]==true));
};
p.removeSound=function(src){
if(!this._soundInstances[src]){return;}
for(var i=this._soundInstances[src].length;i--;){
var item=this._soundInstances[src][i];
item.destroy();
}
delete(this._soundInstances[src]);
delete(this._audioSources[src]);
if(this._loaders[src]){this._loaders[src].destroy();}
delete(this._loaders[src]);
};
p.removeAllSounds=function(){
for(var key in this._audioSources){
this.removeSound(key);
}
};
p.create=function(src,startTime,duration){
if(!this.isPreloadStarted(src)){
this.preload(this.register(src));
}
var si=new this._soundInstanceClass(src,startTime,duration,this._audioSources[src]);
this._soundInstances[src].push(si);
return si;
};
p.setVolume=function(value){
this._volume=value;
this._updateVolume();
return true;
};
p.getVolume=function(){
return this._volume;
};
p.setMute=function(value){
this._updateVolume();
return true;
};
p.toString=function(){
return"[AbstractPlugin]";
};
p._handlePreloadComplete=function(event){
var src=event.target.getItem().src;
this._audioSources[src]=event.result;
for(var i=0,l=this._soundInstances[src].length;i<l;i++){
var item=this._soundInstances[src][i];
item.setPlaybackResource(this._audioSources[src]);
}
};
p._handlePreloadError=function(event){
};
p._updateVolume=function(){
};
createjs.AbstractPlugin=AbstractPlugin;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function Loader(loadItem){
this.AbstractLoader_constructor(loadItem,true,createjs.AbstractLoader.SOUND);
};
var p=createjs.extend(Loader,createjs.AbstractLoader);
Loader.context=null;
p.toString=function(){
return"[WebAudioLoader]";
};
p._createRequest=function(){
this._request=new createjs.XHRRequest(this._item,false);
this._request.setResponseType("arraybuffer");
};
p._sendComplete=function(event){
Loader.context.decodeAudioData(this._rawResult,
createjs.proxy(this._handleAudioDecoded,this),
createjs.proxy(this._handleError,this));
};
p._handleAudioDecoded=function(decodedAudio){
this._result=decodedAudio;
this.AbstractLoader__sendComplete();
};
createjs.WebAudioLoader=createjs.promote(Loader,"AbstractLoader");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function WebAudioSoundInstance(src,startTime,duration,playbackResource){
this.AbstractSoundInstance_constructor(src,startTime,duration,playbackResource);
this.gainNode=s.context.createGain();
this.panNode=s.context.createPanner();
this.panNode.panningModel=s._panningModel;
this.panNode.connect(this.gainNode);
this.sourceNode=null;
this._soundCompleteTimeout=null;
this._sourceNodeNext=null;
this._playbackStartTime=0;
this._endedHandler=createjs.proxy(this._handleSoundComplete,this);
};
var p=createjs.extend(WebAudioSoundInstance,createjs.AbstractSoundInstance);
var s=WebAudioSoundInstance;
s.context=null;
s.destinationNode=null;
s._panningModel="equalpower";
p.destroy=function(){
this.AbstractSoundInstance_destroy();
this.panNode.disconnect(0);
this.panNode=null;
this.gainNode.disconnect(0);
this.gainNode=null;
};
p.toString=function(){
return"[WebAudioSoundInstance]";
};
p._updatePan=function(){
this.panNode.setPosition(this._pan,0,-0.5);
};
p._removeLooping=function(){
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
};
p._addLooping=function(){
if(this.playState!=createjs.Sound.PLAY_SUCCEEDED){return;}
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
};
p._setDurationFromSource=function(){
this._duration=this.playbackResource.duration*1000;
};
p._handleCleanUp=function(){
if(this.sourceNode&&this.playState==createjs.Sound.PLAY_SUCCEEDED){
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
}
if(this.gainNode.numberOfOutputs!=0){this.gainNode.disconnect(0);}
clearTimeout(this._soundCompleteTimeout);
this._playbackStartTime=0;
};
p._cleanUpAudioNode=function(audioNode){
if(audioNode){
audioNode.stop(0);
audioNode.disconnect(0);
audioNode=null;
}
return audioNode;
};
p._handleSoundReady=function(event){
this.gainNode.connect(s.destinationNode);
var dur=this._duration*0.001;
var pos=this._position*0.001;
this.sourceNode=this._createAndPlayAudioNode((s.context.currentTime-dur),pos);
this._playbackStartTime=this.sourceNode.startTime-pos;
this._soundCompleteTimeout=setTimeout(this._endedHandler,(dur-pos)*1000);
if(this._loop!=0){
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
}
};
p._createAndPlayAudioNode=function(startTime,offset){
var audioNode=s.context.createBufferSource();
audioNode.buffer=this.playbackResource;
audioNode.connect(this.panNode);
var dur=this._duration*0.001;
audioNode.startTime=startTime+dur;
audioNode.start(audioNode.startTime,offset+(this._startTime*0.001),dur-offset);
return audioNode;
};
p._pause=function(){
this._position=(s.context.currentTime-this._playbackStartTime)*1000;
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
if(this.gainNode.numberOfOutputs!=0){this.gainNode.disconnect(0);}
clearTimeout(this._soundCompleteTimeout);
};
p._resume=function(){
this._handleSoundReady();
};
p._updateVolume=function(){
var newVolume=this._muted?0:this._volume;
if(newVolume!=this.gainNode.gain.value){
this.gainNode.gain.value=newVolume;
}
};
p._calculateCurrentPosition=function(){
return((s.context.currentTime-this._playbackStartTime)*1000);
};
p._updatePosition=function(){
this.sourceNode=this._cleanUpAudioNode(this.sourceNode);
this._sourceNodeNext=this._cleanUpAudioNode(this._sourceNodeNext);
clearTimeout(this._soundCompleteTimeout);
if(!this._paused){this._handleSoundReady();}
};
p._handleLoop=function(){
this._cleanUpAudioNode(this.sourceNode);
this.sourceNode=this._sourceNodeNext;
this._playbackStartTime=this.sourceNode.startTime;
this._sourceNodeNext=this._createAndPlayAudioNode(this._playbackStartTime,0);
this._soundCompleteTimeout=setTimeout(this._endedHandler,this._duration);
};
p._updateDuration=function(){
this._pause();
this._resume();
};
createjs.WebAudioSoundInstance=createjs.promote(WebAudioSoundInstance,"AbstractSoundInstance");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function WebAudioPlugin(){
this.AbstractPlugin_constructor();
this._panningModel=s._panningModel;;
this._volume=1;
this.context=s.context;
this.dynamicsCompressorNode=this.context.createDynamicsCompressor();
this.dynamicsCompressorNode.connect(this.context.destination);
this.gainNode=this.context.createGain();
this.gainNode.connect(this.dynamicsCompressorNode);
createjs.WebAudioSoundInstance.destinationNode=this.gainNode;
this._capabilities=s._capabilities;
this._loaderClass=createjs.WebAudioLoader;
this._soundInstanceClass=createjs.WebAudioSoundInstance;
this._addPropsToClasses();
}
var p=createjs.extend(WebAudioPlugin,createjs.AbstractPlugin);
var s=WebAudioPlugin;
s._capabilities=null;
s._panningModel="equalpower";
s.context=null;
s.isSupported=function(){
var isMobilePhoneGap=createjs.BrowserDetect.isIOS||createjs.BrowserDetect.isAndroid||createjs.BrowserDetect.isBlackberry;
if(location.protocol=="file:"&&!isMobilePhoneGap&&!this._isFileXHRSupported()){return false;}
s._generateCapabilities();
if(s.context==null){return false;}
return true;
};
s.playEmptySound=function(){
var source=s.context.createBufferSource();
source.buffer=s.context.createBuffer(1,1,22050);
source.connect(s.context.destination);
source.start(0,0,0);
};
s._isFileXHRSupported=function(){
var supported=true;
var xhr=new XMLHttpRequest();
try{
xhr.open("GET","WebAudioPluginTest.fail",false);
}catch(error){
supported=false;
return supported;
}
xhr.onerror=function(){supported=false;};
xhr.onload=function(){supported=this.status==404||(this.status==200||(this.status==0&&this.response!=""));};
try{
xhr.send();
}catch(error){
supported=false;
}
return supported;
};
s._generateCapabilities=function(){
if(s._capabilities!=null){return;}
var t=document.createElement("audio");
if(t.canPlayType==null){return null;}
if(s.context==null){
if(window.AudioContext){
s.context=new AudioContext();
}else if(window.webkitAudioContext){
s.context=new webkitAudioContext();
}else{
return null;
}
}
s._compatibilitySetUp();
s.playEmptySound();
s._capabilities={
panning:true,
volume:true,
tracks:-1
};
var supportedExtensions=createjs.Sound.SUPPORTED_EXTENSIONS;
var extensionMap=createjs.Sound.EXTENSION_MAP;
for(var i=0,l=supportedExtensions.length;i<l;i++){
var ext=supportedExtensions[i];
var playType=extensionMap[ext]||ext;
s._capabilities[ext]=(t.canPlayType("audio/"+ext)!="no"&&t.canPlayType("audio/"+ext)!="")||(t.canPlayType("audio/"+playType)!="no"&&t.canPlayType("audio/"+playType)!="");
}
if(s.context.destination.numberOfChannels<2){
s._capabilities.panning=false;
}
};
s._compatibilitySetUp=function(){
s._panningModel="equalpower";
if(s.context.createGain){return;}
s.context.createGain=s.context.createGainNode;
var audioNode=s.context.createBufferSource();
audioNode.__proto__.start=audioNode.__proto__.noteGrainOn;
audioNode.__proto__.stop=audioNode.__proto__.noteOff;
s._panningModel=0;
};
p.toString=function(){
return"[WebAudioPlugin]";
};
p._addPropsToClasses=function(){
var c=this._soundInstanceClass;
c.context=this.context;
c.destinationNode=this.gainNode;
c._panningModel=this._panningModel;
this._loaderClass.context=this.context;
};
p._updateVolume=function(){
var newVolume=createjs.Sound._masterMute?0:this._volume;
if(newVolume!=this.gainNode.gain.value){
this.gainNode.gain.value=newVolume;
}
};
createjs.WebAudioPlugin=createjs.promote(WebAudioPlugin,"AbstractPlugin");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function TagPool(src){
this.src=src;
this.length=0;
this.available=0;
this.tags=[];
this.duration=0;
};
var p=TagPool.prototype;
p.constructor=TagPool;
var s=TagPool;
s.tags={};
s.get=function(src){
var channel=s.tags[src];
if(channel==null){
channel=s.tags[src]=new TagPool(src);
}
return channel;
};
s.remove=function(src){
var channel=s.tags[src];
if(channel==null){return false;}
channel.removeAll();
delete(s.tags[src]);
return true;
};
s.getInstance=function(src){
var channel=s.tags[src];
if(channel==null){return null;}
return channel.get();
};
s.setInstance=function(src,tag){
var channel=s.tags[src];
if(channel==null){return null;}
return channel.set(tag);
};
s.getDuration=function(src){
var channel=s.tags[src];
if(channel==null){return 0;}
return channel.getDuration();
};
p.add=function(tag){
this.tags.push(tag);
this.length++;
this.available++;
};
p.removeAll=function(){
var tag;
while(this.length--){
tag=this.tags[this.length];
if(tag.parentNode){
tag.parentNode.removeChild(tag);
}
delete(this.tags[this.length]);
}
this.src=null;
this.tags.length=0;
};
p.get=function(){
if(this.tags.length==0){return null;}
this.available=this.tags.length;
var tag=this.tags.pop();
if(tag.parentNode==null){document.body.appendChild(tag);}
return tag;
};
p.set=function(tag){
var index=createjs.indexOf(this.tags,tag);
if(index==-1){this.tags.push(tag);}
this.available=this.tags.length;
};
p.getDuration=function(){
if(!this.duration){this.duration=this.tags[this.tags.length-1].duration*1000;}
return this.duration;
};
p.toString=function(){
return"[HTMLAudioTagPool]";
};
createjs.HTMLAudioTagPool=TagPool;
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function HTMLAudioSoundInstance(src,startTime,duration,playbackResource){
this.AbstractSoundInstance_constructor(src,startTime,duration,playbackResource);
this._audioSpriteStopTime=null;
this._delayTimeoutId=null;
this._endedHandler=createjs.proxy(this._handleSoundComplete,this);
this._readyHandler=createjs.proxy(this._handleTagReady,this);
this._stalledHandler=createjs.proxy(this.playFailed,this);
this._audioSpriteEndHandler=createjs.proxy(this._handleAudioSpriteLoop,this);
this._loopHandler=createjs.proxy(this._handleSoundComplete,this);
if(duration){
this._audioSpriteStopTime=(startTime+duration)*0.001;
}else{
this._duration=createjs.HTMLAudioTagPool.getDuration(this.src);
}
}
var p=createjs.extend(HTMLAudioSoundInstance,createjs.AbstractSoundInstance);
p.setMasterVolume=function(value){
this._updateVolume();
};
p.setMasterMute=function(isMuted){
this._updateVolume();
};
p.toString=function(){
return"[HTMLAudioSoundInstance]";
};
p._removeLooping=function(){
if(this._playbackResource==null){return;}
this._playbackResource.loop=false;
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
};
p._addLooping=function(){
if(this._playbackResource==null||this._audioSpriteStopTime){return;}
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.loop=true;
};
p._handleCleanUp=function(){
var tag=this._playbackResource;
if(tag!=null){
tag.pause();
tag.loop=false;
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
tag.removeEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
try{
tag.currentTime=this._startTime;
}catch(e){
}
createjs.HTMLAudioTagPool.setInstance(this.src,tag);
this._playbackResource=null;
}
};
p._beginPlaying=function(offset,loop,volume,pan){
this._playbackResource=createjs.HTMLAudioTagPool.getInstance(this.src);
return this.AbstractSoundInstance__beginPlaying(offset,loop,volume,pan);
};
p._handleSoundReady=function(event){
if(this._playbackResource.readyState!==4){
var tag=this._playbackResource;
tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
tag.addEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
tag.preload="auto";
tag.load();
return;
}
this._updateVolume();
this._playbackResource.currentTime=(this._startTime+this._position)*0.001;
if(this._audioSpriteStopTime){
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
}else{
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
if(this._loop!=0){
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.loop=true;
}
}
this._playbackResource.play();
};
p._handleTagReady=function(event){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_READY,this._readyHandler,false);
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_STALLED,this._stalledHandler,false);
this._handleSoundReady();
};
p._pause=function(){
this._playbackResource.pause();
};
p._resume=function(){
this._playbackResource.play();
};
p._updateVolume=function(){
if(this._playbackResource!=null){
var newVolume=(this._muted||createjs.Sound._masterMute)?0:this._volume*createjs.Sound._masterVolume;
if(newVolume!=this._playbackResource.volume){this._playbackResource.volume=newVolume;}
}
};
p._calculateCurrentPosition=function(){
return(this._playbackResource.currentTime*1000)-this._startTime;
};
p._updatePosition=function(){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._handleSetPositionSeek,false);
try{
this._playbackResource.currentTime=(this._position+this._startTime)*0.001;
}catch(error){
this._handleSetPositionSeek(null);
}
};
p._handleSetPositionSeek=function(event){
if(this._playbackResource==null){return;}
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._handleSetPositionSeek,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
};
p._handleAudioSpriteLoop=function(event){
if(this._playbackResource.currentTime<=this._audioSpriteStopTime){return;}
this._playbackResource.pause();
if(this._loop==0){
this._handleSoundComplete(null);
}else{
this._position=0;
this._loop--;
this._playbackResource.currentTime=this._startTime*0.001;
if(!this._paused){this._playbackResource.play();}
this._sendEvent("loop");
}
};
p._handleLoop=function(event){
if(this._loop==0){
this._playbackResource.loop=false;
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_SEEKED,this._loopHandler,false);
}
};
p._updateDuration=function(){
this._audioSpriteStopTime=(startTime+duration)*0.001;
if(this.playState==createjs.Sound.PLAY_SUCCEEDED){
this._playbackResource.removeEventListener(createjs.HTMLAudioPlugin._AUDIO_ENDED,this._endedHandler,false);
this._playbackResource.addEventListener(createjs.HTMLAudioPlugin._TIME_UPDATE,this._audioSpriteEndHandler,false);
}
};
createjs.HTMLAudioSoundInstance=createjs.promote(HTMLAudioSoundInstance,"AbstractSoundInstance");
}());
this.createjs=this.createjs||{};
(function(){
"use strict";
function HTMLAudioPlugin(){
this.AbstractPlugin_constructor();
this.defaultNumChannels=2;
this._capabilities=s._capabilities;
this._loaderClass=createjs.SoundLoader;
this._soundInstanceClass=createjs.HTMLAudioSoundInstance;
}
var p=createjs.extend(HTMLAudioPlugin,createjs.AbstractPlugin);
var s=HTMLAudioPlugin;
s.MAX_INSTANCES=30;
s._AUDIO_READY="canplaythrough";
s._AUDIO_ENDED="ended";
s._AUDIO_SEEKED="seeked";
s._AUDIO_STALLED="stalled";
s._TIME_UPDATE="timeupdate";
s._capabilities=null;
s.enableIOS=false;
s.isSupported=function(){
s._generateCapabilities();
if(s._capabilities==null){return false;}
return true;
};
s._generateCapabilities=function(){
if(s._capabilities!=null){return;}
var t=document.createElement("audio");
if(t.canPlayType==null){return null;}
s._capabilities={
panning:true,
volume:true,
tracks:-1
};
var supportedExtensions=createjs.Sound.SUPPORTED_EXTENSIONS;
var extensionMap=createjs.Sound.EXTENSION_MAP;
for(var i=0,l=supportedExtensions.length;i<l;i++){
var ext=supportedExtensions[i];
var playType=extensionMap[ext]||ext;
s._capabilities[ext]=(t.canPlayType("audio/"+ext)!="no"&&t.canPlayType("audio/"+ext)!="")||(t.canPlayType("audio/"+playType)!="no"&&t.canPlayType("audio/"+playType)!="");
}
};
p.register=function(loadItem,instances){
var channel=createjs.HTMLAudioTagPool.get(loadItem.src);
var tag=null;
for(var i=0;i<instances;i++){
tag=this._createTag(loadItem.src);
channel.add(tag);
}
var loader=this.AbstractPlugin_register(loadItem,instances);
loader.setTag(tag);
return loader;
};
p.removeSound=function(src){
this.AbstractPlugin_removeSound(src);
createjs.HTMLAudioTagPool.remove(src);
};
p.create=function(src,startTime,duration){
var si=this.AbstractPlugin_create(src,startTime,duration);
si.setPlaybackResource(null);
return si;
};
p.toString=function(){
return"[HTMLAudioPlugin]";
};
p.setVolume=p.getVolume=p.setMute=null;
p._createTag=function(src){
var tag=document.createElement("audio");
tag.autoplay=false;
tag.preload="none";
tag.src=src;
return tag;
};
createjs.HTMLAudioPlugin=createjs.promote(HTMLAudioPlugin,"AbstractPlugin");
}());
GodStep.LocalStorage=function(){
GodStep.LocalStorage.instance=this;
try{
if('localStorage'in window&&window['localStorage']!==null){
this.storage=window['localStorage'];
window.addEventListener("storage",this.h_storage,false);
this.isAvailable=true;
}
}catch(e){
this.isAvailable=false;
}
};
extend(GodStep.LocalStorage,Object);
pro.getData=function(slot){
if(!this.isAvailable){
return null;
}
var data=this.storage.getItem(slot||"data");
if(data!=null)return JSON.parse(data);
else{
trace('no data');
return null;
}
};
pro.setData=function(data,slot){
if(!this.isAvailable)return;
var d=JSON.stringify(data);
trace('local storage ['+(slot||'data')+']');
trace(d);
try{
this.storage.setItem(slot||"data",d);
}catch(e){
trace('LOCAL STORAGE ERROR');
}
};
GodStep.Clear=function(slot){
GodStep.LocalStorage.instance.setData(null,slot);
};
GodStep.SaveLocal=function(data,slot){
GodStep.LocalStorage.instance.setData(data,slot);
};
GodStep.LoadText=function(text){
return JSON.parse(text);
};
GodStep.LoadLocal=function(slot){
return GodStep.LocalStorage.instance.getData(slot);
};
pro.h_storage=function(e){
trace('storage'+e);
};
GodStep.LFrame=function(soul,name){
GodStep.Frame.call(this,name||('LFrame '+GodStep.Frame.frameCount++),soul.W,soul.H);
this.OH=soul.OH;
this.OW=soul.OW;
this.s=soul.startS;
this.soul=soul;
this.visible=false;
};extend(GodStep.LFrame,GodStep.Frame);
pro.init=function(){
this.visible=true;
};
pro.initLiquid=function(w,h,d){
this.isLiquid=true;
if(!GodStep.lqobjects){
GodStep.lqobjects=[];
GodStep.lqobjects[0]=[];
}
if(!GodStep.lqobjects[this.name]){
GodStep.lqobjects[0].push(this);
this.isTemplate=true;
this.addChild(this.view=new PIXI.Sprite(this.source=new PIXI.RenderTexture(w,h)));
GodStep.lqobjects[this.name]=this;
this.template=this;
this.brothers=[];
this.passes=[new LQ.Pass(LQ.PASS_LOOP,[1],[new LQ.Pass(LQ.PASS_FILL,[0,0]),new LQ.Pass(LQ.PASS_CIRCLE,[0,0]),new LQ.Pass(LQ.PASS_DRAW,[0])])];
this.states=[new GodStep.State()];
this.colors=[];
this.points=[];
this.params=[];
}else{
GodStep.lqobjects[this.name].brothers.push(this);
this.template=GodStep.lqobjects[this.name];
this.addChild(this.view=new PIXI.Sprite(this.source=this.template.source));
}
this.view.anchor=new PIXI.Point(.5,.5);
this.w=w;
this.h=h;
this.d=d||0;
};
pro.applyToState=function(s){
};
pro.applyState=function(s){
var cur=0;
var i;
var points=this.points;
var colors=this.colors;
var params=this.params;
var values=s.values;
var w=this.w;
var h=this.h;
var d=this.d;
for(i=0;i<points.length;i++){
var p=points[i];
p.x=w*values[cur];
p.y=h*values[cur+1];
p.z=d*values[cur+2];
cur+=3;
}
for(i=0;i<colors.length;i++){
var c=colors[i];
c.r=parseInt(255*values[cur]);
c.g=parseInt(255*values[cur+1]);
c.b=parseInt(255*values[cur+2]);
c.calcHex();
cur+=3;
}
for(i=0;i<params.length;i++){
params[i]=values[cur];
cur++;
}
};
pro.pushParam=function(){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3+this.params.length;
for(var s=0;s<sl;s++){
states[s].values.splice(cur,0,0);
}
this.params.push(0);
};
pro.pushColor=function(c){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3;
var values;
for(var s=0;s<sl;s++){
values=states[s].values;
if(c){
values.splice(cur,0,c.r/255);
values.splice(cur+1,c.g/255);
values.splice(cur+2,0,c.b/255);
}else{
values.splice(cur,0,0);
values.splice(cur+1,0,0);
values.splice(cur+2,0,0);
}
}
if(c){
this.colors.push(c);
}else{
this.colors.push(new GodStep.Color());
}
};
pro.removeColor=function(c){
var id=this.colors.indexOf(c);
var states=this.states;
var sl=states.length;
var values;
var cur=this.points.length*3;
for(var s=0;s<sl;s++){
values=states[s].values;
values.splice(cur+id*3,3);
}
this.colors.splice(id,1);
};
pro.removeParam=function(){
if(this.params.length>0){
this.params.splice(this.params.length-1,1);
}
var states=this.states;
var sl=states.length;
var cur=this.points.length*3+this.colors.length*3+this.params.length-1;
for(var s=0;s<sl;s++){
states[s].values.splice(cur,1);
}
};
pro.pushPoint=function(){
var states=this.states;
var sl=states.length;
var cur=this.points.length*3;
var values;
for(var s=0;s<sl;s++){
values=states[s].values;
values.splice(cur,0,0);
values.splice(cur+1,0,0);
values.splice(cur+2,0,0);
}
this.points.push(new GodStep.Point());
};
pro.pushState=function(s){
if(s){
this.states.push(s);
}
else{
this.states.push(this.states[0].clone());
}
};
pro.passAll=function(){
LQ.Liquid.passAll(this);
};
pro.getAllValues=function(){
var states=this.states;
var sl=states.length;
var values=[];
for(var i=0;i<sl;i++){
values=values.concat(states[i].values);
}
return values;
};
pro.setData=function(d){
if(this.isTemplate){
this.name=d.name;
this.passes=[];
for(var i=0;i<d.passes.length;i++){
this.passes.push(LQ.Pass.parse(d.passes[i]));
}
this.states=[];
this.colors=[];
this.params=[];
this.points=[];
var state;
var values=d.values;
var sl=values.length/d.sc;
for(var id=0;id<d.dc;id++){
this.points.push(new GodStep.Point());
}
for(var ic=0;ic<d.cc;ic++){
this.colors.push(new GodStep.Color());
}
for(var p=0;p<d.pc;p++){
this.params.push(0);
}
for(var s=0;s<d.sc;s++){
this.states.push(state=new GodStep.State());
state.pushValues(values,sl);
values.splice(0,sl);
}
}
};
pro.getData=function(){
var d={};
d.name=this.name;
d.passes=[];
d.values=this.getAllValues();
d.sc=this.states.length;
d.cc=this.colors.length;
d.dc=this.points.length;
d.pc=this.params.length;
for(var i=0;i<this.passes.length;i++){
var passData=this.passes[i].getData();
d.passes.push(passData);
}
return d;
};
GodStep.Text=function(t,size,font,align,color){
this.font=font||'Arial';
this.size=size||15;
this.align=(align||"center");
PIXI.Text.call(this,t,{font:this.size+"px "+this.font,align:this.align,fill:(color)?('#'+color.toString(16)):'#000000'});
};
extend(GodStep.Text,PIXI.Text);
pro.place=function(x,y){
this.x=x;
this.y=y;
};
pro.centerX=function(w,y){
this.y=y;
this.x=w/2-this.width/2;
};
pro.setColor=function(color){
this.style.fill='#'+color.toString(16);
};
pro.setFont=function(font){
this.font=font;
this.style.font=this.size+'px '+this.font;
this.updateText();
};
pro.setSize=function(size){
this.size=size;
this.style.font=this.size+'px '+this.font;
this.updateText();
};
Games.Img=function(name,scale,px,py,anchor){
GodStep.Image.call(this,GodStep.textures[name]);
this.name=name;
this.Scale=scale/GodStep.IMAGE_RESOLUTION;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(Games.Img,GodStep.Image);
pro.setTexture=function(name){
PIXI.Sprite.prototype.setTexture.call(this,GodStep.textures[name]);
};
Games.ImgButton=function(img,parent,px,py,text,textSize,tdx,tdy,font){
var tex=GodStep.textures[img];
if(tex==undefined||tex==null)trace('TEXTURE NOT FOUND - '+img);
var startS=this.startS=parent.s*Games.SCALE;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.imgName=img;
this.p=parent;
this.scaleble=true;
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
if(text){
this.addChild(this.label=new GodStep.BitmapText(text,(textSize||100)*startS/Games.SCALE,0,0,'center',font));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.addChild(this.over=new GodStep.Frame('over'));this.over.p=this;
GodStep.IDownUp.call(this.over,this.W,this.H);
this.over.visible=false;
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this.over,GodStep.FRAME_UP,this.h_mouse);
};
extend(Games.ImgButton,GodStep.Frame);
Games.ImgButton.CLICK='clickImg';
pro.rescale=function(s){
if(this.no_scale)return;
if(this.label){
this.label.scale.y=this.label.scale.x=s;
this.label.x=(this.label.HW-(this.label.tdx||0))*this.label.scale.y;
this.label.y=(this.label.HH-(this.label.tdy||0))*this.label.scale.y;
}
this.img.scale.y=this.img.scale.x=s*this.startS;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
this.over.visible=true;
this.over.interactive=true;
this.over.hitArea=new PIXI.Rectangle(-this.p.W*.2,-this.p.W*.2,this.p.W*.4,this.p.W*.4);
this.isClicked=true;
this.isOvered=true;
addEvent(this,GodStep.FRAME_MOVE,this.h_move);
break;
case GodStep.FRAME_UP:
if(this.p.isClicked&&this.p.isOvered){
dispatch(t.parent,Games.ImgButton.CLICK);
}
this.visible=false;
this.p.isOvered=false;
this.p.rescale(1/GodStep.IMAGE_RESOLUTION);
this.p.isDown=false;
delEvent(this.p,GodStep.FRAME_MOVE,this.h_move);
this.p.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.isOvered=false;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
break;
case GodStep.FRAME_OVER:
if(this.isClicked){
this.isOvered=true;
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
}
break;
}
};
pro.h_move=function(e){
var p=e.content.getLocalPosition(this);
this.over.x=p.x;
this.over.y=p.y;
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=
this.scale.y=value;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
}
});
Games.TextButton=function(text,size,color,px,py){
GodStep.Frame.call(this,null,0,0);
this.color=color;
this.addChild(this.back=new PIXI.Graphics());
this.addChild(this.text=new GodStep.Text(text,size*2,'Arial','left',0xffffff));
this.text.x=-this.text.width/2;
this.text.y=-this.text.height/2;
this.W=this.text.width*1.5;
this.H=this.text.height*1.5;
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.isSelected=false;
this.redraw();
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(Games.TextButton,GodStep.Frame);
pro.destroy=function(){
this.removeChild(this.back);
this.removeChild(this.text);
return this;
};
pro.redraw=function(){
var g=this.back;
g.clear();
g.beginFill(this.color,1);
if(this.isSelected){
g.lineStyle(2,0xffffff,1);
}
g.drawRect(-this.W/2,-this.H/2,this.W,this.H);
g.endFill();
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
this.Scale=.9;
this.isClicked=true;
break;
case GodStep.FRAME_UP:
if(this.isClicked){
dispatch(t,Games.ImgButton.CLICK);
}
this.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.Scale=1;
break;
case GodStep.FRAME_OVER:
if(this.isDown){
this.Scale=.9;
}
break;
}
};
Object.defineProperty(pro,'Selected',{
get:function(){
return this.isSelected;
},
set:function(value){
this.isSelected=value;
this.redraw();
}
});
Games.Transmission=function(soul,speed,color){
this.soul=soul;
this.color=color||GodStep.COLOR_STAGE;
GodStep.Frame.call(this,'Transmission',soul.SW,soul.SH);
this.startS=this.soul.startS;
this.create();
this.timerCache=-1;
this.speed=speed||0.1;
this.cacheAsBitmap=true;
this.visible=false;
this.graphics.scale.y=this.graphics.oS=this.soul.SH/this.graphics.height*soul.assets.Scale;
};
extend(Games.Transmission,GodStep.Frame);
pro.create=function(){
this.createGraphics();
this.rect(this.W,this.H,this.color,1,0,0);
};
pro.start=function(screenArr,outScreen){
if(!this.isStarted){
this.screens=screenArr;
this.outScreen=outScreen;
this.isStarted=true;
this.isGoesUp=true;
this.alpha=0;
this.visible=true;
}
};
pro.update=function(){
if(this.timerCache--==0){
this.timerCache=-1;
var vis=this.visible;
var a=this.alpha;
this.cacheAsBitmap=false;
this.visible=true;
this.alpha=1;
this.cacheAsBitmap=true;
this.visible=vis;
this.alpha=a;
}
if(this.isStarted){
if(this.isGoesUp){
this.alpha+=this.speed;
if(this.alpha>1){
this.alpha=1;
this.isGoesUp=false;
if(this.outScreen.isOnlyOneView){
this.outScreen.destrukt();
}
this.outScreen.visible=false;
for(var s in this.screens){
this.screens[s].init();
}
}
}else{
this.alpha-=this.speed;
if(this.alpha<=0){
this.alpha=0;
this.visible=false;
this.isStarted=false;
}
}
}
};
pro.reskin=function(c){
this.cacheAsBitmap=false;
var vis=this.visible;
this.visible=true;
var a=this.alpha;
this.alpha=1;
this.graphics.clear();
this.rect(this.W,this.H,c,1,0,0);
this.cacheAsBitmap=true;
this.visible=vis;
this.alpha=a;
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.cacheAsBitmap=false;
this.timerCache=25;
this.graphics.y=(this.FULLRESIZE)?0:-(this.soul.OH-this.soul.H)*.5/value;
this.graphics.scale.y=this.graphics.oS*this.soul.OH/this.soul.H;
this.graphics.scale.x=this.graphics.oS*(this.soul.FULLRESIZE?(this.soul.OW/this.soul.W):1);
}
});
GodStep.BitmapText=function(text,size,x,y,align,tint,font){
PIXI.BitmapText.call(this,text,{font:parseInt(size)+"px "+(font?font:"Font"),align:align||"left"});
this.x=x;
this.y=y;
if(tint)this.tint=tint;
this.updateText();
};
extend(GodStep.BitmapText,PIXI.BitmapText);
GodStep.FPS=function(soul,color,alpha){
GodStep.Frame.call(this,'FPS',soul.W,soul.H);
this.addChild(this.text=new GodStep.Text('0',55*this.startS,'Arial','left',color||0x000000));
this.startTime=Date.now();
this.addString((soul.CANVAS)?'C':'W');
this.alpha=alpha;
this.soul=soul;
this.prevTime=this.startTime;
this.msMin=Infinity;
this.msMax=0;
this.fpsMin=Infinity;
this.fpsMax=0;
this.frames=0;
this.lastValue=0;
if(alpha==0)visible=false;
};
extend(GodStep.FPS,GodStep.Frame);
pro.addString=function(v){
this.plusString=v;
};
pro.end=function(){
var time=Date.now();
var ms=time-this.startTime;
this.msMin=Math.min(this.msMin,ms);
this.msMax=Math.max(this.msMax,ms);
if(time>this.prevTime+100){
var fps=Math.round((this.frames*1000)/(time-this.prevTime));
this.lastValue+=(fps-this.lastValue)*.3;
this.fpsMin=Math.min(this.fpsMin,this.lastValue);
this.fpsMax=Math.max(this.fpsMax,this.lastValue);
this.text.setText(Math.round(this.lastValue)+" "+this.plusString);
this.prevTime=time;
this.frames=0;
}
this.frames++;
};
pro.begin=function(){
this.startTime=Date.now();
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=1;
this.text.updateText();
this.y=this.soul.H-this.text.height+(this.soul.OH-this.soul.H)+this.soul.H*.015*this.soul.startS;
this.x=this.soul.W*.02*this.soul.startS;
}
});
GodStep.Keyboard=function(soul){
this.soul=soul;
if(!GodStep.Keyboard.instance){
GodStep.Keyboard.instance=this;
PIXI.EventTarget.call(this);
document.addEventListener('keydown',this.h_keydown);
document.addEventListener('keyup',this.h_keyup);
this.keys=[];
GodStep.KEY_CONSOLE=192;
GodStep.KEY_1=49;
GodStep.KEY_2=50;
GodStep.KEY_3=51;
GodStep.KEY_4=52;
GodStep.KEY_SHIFT=16;
GodStep.KEY_CTRL=17;
GodStep.KEY_ALT=18;
GodStep.KEY_F3=114;
GodStep.KEY_W=87;
GodStep.KEY_A=65;
GodStep.KEY_S=83;
GodStep.KEY_D=68;
GodStep.KEY_LEFT=37;
GodStep.KEY_RIGHT=39;
GodStep.KEY_TOP=38;
GodStep.KEY_BOT=40;
}
};
pro=GodStep.Keyboard.prototype=Object.create(Object.prototype);
pro.h_keyup=function(e){
var inst=GodStep.Keyboard.instance;
inst.keys[e.keyCode]=0;
GodStep.dispatch(inst,GodStep.KEYUP,e.keyCode);
};
pro.h_keydown=function(e){
var inst=GodStep.Keyboard.instance;
if(!inst.keys[e.keyCode]){
inst.keys[e.keyCode]=1;
dispatch(inst,GodStep.KEYPRESS,e.keyCode);
}
else{
inst.keys[e.keyCode]++;
GodStep.dispatch(inst,GodStep.KEYDOWN,e.keyCode);
}
};
pro.focus=function(){
trace('canvas focused');
this.soul.soulview.setAttribute('tabindex','0');
this.soul.soulview.focus();
};
GodStep.IsKeyPressed=function(key){
var old=GodStep.Keyboard.instance.keys[key];
if(old==1){
GodStep.Keyboard.instance.keys[key]=2;
}
return old==1;
};
SS.Assets=function(soul){
GodStep.DONT_RESIZE=['Font2'];
GodStep.Preloader.call(this,soul);
this.fontLoaderClass=SS.Font;
};
extend(SS.Assets,GodStep.Preloader);
pro.load=function(){
this.addChild(this.back=GodStep.Image.fromImage(SS.IMAGE_PATH+'back_fundemic1.jpg',this.h_preload));
this.addChild(this.logo=GodStep.Image.fromImage(SS.IMAGE_PATH+'fundemic_logo.png',this.h_preload));
this.addChild(this.loading=GodStep.Image.fromImage(SS.IMAGE_PATH+'loading.png',this.h_preload));
var countLoaded=0;
if(this.back.texture.baseTexture.hasLoaded){
this.back.Scale=this.startS;
this.back.anchor=new PIXI.Point(0.5,0.5);
this.back.place(this.W/2,this.H*.5);
this.back.scale.y=this.soul.OH/this.soul.H*this.startS;
this.back.texture.baseTexture.isLoader=true;
countLoaded++;
}
if(this.logo.texture.baseTexture.hasLoaded){
this.logo.Scale=this.startS;
this.logo.anchor=new PIXI.Point(0.5,0.5);
this.logo.place(this.W/2,this.H*.3);
this.logo.texture.baseTexture.isLoader=true;
countLoaded++;
}
if(this.loading.texture.baseTexture.hasLoaded){
this.loading.Scale=this.startS;
this.loading.anchor=new PIXI.Point(0.5,0.5);
this.loading.place(this.W/2,this.H*.7);
this.loading.texture.baseTexture.isLoader=true;
if(countLoaded==2){
this.init();
}
}
};
pro.init=function(){
var pngs=[
'Font','crest','coin','bigCoin','crystal','fly','help','shop_up_field',
'back_menu','button_more','button_play','button_options','logo','menu_field',
'back','back_up','button_music','button_sound','button_up','button_progress','field','field_up','slider_on','slider_off',
'button_accept','field_shop','icon_1','icon_2','icon_3','icon_4','icon_5','price',
'button_back','button_replay','button_menu','sheriff_1','sheriff_2','accept_off','accept_on','coinShop','add_hammer',
'field_game_over','icon_xp','icon_score','icon_record','button_shop','button_2_on','button_2_off',
'button_pause','2x_coins','2x_score','back_0','back_1','back_3','bank_1','bank_2',
'bubble_1','bubble_2','home_1_1','home_2_1','home_3_1','home_4_1',
'field_ui','icon_1_bubble','icon_2_bubble','icon_3_bubble','icon_4_bubble','icon_5_bubble','icon_coin_game','icon_score_game','line_1','line_2','saloon_1','saloon_2','stone',
'2coin_1','2coin_2','2coin_3','2coin_4','2coin_5','2coin_6',
'2end_icon_1','2end_icon_2','2end_icon_3','2end_icon_4','2end_icon_5','2run_icon_1','2stay_icon_1','2stay_run_icon_2','2stay_run_icon_3','2stay_run_icon_4','2stay_run_icon_5',
'back_arm_2',
'coin_1','coin_2','coin_3','coin_4','coin_5','coin_6','end_1','end_2',
'end_icon_1','end_icon_2','end_icon_3','end_icon_4','end_icon_5','fail_1','fail_2','fail_3','fail_icon_1','fail_icon_2','fail_icon_3','fail_icon_4','fail_icon_5',
'run_1_1','run_1_2',
'start_1','start_2','start_3','start_4','start_5','start_6','start_7','start_8','start_9','stay_2',
'button_1_off','button_1_on',
];
var i,j;
GodStep.Preloader.prototype.loadAll.call(this,
SS.IMAGE_PATH,pngs,[],
SS.SOUND_PATH,['button','balloon','catch','caught','fall','multiply','final','store_buy',((this.soul.AUDIOTAG)?'loop_':'')+'theme','diamond'],['Font']);
};
pro.h_preload=function(e){
var img=this.image;
var p=img.parent;
img.Scale=p.startS;
img.anchor=new PIXI.Point(0.5,0.5);
p.preloadState++;
switch(img){
case p.back:
p.back.scale.y=p.soul.OH/p.soul.H*p.startS;
p.back.place(p.W/2,p.H*.5);
p.back.texture.baseTexture.isLoader=true;
break;
case p.logo:
p.logo.place(p.W/2,p.H*.3);
p.logo.texture.baseTexture.isLoader=true;
break;
case p.loading:
p.loading.place(p.W/2,p.H*.7);
p.loading.texture.baseTexture.isLoader=true;
break;
}
if(p.preloadState==2){
p.init();
}
};
SS.Font=function(){
new SS.BitmapFontLoader();
};
extend(SS.Font,PIXI.AssetLoader);
SS.FontString='<font>'+
'<info face="Font" size="80" />'+
'<common lineHeight="80" scaleW="539" scaleH="547" pages="1" />'+
'<pages>'+
'<page id="0" file="Font.png" />'+
'</pages>'+
'<chars count="190">'+
'<char id="35" x="142" y="367" width="41" height="45" xoffset="0" yoffset="35" xadvance="42" /><!-- # -->'+
'<char id="33" x="510" y="272" width="18" height="45" xoffset="0" yoffset="35" xadvance="19" /><!-- ! -->'+
'<char id="36" x="225" y="313" width="38" height="60" xoffset="0" yoffset="28" xadvance="39" /><!-- $ -->'+
'<char id="37" x="0" y="368" width="48" height="47" xoffset="0" yoffset="34" xadvance="49" /><!-- % -->'+
'<char id="38" x="0" y="416" width="47" height="47" xoffset="0" yoffset="34" xadvance="48" /><!-- & -->'+
'<char id="39" x="409" y="132" width="13" height="13" xoffset="0" yoffset="35" xadvance="14" /><!--  -->'+
'<char id="40" x="498" y="0" width="19" height="65" xoffset="0" yoffset="28" xadvance="20" /><!-- ( -->'+
'<char id="41" x="510" y="160" width="19" height="65" xoffset="0" yoffset="28" xadvance="20" /><!-- ) -->'+
'<char id="42" x="407" y="357" width="22" height="21" xoffset="0" yoffset="35" xadvance="23" /><!-- * -->'+
'<char id="43" x="242" y="93" width="30" height="29" xoffset="0" yoffset="46" xadvance="31" /><!-- + -->'+
'<char id="44" x="395" y="514" width="9" height="19" xoffset="0" yoffset="70" xadvance="10" /><!-- , -->'+
'<char id="45" x="340" y="359" width="19" height="10" xoffset="0" yoffset="56" xadvance="20" /><!-- - -->'+
'<char id="46" x="514" y="447" width="9" height="10" xoffset="0" yoffset="70" xadvance="10" /><!-- . -->'+
'<char id="47" x="435" y="190" width="28" height="58" xoffset="0" yoffset="31" xadvance="29" /><!-- / -->'+
'<char id="48" x="141" y="414" width="42" height="47" xoffset="0" yoffset="34" xadvance="43" /><!-- 0 -->'+
'<char id="49" x="405" y="455" width="30" height="45" xoffset="0" yoffset="35" xadvance="31" /><!-- 1 -->'+
'<char id="50" x="281" y="0" width="37" height="46" xoffset="0" yoffset="34" xadvance="38" /><!-- 2 -->'+
'<char id="51" x="339" y="372" width="35" height="47" xoffset="0" yoffset="34" xadvance="36" /><!-- 3 -->'+
'<char id="52" x="184" y="420" width="39" height="45" xoffset="0" yoffset="35" xadvance="40" /><!-- 4 -->'+
'<char id="53" x="264" y="371" width="37" height="47" xoffset="0" yoffset="35" xadvance="38" /><!-- 5 -->'+
'<char id="54" x="184" y="466" width="39" height="47" xoffset="0" yoffset="34" xadvance="40" /><!-- 6 -->'+
'<char id="55" x="242" y="0" width="38" height="45" xoffset="0" yoffset="35" xadvance="39" /><!-- 7 -->'+
'<char id="56" x="147" y="270" width="41" height="47" xoffset="0" yoffset="34" xadvance="42" /><!-- 8 -->'+
'<char id="57" x="161" y="90" width="40" height="47" xoffset="0" yoffset="34" xadvance="41" /><!-- 9 -->'+
'<char id="58" x="528" y="0" width="9" height="29" xoffset="0" yoffset="51" xadvance="10" /><!-- : -->'+
'<char id="59" x="518" y="0" width="9" height="38" xoffset="0" yoffset="51" xadvance="10" /><!-- ; -->'+
'<char id="60" x="464" y="291" width="25" height="29" xoffset="0" yoffset="47" xadvance="26" /><!-- < -->'+
'<char id="61" x="408" y="190" width="25" height="25" xoffset="0" yoffset="48" xadvance="26" /><!-- = -->'+
'<char id="62" x="464" y="188" width="25" height="29" xoffset="0" yoffset="47" xadvance="26" /><!-- > -->'+
'<char id="63" x="302" y="372" width="36" height="46" xoffset="0" yoffset="34" xadvance="37" /><!-- ? -->'+
'<char id="89" x="116" y="46" width="44" height="45" xoffset="0" yoffset="35" xadvance="45" /><!-- Y -->'+
'<char id="64" x="0" y="92" width="63" height="60" xoffset="0" yoffset="34" xadvance="64" /><!-- @ -->'+
'<char id="65" x="48" y="458" width="46" height="45" xoffset="0" yoffset="35" xadvance="47" /><!-- A -->'+
'<char id="66" x="74" y="0" width="45" height="45" xoffset="0" yoffset="35" xadvance="46" /><!-- B -->'+
'<char id="67" x="161" y="42" width="40" height="47" xoffset="0" yoffset="34" xadvance="41" /><!-- C -->'+
'<char id="68" x="49" y="368" width="46" height="45" xoffset="0" yoffset="35" xadvance="47" /><!-- D -->'+
'<char id="69" x="153" y="138" width="40" height="45" xoffset="0" yoffset="35" xadvance="41" /><!-- E -->'+
'<char id="70" x="302" y="466" width="36" height="45" xoffset="0" yoffset="35" xadvance="37" /><!-- F -->'+
'<char id="71" x="101" y="272" width="45" height="47" xoffset="0" yoffset="34" xadvance="46" /><!-- G -->'+
'<char id="72" x="0" y="322" width="49" height="45" xoffset="0" yoffset="35" xadvance="50" /><!-- H -->'+
'<char id="73" x="489" y="352" width="24" height="45" xoffset="0" yoffset="35" xadvance="25" /><!-- I -->'+
'<char id="74" x="380" y="42" width="31" height="46" xoffset="0" yoffset="35" xadvance="32" /><!-- J -->'+
'<char id="75" x="0" y="464" width="47" height="45" xoffset="0" yoffset="35" xadvance="48" /><!-- K -->'+
'<char id="76" x="264" y="325" width="37" height="45" xoffset="0" yoffset="35" xadvance="38" /><!-- L -->'+
'<char id="77" x="0" y="46" width="68" height="45" xoffset="0" yoffset="35" xadvance="69" /><!-- M -->'+
'<char id="78" x="0" y="220" width="54" height="45" xoffset="0" yoffset="35" xadvance="55" /><!-- N -->'+
'<char id="79" x="55" y="272" width="45" height="47" xoffset="0" yoffset="34" xadvance="46" /><!-- O -->'+
'<char id="80" x="141" y="462" width="42" height="45" xoffset="0" yoffset="35" xadvance="43" /><!-- P -->'+
'<char id="81" x="55" y="220" width="46" height="51" xoffset="0" yoffset="34" xadvance="47" /><!-- Q -->'+
'<char id="82" x="50" y="322" width="46" height="45" xoffset="0" yoffset="35" xadvance="47" /><!-- R -->'+
'<char id="83" x="234" y="133" width="38" height="47" xoffset="0" yoffset="34" xadvance="39" /><!-- S -->'+
'<char id="84" x="111" y="92" width="44" height="45" xoffset="0" yoffset="35" xadvance="45" /><!-- T -->'+
'<char id="85" x="97" y="320" width="45" height="46" xoffset="0" yoffset="35" xadvance="46" /><!-- U -->'+
'<char id="86" x="96" y="368" width="45" height="45" xoffset="0" yoffset="35" xadvance="46" /><!-- V -->'+
'<char id="87" x="0" y="0" width="73" height="45" xoffset="0" yoffset="35" xadvance="74" /><!-- W -->'+
'<char id="88" x="69" y="46" width="46" height="45" xoffset="0" yoffset="35" xadvance="47" /><!-- X -->'+
'<char id="90" x="184" y="374" width="39" height="45" xoffset="0" yoffset="35" xadvance="40" /><!-- Z -->'+
'<char id="91" x="512" y="66" width="17" height="69" xoffset="0" yoffset="28" xadvance="18" /><!-- [ -->'+
'<char id="92" x="412" y="42" width="28" height="58" xoffset="0" yoffset="31" xadvance="29" /><!-- \ -->'+
'<char id="93" x="513" y="458" width="17" height="69" xoffset="0" yoffset="28" xadvance="18" /><!-- ] -->'+
'<char id="94" x="374" y="455" width="24" height="15" xoffset="0" yoffset="35" xadvance="25" /><!-- ^ -->'+
'<char id="34" x="436" y="483" width="20" height="14" xoffset="0" yoffset="34" xadvance="21" /><!-- " -->'+
'<char id="95" x="57" y="213" width="35" height="6" xoffset="0" yoffset="84" xadvance="36" /><!-- _ -->'+
'<char id="96" x="311" y="131" width="20" height="10" xoffset="0" yoffset="35" xadvance="21" /><!-- ` -->'+
'<char id="97" x="203" y="0" width="38" height="34" xoffset="0" yoffset="47" xadvance="39" /><!-- a -->'+
'<char id="98" x="268" y="181" width="37" height="46" xoffset="0" yoffset="35" xadvance="38" /><!-- b -->'+
'<char id="99" x="374" y="262" width="31" height="34" xoffset="0" yoffset="47" xadvance="32" /><!-- c -->'+
'<char id="100" x="229" y="231" width="38" height="46" xoffset="0" yoffset="35" xadvance="39" /><!-- d -->'+
'<char id="101" x="229" y="278" width="33" height="34" xoffset="0" yoffset="47" xadvance="34" /><!-- e -->'+
'<char id="102" x="437" y="101" width="26" height="46" xoffset="0" yoffset="34" xadvance="27" /><!-- f -->'+
'<char id="103" x="224" y="466" width="38" height="47" xoffset="0" yoffset="47" xadvance="39" /><!-- g -->'+
'<char id="104" x="194" y="138" width="39" height="45" xoffset="0" yoffset="35" xadvance="40" /><!-- h -->'+
'<char id="105" x="490" y="191" width="19" height="45" xoffset="0" yoffset="35" xadvance="20" /><!-- i -->'+
'<char id="106" x="489" y="398" width="24" height="59" xoffset="0" yoffset="35" xadvance="25" /><!-- j -->'+
'<char id="107" x="224" y="420" width="38" height="45" xoffset="0" yoffset="35" xadvance="39" /><!-- k -->'+
'<char id="108" x="490" y="279" width="19" height="45" xoffset="0" yoffset="35" xadvance="20" /><!-- l -->'+
'<char id="109" x="0" y="153" width="59" height="33" xoffset="0" yoffset="47" xadvance="60" /><!-- m -->'+
'<char id="110" x="141" y="508" width="39" height="33" xoffset="0" yoffset="47" xadvance="40" /><!-- n -->'+
'<char id="111" x="294" y="512" width="36" height="34" xoffset="0" yoffset="47" xadvance="37" /><!-- o -->'+
'<char id="112" x="302" y="325" width="37" height="46" xoffset="0" yoffset="47" xadvance="38" /><!-- p -->'+
'<char id="113" x="229" y="184" width="38" height="46" xoffset="0" yoffset="47" xadvance="39" /><!-- q -->'+
'<char id="114" x="347" y="97" width="29" height="33" xoffset="0" yoffset="47" xadvance="30" /><!-- r -->'+
'<char id="115" x="374" y="420" width="31" height="34" xoffset="0" yoffset="47" xadvance="32" /><!-- s -->'+
'<char id="116" x="446" y="0" width="26" height="40" xoffset="0" yoffset="41" xadvance="27" /><!-- t -->'+
'<char id="117" x="189" y="184" width="39" height="33" xoffset="0" yoffset="48" xadvance="40" /><!-- u -->'+
'<char id="118" x="181" y="514" width="37" height="32" xoffset="0" yoffset="48" xadvance="38" /><!-- v -->'+
'<char id="119" x="0" y="187" width="56" height="32" xoffset="0" yoffset="47" xadvance="57" /><!-- w -->'+
'<char id="120" x="257" y="514" width="36" height="32" xoffset="0" yoffset="47" xadvance="37" /><!-- x -->'+
'<char id="121" x="306" y="192" width="36" height="46" xoffset="0" yoffset="47" xadvance="37" /><!-- y -->'+
'<char id="122" x="273" y="145" width="32" height="32" xoffset="0" yoffset="47" xadvance="33" /><!-- z -->'+
'<char id="123" x="514" y="318" width="15" height="64" xoffset="0" yoffset="29" xadvance="16" /><!-- { -->'+
'<char id="124" x="530" y="276" width="8" height="74" xoffset="0" yoffset="24" xadvance="9" /><!-- | -->'+
'<char id="125" x="514" y="383" width="15" height="63" xoffset="0" yoffset="30" xadvance="16" /><!-- } -->'+
'<char id="323" x="0" y="266" width="54" height="55" xoffset="0" yoffset="24" xadvance="55" /><!-- Åƒ -->'+
'<char id="199" x="148" y="205" width="40" height="61" xoffset="0" yoffset="33" xadvance="41" /><!-- Ã‡ -->'+
'<char id="213" x="107" y="144" width="45" height="60" xoffset="0" yoffset="20" xadvance="46" /><!-- Ã• -->'+
'<char id="211" x="102" y="213" width="45" height="56" xoffset="0" yoffset="24" xadvance="46" /><!-- Ã“ -->'+
'<char id="231" x="377" y="97" width="31" height="48" xoffset="0" yoffset="46" xadvance="32" /><!-- Ã§ -->'+
'<char id="237" x="490" y="72" width="21" height="45" xoffset="0" yoffset="34" xadvance="22" /><!-- Ã­ -->'+
'<char id="227" x="263" y="462" width="38" height="47" xoffset="0" yoffset="33" xadvance="39" /><!-- Ã£ -->'+
'<char id="243" x="306" y="145" width="36" height="46" xoffset="0" yoffset="34" xadvance="37" /><!-- Ã³ -->'+
'<char id="234" x="343" y="131" width="33" height="46" xoffset="0" yoffset="34" xadvance="34" /><!-- Ãª -->'+
'<char id="233" x="340" y="270" width="33" height="46" xoffset="0" yoffset="34" xadvance="34" /><!-- Ã© -->'+
'<char id="228" x="264" y="278" width="38" height="46" xoffset="0" yoffset="34" xadvance="39" /><!-- Ã¤ -->'+
'<char id="223" x="189" y="218" width="39" height="47" xoffset="0" yoffset="33" xadvance="40" /><!-- ÃŸ -->'+
'<char id="246" x="303" y="270" width="36" height="46" xoffset="0" yoffset="34" xadvance="37" /><!-- Ã¶ -->'+
'<char id="252" x="189" y="266" width="39" height="46" xoffset="0" yoffset="34" xadvance="40" /><!-- Ã¼ -->'+
'<char id="241" x="202" y="86" width="39" height="46" xoffset="0" yoffset="33" xadvance="40" /><!-- Ã± -->'+
'<char id="161" x="510" y="226" width="18" height="45" xoffset="0" yoffset="39" xadvance="19" /><!-- Â¡ -->'+
'<char id="191" x="302" y="419" width="36" height="46" xoffset="0" yoffset="38" xadvance="37" /><!-- Â¿ -->'+
'<char id="200" x="184" y="318" width="40" height="55" xoffset="0" yoffset="24" xadvance="41" /><!-- Ãˆ -->'+
'<char id="195" x="60" y="153" width="46" height="59" xoffset="0" yoffset="20" xadvance="47" /><!-- Ãƒ -->'+
'<char id="350" x="406" y="379" width="29" height="61" xoffset="0" yoffset="33" xadvance="30" /><!-- Åž -->'+
'<char id="220" x="95" y="458" width="45" height="56" xoffset="0" yoffset="24" xadvance="46" /><!-- Ãœ -->'+
'<char id="351" x="490" y="118" width="21" height="41" xoffset="0" yoffset="50" xadvance="22" /><!-- ÅŸ -->'+
'<char id="287" x="406" y="262" width="28" height="52" xoffset="0" yoffset="39" xadvance="29" /><!-- ÄŸ -->'+
'<char id="280" x="464" y="73" width="25" height="52" xoffset="0" yoffset="39" xadvance="26" /><!-- Ä˜ -->'+
'<char id="281" x="436" y="337" width="27" height="41" xoffset="0" yoffset="50" xadvance="28" /><!-- Ä™ -->'+
'<char id="261" x="436" y="295" width="27" height="41" xoffset="0" yoffset="50" xadvance="28" /><!-- Ä… -->'+
'<char id="321" x="224" y="374" width="39" height="45" xoffset="0" yoffset="34" xadvance="40" /><!-- Å -->'+
'<char id="322" x="435" y="249" width="27" height="45" xoffset="0" yoffset="34" xadvance="28" /><!-- Å‚ -->'+
'<char id="324" x="202" y="40" width="39" height="45" xoffset="0" yoffset="34" xadvance="40" /><!-- Å„ -->'+
'<char id="126" x="153" y="184" width="33" height="12" xoffset="0" yoffset="54" xadvance="34" /><!-- ~ -->'+
'<char id="347" x="490" y="237" width="19" height="41" xoffset="0" yoffset="38" xadvance="20" /><!-- Å› -->'+
'<char id="1072" x="463" y="452" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- Ð° -->'+
'<char id="1073" x="408" y="146" width="28" height="43" xoffset="0" yoffset="37" xadvance="29" /><!-- Ð± -->'+
'<char id="1074" x="464" y="321" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- Ð² -->'+
'<char id="1075" x="490" y="160" width="19" height="30" xoffset="0" yoffset="50" xadvance="20" /><!-- Ð³ -->'+
'<char id="1076" x="374" y="297" width="31" height="39" xoffset="0" yoffset="50" xadvance="32" /><!-- Ð´ -->'+
'<char id="1077" x="409" y="101" width="27" height="30" xoffset="0" yoffset="50" xadvance="28" /><!-- Ðµ -->'+
'<char id="1078" x="0" y="510" width="40" height="30" xoffset="0" yoffset="50" xadvance="41" /><!-- Ð¶ -->'+
'<char id="1079" x="468" y="41" width="24" height="30" xoffset="0" yoffset="50" xadvance="25" /><!-- Ð· -->'+
'<char id="1080" x="441" y="42" width="26" height="30" xoffset="0" yoffset="50" xadvance="27" /><!-- Ð¸ -->'+
'<char id="1082" x="464" y="126" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- Ðº -->'+
'<char id="1083" x="377" y="146" width="27" height="30" xoffset="0" yoffset="50" xadvance="28" /><!-- Ð» -->'+
'<char id="1084" x="306" y="239" width="35" height="30" xoffset="0" yoffset="50" xadvance="36" /><!-- Ð¼ -->'+
'<char id="1085" x="436" y="452" width="26" height="30" xoffset="0" yoffset="50" xadvance="27" /><!-- Ð½ -->'+
'<char id="1086" x="364" y="514" width="30" height="30" xoffset="0" yoffset="50" xadvance="31" /><!-- Ð¾ -->'+
'<char id="1087" x="463" y="514" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- Ð¿ -->'+
'<char id="1088" x="387" y="0" width="30" height="41" xoffset="0" yoffset="50" xadvance="31" /><!-- Ñ€ -->'+
'<char id="1089" x="464" y="352" width="24" height="30" xoffset="0" yoffset="50" xadvance="25" /><!-- Ñ -->'+
'<char id="1090" x="464" y="157" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- Ñ‚ -->'+
'<char id="1091" x="405" y="501" width="29" height="42" xoffset="0" yoffset="50" xadvance="30" /><!-- Ñƒ -->'+
'<char id="1092" x="319" y="0" width="35" height="54" xoffset="0" yoffset="37" xadvance="36" /><!-- Ñ„ -->'+
'<char id="1093" x="318" y="55" width="28" height="30" xoffset="0" yoffset="50" xadvance="29" /><!-- Ñ… -->'+
'<char id="1094" x="375" y="379" width="28" height="39" xoffset="0" yoffset="50" xadvance="29" /><!-- Ñ† -->'+
'<char id="1095" x="473" y="0" width="24" height="30" xoffset="0" yoffset="50" xadvance="25" /><!-- Ñ‡ -->'+
'<char id="1096" x="95" y="515" width="37" height="30" xoffset="0" yoffset="50" xadvance="38" /><!-- Ñˆ -->'+
'<char id="1097" x="163" y="0" width="39" height="39" xoffset="0" yoffset="50" xadvance="40" /><!-- Ñ‰ -->'+
'<char id="1100" x="463" y="483" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- ÑŒ -->'+
'<char id="1099" x="331" y="514" width="32" height="30" xoffset="0" yoffset="50" xadvance="33" /><!-- Ñ‹ -->'+
'<char id="1101" x="464" y="218" width="25" height="30" xoffset="0" yoffset="50" xadvance="26" /><!-- Ñ -->'+
'<char id="1102" x="219" y="514" width="37" height="30" xoffset="0" yoffset="50" xadvance="38" /><!-- ÑŽ -->'+
'<char id="1103" x="436" y="379" width="27" height="30" xoffset="0" yoffset="50" xadvance="28" /><!-- Ñ -->'+
'<char id="1052" x="120" y="0" width="42" height="41" xoffset="0" yoffset="39" xadvance="43" /><!-- Ðœ -->'+
'<char id="1040" x="311" y="89" width="35" height="41" xoffset="0" yoffset="39" xadvance="36" /><!-- Ð -->'+
'<char id="1043" x="489" y="458" width="23" height="41" xoffset="0" yoffset="39" xadvance="24" /><!-- Ð“ -->'+
'<char id="1047" x="437" y="148" width="26" height="41" xoffset="0" yoffset="39" xadvance="27" /><!-- Ð— -->'+
'<char id="1048" x="347" y="55" width="32" height="41" xoffset="0" yoffset="39" xadvance="33" /><!-- Ð˜ -->'+
'<char id="1053" x="375" y="337" width="31" height="41" xoffset="0" yoffset="39" xadvance="32" /><!-- Ð -->'+
'<char id="1051" x="339" y="472" width="33" height="41" xoffset="0" yoffset="39" xadvance="34" /><!-- Ð› -->'+
'<char id="1062" x="339" y="420" width="34" height="51" xoffset="0" yoffset="39" xadvance="35" /><!-- Ð¦ -->'+
'<char id="1059" x="343" y="220" width="32" height="41" xoffset="0" yoffset="39" xadvance="33" /><!-- Ð£ -->'+
'<char id="1050" x="376" y="220" width="29" height="41" xoffset="0" yoffset="39" xadvance="30" /><!-- Ðš -->'+
'<char id="1041" x="436" y="410" width="27" height="41" xoffset="0" yoffset="39" xadvance="28" /><!-- Ð‘ -->'+
'<char id="1061" x="340" y="317" width="33" height="41" xoffset="0" yoffset="39" xadvance="34" /><!-- Ð¥ -->'+
'<char id="1063" x="406" y="220" width="28" height="41" xoffset="0" yoffset="39" xadvance="29" /><!-- Ð§ -->'+
'<char id="1044" x="273" y="93" width="37" height="51" xoffset="0" yoffset="39" xadvance="38" /><!-- Ð” -->'+
'<char id="1042" x="435" y="501" width="27" height="41" xoffset="0" yoffset="39" xadvance="28" /><!-- Ð’ -->'+
'<char id="1055" x="376" y="178" width="31" height="41" xoffset="0" yoffset="39" xadvance="32" /><!-- ÐŸ -->'+
'<char id="1057" x="343" y="178" width="32" height="41" xoffset="0" yoffset="39" xadvance="33" /><!-- Ð¡ -->'+
'<char id="1056" x="463" y="249" width="26" height="41" xoffset="0" yoffset="39" xadvance="27" /><!-- Ð  -->'+
'<char id="1058" x="355" y="0" width="31" height="41" xoffset="0" yoffset="39" xadvance="32" /><!-- Ð¢ -->'+
'<char id="1054" x="263" y="420" width="38" height="41" xoffset="0" yoffset="39" xadvance="39" /><!-- Ðž -->'+
'<char id="304" x="529" y="226" width="8" height="49" xoffset="0" yoffset="31" xadvance="9" /><!-- Ä° -->'+
'<char id="1068" x="418" y="0" width="27" height="41" xoffset="0" yoffset="39" xadvance="28" /><!-- Ð¬ -->'+
'<char id="1046" x="48" y="416" width="47" height="41" xoffset="0" yoffset="39" xadvance="48" /><!-- Ð– -->'+
'<char id="1045" x="464" y="383" width="24" height="41" xoffset="0" yoffset="39" xadvance="25" /><!-- Ð• -->'+
'<char id="224" x="242" y="46" width="38" height="46" xoffset="0" yoffset="34" xadvance="39" /><!-- Ã  -->'+
'<char id="236" x="489" y="500" width="23" height="45" xoffset="0" yoffset="34" xadvance="24" /><!-- Ã¬ -->'+
'<char id="1060" x="143" y="320" width="40" height="43" xoffset="0" yoffset="38" xadvance="41" /><!-- Ð¤ -->'+
'<char id="1064" x="96" y="414" width="43" height="41" xoffset="0" yoffset="39" xadvance="44" /><!-- Ð¨ -->'+
'<char id="1065" x="64" y="92" width="46" height="51" xoffset="0" yoffset="39" xadvance="47" /><!-- Ð© -->'+
'<char id="1066" x="281" y="47" width="36" height="41" xoffset="0" yoffset="39" xadvance="37" /><!-- Ðª -->'+
'<char id="1067" x="268" y="228" width="37" height="41" xoffset="0" yoffset="39" xadvance="38" /><!-- Ð« -->'+
'<char id="1069" x="373" y="472" width="31" height="41" xoffset="0" yoffset="39" xadvance="32" /><!-- Ð­ -->'+
'<char id="1070" x="48" y="504" width="46" height="41" xoffset="0" yoffset="39" xadvance="47" /><!-- Ð® -->'+
'<char id="1071" x="407" y="315" width="28" height="41" xoffset="0" yoffset="39" xadvance="29" /><!-- Ð¯ -->'+
'<char id="32" x="0" y="0" width="0" height="0" xoffset="0" yoffset="0" xadvance="20" /><!--   -->'+
'<char id="9" x="0" y="0" width="0" height="0" xoffset="0" yoffset="0" xadvance="160" /><!--   -->'+
'</chars>'+
'<kernings count="0">'+
'</kernings>'+
'</font>';
SS.BitmapFontLoader=function(){
var xmlDoc;
if(window.DOMParser){
var parser=new DOMParser();
xmlDoc=parser.parseFromString(SS.FontString,"text/xml");
}
else{
xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
xmlDoc.async=false;
xmlDoc.loadXML(SS.FontString);
}
var responseXML=xmlDoc;
var textureUrl=this.baseUrl+responseXML.getElementsByTagName('page')[0].getAttribute('file');
this.texture=GodStep.textures['Font'].baseTexture;
var data={};
var info=responseXML.getElementsByTagName('info')[0];
var common=responseXML.getElementsByTagName('common')[0];
data.font=info.getAttribute('face');
data.size=parseInt(info.getAttribute('size'),10);
data.lineHeight=parseInt(common.getAttribute('lineHeight'),10);
data.chars={};
var letters=responseXML.getElementsByTagName('char');
for(var i=0;i<letters.length;i++)
{
var charCode=parseInt(letters[i].getAttribute('id'),10);
var textureRect=new PIXI.Rectangle(
parseInt(letters[i].getAttribute('x'),10),
parseInt(letters[i].getAttribute('y'),10),
parseInt(letters[i].getAttribute('width'),10),
parseInt(letters[i].getAttribute('height'),10)
);
data.chars[charCode]={
xOffset:parseInt(letters[i].getAttribute('xoffset'),10),
yOffset:parseInt(letters[i].getAttribute('yoffset'),10)+20,
xAdvance:parseInt(letters[i].getAttribute('xadvance'),10),
kerning:{},
texture:PIXI.TextureCache[charCode]=new PIXI.Texture(this.texture,textureRect)
};
}
var kernings=responseXML.getElementsByTagName('kerning');
for(i=0;i<kernings.length;i++)
{
var first=parseInt(kernings[i].getAttribute('first'),10);
var second=parseInt(kernings[i].getAttribute('second'),10);
var amount=parseInt(kernings[i].getAttribute('amount'),10);
data.chars[second].kerning[first]=amount;
}
PIXI.BitmapText.fonts[data.font]=data;
};
extend(SS.BitmapFontLoader,PIXI.BitmapFontLoader);
SS.Text=function(text,size,x,y,align,tint){
PIXI.BitmapText.call(this,text,{font:parseInt(size)+"px Font",align:align||"left"});
this.x=x;
this.y=y;
if(tint)this.tint=tint;
this.updateText();
};
extend(SS.Text,PIXI.BitmapText);
SS.Img=function(name,scale,px,py,anchor){
GodStep.Image.call(this,GodStep.textures[name]);
this.name=name;
this.Scale=scale/GodStep.IMAGE_RESOLUTION;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(SS.Img,GodStep.Image);
pro.setTexture=function(name){
PIXI.Sprite.prototype.setTexture.call(this,GodStep.textures[name]);
};
SS.ImgButton=function(img,parent,px,py,text,textSize,tdx,tdy){
var tex=GodStep.textures[img];
if(tex==undefined||tex==null)trace('TEXTURE NOT FOUND - '+img);
var startS=this.startS=parent.s*SS.SCALE;
GodStep.Frame.call(this,null,tex.width*startS/GodStep.IMAGE_RESOLUTION,tex.height*startS/GodStep.IMAGE_RESOLUTION);
GodStep.IOverOut.call(this,this.W,this.H);
GodStep.IDownUp.call(this,this.W,this.H);
this.p=parent;
this.scaleble=true;
this.addChild(this.img=new GodStep.Image(tex));this.img.Scale=startS/GodStep.IMAGE_RESOLUTION;
if(text){
this.addChild(this.label=new SS.Text(text,(textSize||100)*startS/SS.SCALE,0,0,'center'));
this.label.x-=this.label.width/2+(tdx||0);
this.label.y-=this.label.height/2+(tdy||0);
this.label.tdx=tdx||0;
this.label.tdy=tdy||0;
this.label.HW=-this.label.width/2;
this.label.HH=-this.label.height/2;
}
this.img.anchor=new PIXI.Point(0.5,0.5);
this.setHitArea(-this.W/2,-this.H/2,this.W,this.H);
this.addChild(this.over=new GodStep.Frame('over'));this.over.p=this;
GodStep.IDownUp.call(this.over,this.W,this.H);
this.place(px,py);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_OUT,this.h_mouse);
addEvent(this,GodStep.FRAME_OVER,this.h_mouse);
addEvent(this.over,GodStep.FRAME_UP,this.h_mouse);
};
extend(SS.ImgButton,GodStep.Frame);
SS.ImgButton.CLICK='clickImg';
pro.rescale=function(s){
if(this.no_scale)return;
if(this.label){
this.label.scale.y=this.label.scale.x=s;
this.label.x=(this.label.HW-(this.label.tdx||0))*this.label.scale.y;
this.label.y=(this.label.HH-(this.label.tdy||0))*this.label.scale.y;
}
this.img.scale.y=this.img.scale.x=s*this.startS;
};
pro.h_mouse=function(e){
var t=e.content.t;
switch(e.type){
case GodStep.FRAME_DOWN:
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
this.over.visible=true;
this.over.interactive=true;
this.over.hitArea=new PIXI.Rectangle(-this.p.W*.2,-this.p.W*.2,this.p.W*.4,this.p.W*.4);
this.isClicked=true;
this.isOvered=true;
addEvent(this,GodStep.FRAME_MOVE,this.h_move);
break;
case GodStep.FRAME_UP:
if(this.p.isClicked&&this.p.isOvered){
dispatch(t.parent,SS.ImgButton.CLICK);
}
this.visible=false;
this.p.isOvered=false;
this.p.rescale(1/GodStep.IMAGE_RESOLUTION);
this.p.isDown=false;
delEvent(this.p,GodStep.FRAME_MOVE,this.h_move);
this.p.isClicked=false;
break;
case GodStep.FRAME_OUT:
this.isOvered=false;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
break;
case GodStep.FRAME_OVER:
if(this.isClicked){
this.isOvered=true;
if(this.scaleble){
this.rescale(1.1/GodStep.IMAGE_RESOLUTION);
}
}
break;
}
};
pro.h_move=function(e){
var p=e.content.getLocalPosition(this);
this.over.x=p.x;
this.over.y=p.y;
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=
this.scale.y=value;
this.rescale(1/GodStep.IMAGE_RESOLUTION);
}
});
SS.Pattern=function(cells,isCut){
if(isCut){
this.cells=[];
var isFirst=false;
var lastEmptyLine=0;
var lastEmptyLine=0;
for(var i=0;i<cells.length;i+=2){
if(cells[i]==0&&cells[i+1]==0&&!isFirst){
}else{
if(!isFirst){
isFirst=true;
this.cells.push(cells[i]);
this.cells.push(cells[i+1]);
}else{
if(cells[i]==0&&cells[i+1]==0){
if(lastEmptyLine==null){
lastEmptyLine=this.cells.length;
}
}else{
lastEmptyLine=null;
}
this.cells.push(cells[i]);
this.cells.push(cells[i+1]);
}
}
}
if(lastEmptyLine!=null){
this.cells.splice(lastEmptyLine,cells.length-lastEmptyLine);
}
}else{
this.cells=cells||SS.PatternView.EMPTY.cells.slice(0);
}
};
extend(SS.Pattern,Object);
GodStep.Slider=function(w,h,s,type,min,max,val,n){
GodStep.Frame.call(this,'Slider');
GodStep.IOverOut.call(this);
GodStep.IDownUp.call(this);
this.CW=20;
this.min=min||0;
this.max=max||1;
this.delta=this.max-this.min;
this.W=w;
this.H=h*s;
this.type=type;
this.isFloat=(type>0&&type<1);
this.back=this.createGraphics('back');
this.cursor=this.createGraphics('cursor');
this.label=this.addFrame(new GodStep.Text(n||'',h*s,'Arial','left',0x0));
this.valueText=this.addFrame(new GodStep.Text(val||'',h*s,'Arial','left',0x0));
this.valueText.y=this.label.y=-this.H;
GodStep.IDownUp.call(this.cursor);
GodStep.addEvent(this,GodStep.FRAME_OUT,this.h_back);
GodStep.addEvent(this,GodStep.FRAME_OVER,this.h_back);
GodStep.addEvent(this,GodStep.FRAME_UP,this.h_cursor);
GodStep.addEvent(this,GodStep.FRAME_MOVE,this.h_move);
GodStep.addEvent(this.cursor,GodStep.FRAME_DOWN,this.h_cursor);
this.setHitArea(0,0,this.W,this.H);
this.setHitArea(0,0,this.CW,this.H,this.cursor);
this.redrawBack();
this.redraw();
this.Value=val;
};
extend(GodStep.Slider,GodStep.Frame);
pro.redrawBack=function(){
if(!this.cursor.IsDown){
this.back.clear();
this.rect(this.W,this.H,(this.IsOver)?0xff4444:0xffaaaa,.8,0,0,this.back);
}
};
pro.redraw=function(){
this.cursor.clear();
this.rect(this.CW,this.H,(this.cursor.IsDown)?0x00ff00:0xffffff,.8,0,0,this.cursor);
};
pro.h_back=function(e){
e.target.redrawBack();
};
pro.h_move=function(e){
var t=e.content.t;
var power;
var dv;
if(e.content.getLocalPosition){
var point=e.content.getLocalPosition(t);
if(t.cursor.IsDown){
power=1;
t.cursor.position.x=Math.max(0,Math.min(point.x-t.cursor.downPoint.x,t.W-t.CW));
dv=(t.cursor.position.x/(t.W-t.CW))*(t.delta)+t.min-t.lastValue;
t.value=t.lastValue+dv*power;
GodStep.dispatch(t,GodStep.FRAME_CHANGED);
if(t.type=='int'){
t.value=parseInt(t.value);
}else{
if(t.isFloat){
t.value=parseInt(t.value/t.type)*t.type;
}else{
t.value=parseInt(t.value/t.type)*t.type;
}
}
t.valueText.setText(t.value);
t.valueText.updateText();
t.valueText.x=t.W-t.valueText.width;
t.updateCursor();
}
}
};
pro.h_cursor=function(e){
if(e.content.t instanceof GodStep.Slider){
e.content.t.cursor.IsDown=false;
e.content.t.redraw();
e.content.t.lastValue=e.content.t.value;
}else{
e.content.t.parent.redraw();
e.content.t.lastValue=e.content.t.value;
}
};
pro.updateCursor=function(){
this.cursor.x=((this.value-this.min)/(this.delta))*(this.W-this.CW);
};
Object.defineProperty(GodStep.Slider.prototype,'IsDown',{
set:function(value){
this.cursor.IsDown=false;
this.redraw();
this.redrawBack();
}
});
Object.defineProperty(GodStep.Slider.prototype,'Value',{
get:function(){
return this.value;
},
set:function(value){
this.value=value;
if(this.type=='int'){
this.value=parseInt(this.value);
}else{
if(this.isFloat){
this.value=parseInt(this.value/this.type)*this.type;
}else{
this.value=parseInt(this.value/this.type)*this.type;
}
}
this.lastValue=this.value;
this.valueText.setText(this.value);
this.valueText.updateText();
this.valueText.x=this.W-this.valueText.width;
this.updateCursor();
}
});
SS.Cell=function(w,h){
GodStep.Frame.call(this,'Cell',w,h);
GodStep.IDownUp.call(this,w,h);
var g=this.g=this.createGraphics();
g.beginFill(0xffffff,1);
g.lineStyle(2,0x00aa00,1);
g.drawRect(0,0,w,h);
g.endFill();
this.t=0;
this.isEnabled=false;
this.redraw();
};
extend(SS.Cell,GodStep.Frame);
pro.redraw=function(){
var g=this.g;
g.clear();
g.beginFill(this.isEnabled?0xffffff:0x888888,1);
g.lineStyle(2,0x00aa00,1);
g.drawRect(0,0,this.W,this.H);
g.endFill();
};
pro.setCell=function(instrument){
var s=this.parent.s;
if(this.img){
this.removeChild(this.img);
}
if(instrument=='coin'){
this.t=2;
this.addChild(this.img=new Games.Img('coin',s,this.W*.5,this.H*.5,.5));
this.isEnabled=true;
}else
if(instrument=='crest'){
this.t=3;
this.addChild(this.img=new Games.Img('crest',s,this.W*.5,this.H*.5,.5));
this.isEnabled=true;
}else{
if(instrument=='disabled')this.isEnabled=false;
else if(instrument=='enabled')this.isEnabled=true;
else this.isEnabled=!this.isEnabled;
if(this.isEnabled)this.t=1;
else this.t=0;
}
this.redraw();
};
SS.PatternView=function(soul,x,y){
GodStep.Frame.call(this,'PatternView',1,1);
this.x=x;
this.y=y;
this.s=soul.startS;
this.cells=[];
for(var i=0;i<8;i++){
for(var j=0;j<2;j++){
var c=new SS.Cell(soul.W*.12,soul.W*.12);
this.cells.push(c);
this.addChild(c);
c.y=c.W*i;
c.x=c.H*j;
addEvent(c,GodStep.FRAME_DOWN,this.h_cells);
}
}
};
extend(SS.PatternView,GodStep.Frame);
SS.PatternView.TYPES=['disabled','enabled','coin','crest'];
SS.PatternView.EMPTY={cells:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};
pro.setData=function(d){
var cells=d.cells;
for(var i=0;i<this.cells.length;i++){
this.cells[i].setCell(SS.PatternView.TYPES[cells[i]]);
}
};
pro.getData=function(){
var pattern={cells:[]};
for(var i=0;i<this.cells.length;i++){
pattern.cells.push(this.cells[i].t);
}
return d;
};
pro.h_cells=function(e){
var t=e.target;
var p=t.parent.parent;
var id=t.parent.cells.indexOf(t);
if(t.parent.currentPattern){
t.setCell(p.instrument);
t.parent.currentPattern.cells[id]=t.t;
}
};
SS.Dev=function(soul){
GodStep.LFrame.call(this,soul,'Dev');
GodStep.IDownUp.call(this,soul.W,soul.H);
this.rect(this.W,this.H,0,.3);
this.addFrame(this.b_back=new Games.TextButton('back',27*this.s,0x562466,soul.W*.67,soul.H*.95));
this.addFrame(this.b_test=new Games.TextButton('[test]',27*this.s,0x563366,soul.W*.80,soul.H*.95));
this.addFrame(this.b_save=new Games.TextButton('save',27*this.s,0x882466,soul.W*.93,soul.H*.95));
this.addFrame(this.b_addE=new Games.TextButton('+E',25*this.s,0x562488,soul.W*.05,soul.H*.05));this.b_addE.sy=.05;
this.addFrame(this.b_addA=new Games.TextButton('+A',25*this.s,0x336611,soul.W*.05,soul.H*.25));this.b_addA.sy=.25;
this.addFrame(this.b_addH=new Games.TextButton('+H',25*this.s,0x772466,soul.W*.05,soul.H*.45));this.b_addH.sy=.45;
this.addFrame(this.b_instrument_coin=new Games.ImgButton('coin',this,this.W*.77,this.H*.045));
this.addFrame(this.b_instrument_crest=new Games.ImgButton('crest',this,this.W*.9,this.H*.04));
this.b_instrument_coin.alpha=this.b_instrument_crest.alpha=.3;
this.average=[];
this.hard=[];
this.easy=[];
this.addFrame(this.pattern=new SS.PatternView(soul,this.W*.72,this.H*.1));
addEvent(this,GodStep.FRAME_UP,this.h_mouse_up);
addEvent(this.b_instrument_coin,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_instrument_crest,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_addE,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_addH,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_addA,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_test,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_save,Games.ImgButton.CLICK,this.h_buttons);
var sliderW=soul.W*.6;
var sliderH=90*this.s;
this.addFrame(this.s_patternSpeed=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,100,1,'Ñ€Ð¾ÑÑ‚ ÑÐ»Ð¾Ð¶Ð½Ð¾ÑÑ‚Ð¸ Ð¿Ð°Ñ‚Ñ‚ÐµÑ€Ð½Ð¾Ð²'));
this.addFrame(this.s_enemyPeriod=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,100,1,'Ð¿ÐµÑ€Ð¸Ð¾Ð´ Ð¼ÐµÐ¶Ð´Ñƒ Ð¿Ð¾ÑÐ²Ð»ÐµÐ½Ð¸ÑÐ¼Ð¸ Ð²Ñ€Ð°Ð³Ð°'));
this.addFrame(this.s_enemyTime=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,100,1,'Ð²Ñ€ÐµÐ¼Ñ Ð¿Ñ€ÐµÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ñ Ð²Ñ€Ð°Ð³Ð°'));
this.addFrame(this.s_enemySpeed=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,100,1,'ÑÐºÐ¾Ñ€Ð¾ÑÑ‚ÑŒ Ð´Ð²Ð¸Ð¶ÐµÐ½Ð¸Ñ Ð²Ñ€Ð°Ð³Ð°'));
this.addFrame(this.s_enemyGrowSpeed=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,100,1,'Ñ€Ð¾ÑÑ‚ ÑÐºÐ¾Ñ€Ð¾ÑÑ‚Ð¸ Ð²Ñ€Ð°Ð³Ð° ÑÐ¾ Ð²Ñ€ÐµÐ¼ÐµÐ½ÐµÐ¼'));
this.addFrame(this.s_multCoinStart=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,200,1,'ÐºÐ¾Ð»Ð¸Ñ‡ÐµÑÑ‚Ð²Ð¾ Ð¼Ð¾Ð½ÐµÑ‚ Ð´Ð»Ñ Ð¼Ð½Ð¾Ð¶Ð¸Ñ‚ÐµÐ»Ñ'));
this.addFrame(this.s_multPointsStart=new GodStep.Slider(sliderW,sliderH,this.s,'int',1,500,1,'ÐºÐ¾Ð»Ð¸Ñ‡ÐµÑÑ‚Ð²Ð¾ Ð¾Ñ‡ÐºÐ¾Ð² Ð´Ð»Ñ Ð¼Ð½Ð¾Ð¶Ð¸Ñ‚ÐµÐ»Ñ'));
this.isFirstRun=true;
var dy=this.H*.05;
this.s_patternSpeed.y=this.H*.6;
this.s_enemyGrowSpeed.y=this.s_patternSpeed.y+dy*4;
this.s_enemyPeriod.y=this.s_patternSpeed.y+dy;
this.s_enemyTime.y=this.s_patternSpeed.y+dy*2;
this.s_enemySpeed.y=this.s_patternSpeed.y+dy*3;
this.s_multCoinStart.y=this.s_patternSpeed.y+dy*5;
this.s_multPointsStart.y=this.s_patternSpeed.y+dy*6;
this.s_multPointsStart.x=this.s_multCoinStart.x=this.s_enemyGrowSpeed.x=this.s_enemyTime.x=this.s_enemySpeed.x=this.s_enemyPeriod.x=this.s_patternSpeed.x=this.W*.03;
};
extend(SS.Dev,GodStep.LFrame);
pro.update=function(){
if(this.visible){
}
};
pro.init=function(){
this.visible=true;
var data=GodStep.LoadLocal(SS.ChinUpShinUp.instance.SETTINGS_SLOT);
if(data&&this.isFirstRun){
this.isFirstRun=false;
var i;
for(i=0;i<data.easy.length;i++){
this.addPattern('E',data.easy[i]);
}
for(i=0;i<data.average.length;i++){
this.addPattern('A',data.average[i]);
}
for(i=0;i<data.hard.length;i++){
this.addPattern('H',data.hard[i]);
}
this.s_enemyPeriod.Value=data.s_enemyPeriod||1;
this.s_enemyGrowSpeed.Value=data.s_enemyGrowSpeed||1;
this.s_enemyTime.Value=data.s_enemyTime||1;
this.s_patternSpeed.Value=data.s_patternSpeed||1;
this.s_enemySpeed.Value=data.s_enemySpeed||1;
this.s_multCoinStart.Value=data.s_multCoinStart||1;
this.s_multPointsStart.Value=data.s_multPointsStart||1;
}
};
pro.addPattern=function(pt,cells){
var p=this;
var s=this.soul;
var array,but;
switch(pt){
case'A':
array=p.average;
but=p.b_addA;
break;
case'H':
array=p.hard;
but=p.b_addH;
break;
case'E':
but=p.b_addE;
array=p.easy;
break;
}
var pat,w=p.W*.063,sx=p.W*.025,sy,h=.08;
p.addChild(pat=new Games.TextButton(array.length+1+'',25*p.s,but.color,0,0));
array.push(pat);
sy=parseInt(array.length/10);
pat.x=sx+(array.length-sy*10)*w;
but.y=pat.y=p.H*but.sy+sy*p.W*h;
but.x=array[array.length-1].x+w;
pat.pattern=new SS.Pattern(cells);
pat.array=array;
p.selectPattern(pat);
addEvent(pat,GodStep.FRAME_DOWN,this.h_patterns);
};
pro.save=function(){
var data={easy:[],average:[],hard:[],s_multPointsStart:this.s_multPointsStart.Value,s_multCoinStart:this.s_multCoinStart.Value,s_patternSpeed:this.s_patternSpeed.Value,s_enemyGrowSpeed:this.s_enemyGrowSpeed.Value,s_enemyTime:this.s_enemyTime.Value,s_enemySpeed:this.s_enemySpeed.Value,s_enemyPeriod:this.s_enemyPeriod.Value};
var i;
for(i=0;i<this.easy.length;i++){
data.easy.push(this.easy[i].pattern.cells);
}
for(i=0;i<this.average.length;i++){
data.average.push(this.average[i].pattern.cells);
}
for(i=0;i<this.hard.length;i++){
data.hard.push(this.hard[i].pattern.cells);
}
GodStep.SaveLocal(data,SS.ChinUpShinUp.instance.SETTINGS_SLOT);
};
pro.selectPattern=function(p){
var pat;
for(var i=0;i<p.array.length;i++){
pat=p.array[i];
pat.Selected=false;
pat.Scale=1;
pat.isDown=false;
}
if(this.lastSelected){
this.lastSelected.Selected=false;
}
this.lastSelected=p;
p.Selected=true;
this.pattern.setData(p.pattern);
this.pattern.currentPattern=p.pattern;
};
pro.h_patterns=function(e){
var t=e.content.t;
var p=t.parent;
switch(e.type){
case GodStep.FRAME_DOWN:
p.selectPattern(t);
break;
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
switch(t){
case p.b_instrument_crest:
p.b_instrument_coin.alpha=.3;
if(p.b_instrument_crest.alpha==1){
p.b_instrument_crest.alpha=.3;
p.instrument='';
}else{
p.b_instrument_crest.alpha=1;
p.instrument='crest';
}
break;
case p.b_instrument_coin:
p.b_instrument_crest.alpha=.3;
if(p.b_instrument_coin.alpha==1){
p.b_instrument_coin.alpha=.3;
p.instrument='';
}else{
p.b_instrument_coin.alpha=1;
p.instrument='coin';
}
break;
case p.b_addE:
p.addPattern('E');
break;
case p.b_addA:
p.addPattern('A');
break;
case p.b_addH:
p.addPattern('H');
break;
case p.b_test:
GodStep.DEVMODE=true;
s.screenTo([s.gameplay],p);
break;
case p.b_save:
p.save();
break;
case p.b_back:
GodStep.DEVMODE=false;
s.screenTo([s.startmenu],p);
break;
}
};
pro.h_mouse_up=function(e){
var t=e.content.target;
if(t.s_patternSpeed){
t.s_patternSpeed.IsDown=false;
t.s_enemyTime.IsDown=false;
t.s_enemySpeed.IsDown=false;
t.s_multCoinStart.IsDown=false;
t.s_multPointsStart.IsDown=false;
t.s_enemyPeriod.IsDown=false;
t.s_enemyGrowSpeed.IsDown=false;
t.b_instrument_coin.isDown=t.b_instrument_crest.isDown=t.b_addA.isDown=t.b_addH.isDown=t.b_addE.isDown=
t.b_test.isDown=t.b_back.isDown=t.b_save.isDown=false;
t.b_instrument_coin.Scale=t.b_instrument_crest.Scale=t.b_addA.Scale=t.b_addH.Scale=t.b_addE.Scale=
t.b_test.Scale=t.b_back.Scale=t.b_save.Scale=1;
}
};
SS.Shop=function(soul){
GodStep.LFrame.call(this,soul,'Shop');
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.back=new SS.Background(this,'back'));
this.addChild(this.container=new PIXI.DisplayObjectContainer());
this.container.addChild(this.field=new SS.Img('field_shop',this.s,this.W*.5,this.H*.5,.5));
this.container.addChild(this.label=new SS.Text('SHOP',(250)*this.s/SS.SCALE,this.W*.34,-this.H*.01,'center',0xFFCC66));this.label.alpha=.7;
this.container.addChild(this.coin=new SS.Img('coinShop',this.s,this.W*.404,this.H*.041,.5));
this.container.addChild(this.coinLabel=new SS.Text('123',(110)*this.s/SS.SCALE,this.W*.45,-this.H*.015,'left',0xffe013));this.label.alpha=.7;
var prices=this.prices=[100,200,1000,3000,8000];
var dy=this.H*.126;
var help,icon;
for(var i=1;i<6;i++){
this.container.addChild(icon=this['icon_'+i]=new SS.Img('icon_'+i,this.s,this.W*.28,dy*(i-1)+this.H*.276,.5));
this.container.addChild(this['price_'+i]=new SS.Img('price',this.s,this.W*.48,dy*(i-1)+this.H*.276,.5));
this.container.addChild(help=this['help_'+i]=new SS.Img('help',this.s,this.W*.73,dy*(i-1)+this.H*.276,.5));
this.container.addChild(this['price_'+i]=new SS.Text(prices[i-1]+'',120*this.s,this.W*.47,dy*(i-1)+this.H*.215,'left',0xffffff));
this.container.addChild(this['accept_off_'+i]=new SS.Img('accept_off',this.s,this.W*.205,dy*(i-1)+this.H*.236,.5));
this.container.addChild(this['accept_on_'+i]=new SS.Img('accept_on',this.s,this.W*.205,dy*(i-1)+this.H*.236,.5));
this['price_'+i].x=this.W*.6-this['price_'+i].width;
this['accept_on_'+i].visible=false;
icon.id=help.id=i;
GodStep.IDownUp.call(icon,icon.width,icon.height);
GodStep.IDownUp.call(help,help.width,help.height);
icon.hitArea=new PIXI.Rectangle(-icon.width/2/this.s,-icon.height/2/this.s,icon.width/this.s,icon.height/this.s);
help.hitArea=new PIXI.Rectangle(-help.width/2/this.s,-help.height/2/this.s,help.width/this.s,help.height/this.s);
addEvent(icon,GodStep.FRAME_DOWN,this.h_icons);
addEvent(help,GodStep.FRAME_DOWN,this.h_helps);
}
this.container.addChild(this.helpUp=new SS.Img('shop_up_field',this.s,0,0,.5));this.helpUp.visible=false;
this.container.addChild(this.b_accept=new SS.ImgButton('button_accept',this,this.W*.51,this.H*.9));
this.container.addChild(this.helpLabel=new SS.Text('Text \nTEXT TEXT\nasdasd',(110)*this.s,this.W*.3,this.H*.36,'center',0xffffff));this.helpLabel.visible=false;
this.helpLabel.alpha=.8;
this.helpUp.x=this.W*.6;
this.helpLabel.x=this.helpUp.x-this.W*.2;
this.addFrame(this.dialog=new SS.Dialog(this,35));
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this.b_accept,Games.ImgButton.CLICK,this.h_buttons);
};
extend(SS.Shop,GodStep.LFrame);
pro.update=function(){
if(this.visible){
}
};
pro.updateCoins=function(){
this.coinLabel.setText('     '+SS.ChinUpShinUp.instance.PLAYER.coins);
this.coinLabel.updateText();
this.coinLabel.x=(this.W-this.coinLabel.width)/2;
this.coin.x=this.coinLabel.x+this.W*.05;
};
pro.init=function(){
this.visible=true;
this.updateCoins();
var player=SS.ChinUpShinUp.instance.PLAYER;
for(var i=0;i<5;i++){
this['icon_'+(i+1)].isBought=player.shop[i];
this['accept_on_'+(i+1)].visible=player.items[i];
}
};
pro.h_mouse=function(e){
this.helpLabel.visible=this.helpUp.visible=false;
};
pro.h_dialog=function(d){
d.visible=false;
if(d.isYes){
d.item.isBought=true;
SS.ChinUpShinUp.instance.PLAYER.coins-=d.parent.prices[d.item.id-1];
GodStep.SaveLocal(SS.ChinUpShinUp.instance.PLAYER,SS.ChinUpShinUp.instance.PLAYER_SLOT);
d.parent['accept_on_'+d.item.id].visible=true;
d.parent.updateIcons(d.item,true);
d.parent.updateCoins();
GodStep.playSound('store_buy',0,SS.SOUND);
}else{
}
};
pro.updateIcons=function(t,isOk){
var p=t.parent.parent;
var s=p.soul;
p.helpLabel.visible=p.helpUp.visible=false;
switch(t.id){
case 1:
s.BONUS_FLY=isOk;
break;
case 2:
s.BONUS_BIGCOIN=isOk;
p['accept_on_'+3].visible=s.BONUS_CRYSTAL=false;
break;
case 3:
s.BONUS_CRYSTAL=isOk;
p['accept_on_'+2].visible=s.BONUS_BIGCOIN=false;
break;
case 4:
s.BONUS_COINMULT=isOk;
p['accept_on_'+5].visible=s.BONUS_POINTMULT=false;
break;
case 5:
s.BONUS_POINTMULT=isOk;
p['accept_on_'+4].visible=s.BONUS_COINMULT=false;
break;
}
var player=SS.ChinUpShinUp.instance.PLAYER;
for(var i=0;i<5;i++){
if(p['icon_'+(i+1)].isBought){
player.shop[i]=1;
}else{
player.shop[i]=0;
}
if(p['accept_on_'+(i+1)].visible){
player.items[i]=1;
}else{
player.items[i]=0;
}
}
};
pro.h_icons=function(e){
var t=e.target;
var p=t.parent.parent;
var isOk=false;
if(t.isBought){
GodStep.playSound('button',0,SS.SOUND);
isOk=p['accept_on_'+t.id].visible=!p['accept_on_'+t.id].visible;
}else{
if(p.prices[t.id-1]<SS.ChinUpShinUp.instance.PLAYER.coins){
GodStep.playSound('button',0,SS.SOUND);
p.dialog.show('Buy this item '+t.id+'?',p.h_dialog,p.h_dialog);
}else{
GodStep.playSound('button',0,SS.SOUND);
p.helpLabel.visible=p.helpUp.visible=true;
p.helpUp.y=t.y-p.W*.17;
p.helpLabel.setText('\nnot enough money');
p.helpLabel.updateText();
p.helpLabel.x=p.W*.62-p.helpLabel.width/2;
p.helpLabel.y=p.helpUp.y-p.W*.17;
}
p.dialog.item=t;
isOk=true;
return;
}
p.updateIcons(t,isOk);
};
pro.h_helps=function(e){
var t=e.target;
var p=t.parent.parent;
p.helpLabel.visible=p.helpUp.visible=true;
p.helpUp.y=t.y-p.W*.17;
p.helpLabel.y=p.helpUp.y-p.W*.15;
GodStep.playSound('button',0,SS.SOUND);
switch(t.id){
case 1:
p.helpLabel.setText('Eye Patch\n+\nCrazy Balloon');
break;
case 2:
p.helpLabel.setText("Cowboy's Hat\n+\nHuge Coin");
break;
case 3:
p.helpLabel.setText("Sailor Cap\n+\nDiamond");
break;
case 4:
p.helpLabel.setText("Hypno Goggles\n+\nHigher Score");
break;
case 5:
p.helpLabel.setText("Monocle\n+\nScore Upgrade");
break;
}
p.helpLabel.updateText();
p.helpLabel.x=p.W*.62-p.helpLabel.width/2;
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent.parent;
var s=p.soul;
GodStep.playSound('button',0,SS.SOUND);
switch(t){
case p.b_accept:
GodStep.SaveLocal(SS.ChinUpShinUp.instance.PLAYER,SS.ChinUpShinUp.instance.PLAYER_SLOT);
s.screenTo([s.gameplay],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.back.rescale(value);
this.field.y=this.soul.H*.5/value;
this.scale.x=this.scale.y=value;}
});
SS.Pause=function(parent){
this.p=parent;
this.soul=parent.soul;
GodStep.LFrame.call(this,this.soul,'Pause');
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.back=new SS.Background(this,'back'));this.back.alpha=.5;
this.addChild(this.top=new SS.Background(this,'back_up'));
this.addChild(this.container=new PIXI.DisplayObjectContainer());
this.container.addChild(this.field=new SS.Img('field',this.s,this.W*.5,this.H*.5,.5));
this.container.addChild(this.b_back=new SS.ImgButton('button_back',this,this.W*.25,this.H*.8));
this.container.addChild(this.b_menu=new SS.ImgButton('button_menu',this,this.W*.5,this.H*.8));
this.container.addChild(this.b_replay=new SS.ImgButton('button_replay',this,this.W*.75,this.H*.8));
this.container.addChild(this.b_sound=new SS.ImgButton('button_sound',this,this.W*.28,this.H*.36));
this.container.addChild(this.b_music=new SS.ImgButton('button_music',this,this.W*.28,this.H*.54));
this.container.addChild(this.options=new SS.Text('PAUSE',(230)*this.s/SS.SCALE,this.W*.32,this.H*.03,'center',0xFFCC66));this.options.alpha=.7;
this.container.addChild(this.sound_label=new SS.Text('ON',(140)*this.s/SS.SCALE,this.W*.402,this.H*.29,'center',0xA35200));
this.container.addChild(this.music_label=new SS.Text('ON',(140)*this.s/SS.SCALE,this.W*.402,this.H*.471,'center',0xA35200));
this.sound_label.alpha=this.music_label.alpha=.6;
GodStep.IDownUp.call(this.back,parent.W,parent.H);
this.back.hitArea=new PIXI.Rectangle(-parent.W/2/parent.s,0,parent.W/parent.s,parent.H/parent.s);
this.container.addChild(this.b_music_off=new SS.ImgButton('slider_off',this,this.W*.7,this.H*.54));
this.container.addChild(this.b_music_on=new SS.ImgButton('slider_on',this,this.W*.7,this.H*.54));
this.container.addChild(this.b_sound_off=new SS.ImgButton('slider_off',this,this.W*.7,this.H*.36));
this.container.addChild(this.b_sound_on=new SS.ImgButton('slider_on',this,this.W*.7,this.H*.36));
this.b_music_off.visible=this.b_sound_off.visible=false;
this.b_sound.scaleble=this.b_music.scaleble=this.b_sound_off.scaleble=this.b_sound_on.scaleble=this.b_music_off.scaleble=this.b_music_on.scaleble=false;
addEvent(this.b_music_on,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_off,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_on,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_off,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_menu,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_replay,Games.ImgButton.CLICK,this.h_buttons);
};
extend(SS.Pause,GodStep.LFrame);
pro.update=function(){
if(this.visible){
}
};
pro.init=function(){
this.visible=true;
this.b_sound_on.visible=SS.SOUND;
this.b_sound_off.visible=!SS.SOUND;
this.b_music_on.visible=SS.MUSIC;
this.b_music_off.visible=!SS.MUSIC;
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent.parent;
var s=p.soul;
switch(t){
case p.b_music_off:
SS.MUSIC=true;
p.b_music_on.visible=true;
p.b_music_off.visible=false;
p.music_label.setText('ON');
GodStep.playSound('theme',-1,SS.MUSIC);
break;
case p.b_sound_off:
SS.SOUND=true;
p.b_sound_on.visible=true;
p.b_sound_off.visible=false;
p.sound_label.setText('ON');
break;
case p.b_music_on:
SS.MUSIC=false;
p.music_label.setText('OFF');
if(createjs){
if(createjs.Sound)createjs.Sound.stop();
}
p.b_music_on.visible=false;
p.b_music_off.visible=true;
break;
case p.b_sound_on:
SS.SOUND=false;
p.sound_label.setText('OFF');
p.b_sound_on.visible=false;
p.b_sound_off.visible=true;
break;
case p.b_replay:
s.screenTo([s.gameplay],p.parent);
break;
case p.b_menu:
s.screenTo([s.startmenu],p.parent);
break;
case p.b_back:
p.visible=false;
break;
}
GodStep.playSound('button',0,SS.SOUND);
};
pro.h_dialog=function(e){
dialog.visible=false;
GodStep.playSound('button',0,SS.SOUND);
if(this.isYes){
GodStep.Clear(SS.ChinUpShinUp.instance.PLAYER_SLOT);
GodStep.Clear(SS.ChinUpShinUp.instance.SHOP_SLOT);
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.back.rescale(value);
this.top.rescale(value);
}
});
SS.GameOver=function(soul){
GodStep.LFrame.call(this,soul,'GameOver');
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.back=new SS.Background(this,'back'));
this.addChild(this.container=new PIXI.DisplayObjectContainer());
this.container.addChild(this.field=new SS.Img('field_game_over',this.s,this.W*.5,this.H*.5,.5));
this.container.addChild(this.label=new SS.Text('GAME OVER',(170)*this.s/SS.SCALE,this.W*.243,this.H*.062,'center',0xFFCC66));this.label.alpha=.7;
this.container.addChild(this.icon1=new SS.Img('icon_xp',this.s,this.W*.33,this.H*.32,.5));
this.container.addChild(this.icon2=new SS.Img('icon_score',this.s,this.W*.33,this.H*.44,.5));
this.container.addChild(this.icon3=new SS.Img('icon_record',this.s,this.W*.33,this.H*.565,.5));
var d=this.H*.05;
var c=0xB06D00;
this.addFrame(this.xp_text=new SS.Text('15125125',120*this.s,this.W*.5,this.H*.32-d,'left',c));
this.addFrame(this.coin_text=new SS.Text('15125125',120*this.s,this.W*.5,this.H*.44-d,'left',c));
this.addFrame(this.record_text=new SS.Text('15125125',120*this.s,this.W*.5,this.H*.565-d,'left',c));
this.container.addChild(this.b_shop=new SS.ImgButton('button_shop',this,this.W*.25,this.H*.8));
this.container.addChild(this.b_menu=new SS.ImgButton('button_menu',this,this.W*.5,this.H*.8));
this.container.addChild(this.b_play=new SS.ImgButton('button_play',this,this.W*.75,this.H*.8));
this.b_play.Scale*=.61;
addEvent(this.b_shop,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_menu,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_play,Games.ImgButton.CLICK,this.h_buttons);
};
extend(SS.GameOver,GodStep.LFrame);
pro.update=function(){
if(this.visible){
}
};
pro.init=function(){
this.visible=true;
var dx=.74;
var player=SS.ChinUpShinUp.instance.PLAYER;
GodStep.playSound('final',0,SS.SOUND);
this.xp_text.setText(player.score+'');
this.coin_text.setText(player.coins+'');
this.record_text.setText(player.top+'');
this.xp_text.updateText();
this.coin_text.updateText();
this.record_text.updateText();
this.xp_text.x=this.W*dx-this.xp_text.width;
this.coin_text.x=this.W*dx-this.coin_text.width;
this.record_text.x=this.W*dx-this.record_text.width;
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent.parent;
var s=p.soul;
GodStep.playSound('button',0,SS.SOUND);
switch(t){
case p.b_play:
s.screenTo([s.gameplay],p);
break;
case p.b_menu:
s.screenTo([s.startmenu],p);
break;
case p.b_shop:
s.screenTo([s.shop],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.back.rescale(value);
this.field.y=this.soul.H*.5/value;
this.scale.x=this.scale.y=value;
}
});
SS.StartMenu=function(soul){
GodStep.LFrame.call(this,soul,'StartMenu');
GodStep.IDownUp.call(this,soul.SW,soul.SH);
this.addChild(this.back=new SS.Background(this,'back_menu'));
this.addChild(this.logo=new SS.Img('logo',this.s,this.W*.5,0,new PIXI.Point(.5,0)));
this.addChild(this.footer=new SS.Img('menu_field',this.s,this.W*.5,0,new PIXI.Point(.5,1)));
this.addChild(this.b_dev=new Games.TextButton('dev',33*this.s,0xfa66400,this.W*.9,this.H*.05));
this.addChild(this.b_play=new SS.ImgButton('button_play',this,this.W*.5,this.H*.5));
this.addChild(this.b_more=new SS.ImgButton('button_more',this,this.W*.24,this.H*.5));
this.addChild(this.b_settings=new SS.ImgButton('button_options',this,this.W*.76,this.H*.5));
this.b_dev.visible=false;
addEvent(this.b_dev,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_play,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_settings,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_more,Games.ImgButton.CLICK,this.h_buttons);
};
extend(SS.StartMenu,GodStep.LFrame);
pro.update=function(){
if(this.visible){
}
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
var s=p.soul;
GodStep.playSound('button',0,SS.SOUND);
switch(t){
case p.b_dev:
s.screenTo([s.dev],p);
break;
case p.b_settings:
s.screenTo([s.settings],p);
break;
case p.b_shop:
s.screenTo([s.shop],p);
break;
case p.b_play:
s.screenTo([s.gameplay],p);
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.back.rescale(value);
var d=(this.soul.OH-this.soul.H)/2/value;
this.logo.y=-d;
this.b_play.y=-d+this.soul.OH/value*.83;
this.b_more.y=
this.b_settings.y=-d+this.soul.OH/value*.9;
this.footer.y=(this.soul.OH)/value-d;
}
});
SS.Settings=function(soul){
GodStep.LFrame.call(this,soul,'Settings');
GodStep.IDownUp.call(this,this.W,this.H);
this.addChild(this.back=new SS.Background(this,'back'));
this.addChild(this.top=new SS.Background(this,'back_up'));
this.addChild(this.container=new PIXI.DisplayObjectContainer());
this.container.addChild(this.field=new SS.Img('field',this.s,this.W*.5,this.H*.5,.5));
this.container.addChild(this.b_back=new SS.ImgButton('button_back',this,this.W*.5,this.H*.87));
this.container.addChild(this.b_sound=new SS.ImgButton('button_sound',this,this.W*.28,this.H*.36));
this.container.addChild(this.b_music=new SS.ImgButton('button_music',this,this.W*.28,this.H*.54));
this.container.addChild(this.b_progress=new SS.ImgButton('button_progress',this,this.W*.5,this.H*.74,'Reset progress',100,0,this.H*.02));
this.container.addChild(this.options=new SS.Text('OPTIONS',(230)*this.s/SS.SCALE,this.W*.243,this.H*.03,'center',0xFFCC66));this.options.alpha=.7;
this.container.addChild(this.sound_label=new SS.Text('ON',(140)*this.s/SS.SCALE,this.W*.402,this.H*.29,'center',0xA35200));
this.container.addChild(this.music_label=new SS.Text('ON',(140)*this.s/SS.SCALE,this.W*.402,this.H*.471,'center',0xA35200));
this.sound_label.alpha=this.music_label.alpha=.6;
this.container.addChild(this.b_music_off=new SS.ImgButton('slider_off',this,this.W*.7,this.H*.54));
this.container.addChild(this.b_music_on=new SS.ImgButton('slider_on',this,this.W*.7,this.H*.54));
this.container.addChild(this.b_sound_off=new SS.ImgButton('slider_off',this,this.W*.7,this.H*.36));
this.container.addChild(this.b_sound_on=new SS.ImgButton('slider_on',this,this.W*.7,this.H*.36));
this.b_music_off.visible=this.b_sound_off.visible=false;
this.b_sound.scaleble=this.b_music.scaleble=this.b_sound_off.scaleble=this.b_sound_on.scaleble=this.b_music_off.scaleble=this.b_music_on.scaleble=false;
this.addFrame(this.dialog=new SS.Dialog(this,35));
addEvent(this.b_music_on,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_music_off,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_on,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_sound_off,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_progress,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_back,Games.ImgButton.CLICK,this.h_buttons);
};
extend(SS.Settings,GodStep.LFrame);
pro.update=function(){
if(this.visible){
}
};
pro.init=function(){
this.visible=true;
this.b_sound_on.visible=SS.SOUND;
this.b_sound_off.visible=!SS.SOUND;
this.b_music_on.visible=SS.MUSIC;
this.b_music_off.visible=!SS.MUSIC;
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent.parent;
var s=p.soul;
switch(t){
case p.b_progress:
p.dialog.show('Delete save data?',p.h_dialog,p.h_dialog);
break;
case p.b_music_off:
SS.MUSIC=true;
p.b_music_on.visible=true;
p.b_music_off.visible=false;
p.music_label.setText('ON');
break;
case p.b_sound_off:
SS.SOUND=true;
p.b_sound_on.visible=true;
p.b_sound_off.visible=false;
p.sound_label.setText('ON');
break;
case p.b_music_on:
SS.MUSIC=false;
p.music_label.setText('OFF');
p.b_music_on.visible=false;
p.b_music_off.visible=true;
if(createjs){
if(createjs.Sound)createjs.Sound.stop();
}
break;
case p.b_sound_on:
SS.SOUND=false;
p.sound_label.setText('OFF');
p.b_sound_on.visible=false;
p.b_sound_off.visible=true;
break;
case p.b_back:
s.screenTo([s.startmenu],p);
break;
}
GodStep.playSound('button',0,SS.SOUND);
};
pro.h_dialog=function(e){
dialog.visible=false;
GodStep.playSound('button',0,SS.SOUND);
if(this.isYes){
GodStep.Clear(SS.ChinUpShinUp.instance.PLAYER_SLOT);
GodStep.Clear(SS.ChinUpShinUp.instance.SHOP_SLOT);
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.field.y=this.soul.H*.5/value;
this.back.rescale(value);
this.top.rescale(value);
}
});
SS.GamePlay=function(soul){
GodStep.LFrame.call(this,soul,'GamePlay');
GodStep.IDownUp.call(this,this.W,this.H);
this.elements=[];
this.bankSaloonTimer=7;
var i,b;
this.rect(10,this.H,0x000000,1,this.W/2-5,0);
this.addChild(this.back0=new PIXI.DisplayObjectContainer());
for(i=0;i<5;i++){
this.back0.addChild(b=new SS.Img('back_1',this.s,this.W*.5,0,new PIXI.Point(.5,1)));
b.y=-i*b.height;
}
this.addChild(this.back2=new PIXI.DisplayObjectContainer());
this.addChild(this.back3=new SS.Img('back_3',this.s,this.W*.5,this.H*.5,.5));
this.addChild(this.back1=new SS.Img('back_0',this.s,this.W*.5,0,new PIXI.Point(.5,1)));
var c=false;
this.maxHomeH=0;
for(i=0;i<8;i++){
c=!c;
this.back2.addChild(b=new SS.MovieClip(['home_1_1','home_2_1','home_3_1','home_4_1',(c)?'saloon_2':'saloon_1',(c)?'bank_2':'bank_1'],this.s,(c)?0:this.W,0,new PIXI.Point(1,.5)));
this.maxHomeH=Math.max(this.maxHomeH,b.height);
b.y=-i*this.maxHomeH-this.H*1.2;
if(this.bankSaloonTimer-->0){
b.setToFrame(parseInt(Math.random()*(b.totalFrames-2)));
}else{
b.setToFrame(parseInt(Math.random()*b.totalFrames));
if(b.currentFrame>=4){
this.bankSaloonTimer=7;
}
}
if(c&&b.currentFrame>=4){
b.anchor=new PIXI.Point(0,1);
}
if(c&&b.currentFrame<4){
b.scale.x=-b.scale.x;
}
}
this.addChild(this.x_coins=new SS.Img('2x_coins',this.s*.6,this.W*.9,this.H*.92,.5));
this.addChild(this.x_score=new SS.Img('2x_score',this.s*.6,this.W*.9,this.H*.92,.5));
this.addFrame(this.multText=new SS.Text('x1',120*this.s,this.W*.7,this.H*.86,'left',0x111111));
this.addChild(this.line=new SS.Img('line_2',this.s,this.W*.5,this.H*.5,new PIXI.Point(.5,.5)));
this.addChild(this.world=new PIXI.DisplayObjectContainer());
this.world.addChild(this.player=new SS.Player(this));
this.addChild(this.startMonster=new SS.MovieClip(['start_1','start_2','start_3','start_4','start_5','start_6','start_7','start_8','start_9'],this.s,this.W*.5,0,.5));
this.world.addChild(this.enemy=new SS.Enemy(this));this.enemy.x=this.W*.33;
this.addChild(this.field_ui=new SS.Img('field_ui',this.s,this.W*.5,this.H*.1,.5));
this.field_ui.addChild(this.icon_coin=new SS.Img('icon_coin_game',1,-this.W*.05/this.s,this.H*.0,.5));
this.field_ui.addChild(this.icon_score=new SS.Img('icon_score_game',1,-this.W*.4/this.s,this.H*.0,.5));
this.field_ui.addChild(this.b_pause=new SS.ImgButton('button_pause',this,this.W*.4/this.s,this.H*.0));
this.field_ui.addChild(this.scoreText=new SS.Text('coins',155,-this.W*.33/this.s,-this.H*.08/this.s,'left',0x49A6B3));
this.field_ui.addChild(this.coinText=new SS.Text('coins',155,this.W*.03/this.s,-this.H*.08/this.s,'left',0x49A6B3));
this.b_pause.scale.x=this.b_pause.scale.y/=this.s;
this.addChild(this.tutorial=new SS.Tutorial(this));
this.addFrame(this.pause=new SS.Pause(this));
addEvent(this.b_pause,Games.ImgButton.CLICK,this.h_buttons);
addEvent(this,GodStep.FRAME_DOWN,this.h_mouse);
addEvent(this,GodStep.FRAME_UP,this.h_mouse);
};
extend(SS.GamePlay,GodStep.LFrame);
SS.DELTA_W=.16;
SS.DELTA_W_ELEM=.195;
SS.CELL_W=.24;
SS.PLAYER_Y=.1;
SS.FRAME_RATE=1/60;
SS.WORLD_S_Y_END=.6;
SS.WORLD_S_Y_START=.43;
SS.WORLD_S_Y=.43;
pro.update=function(){
if(this.visible&&!this.pause.visible){
this.enemy.update();
this.player.update();
var eSpeed=(this.enemySpeed-this.enemyGrowSpeed*this.player.pos.y)*(this.isFly?.1:1);
if(this.isOver){
if(this.endTimer--==0){
if(GodStep.DEVMODE){
this.soul.screenTo([this.soul.dev],this);
}else{
this.soul.screenTo([this.soul.gameover],this);
}
if(createjs){
if(createjs.Sound)createjs.Sound.stop();
}
}
if(this.isFall){
this.fallSpeed+=0.0015;
this.player.pos.y+=this.fallSpeed;
this.player.y+=(this.player.pos.y*this.H*SS.CELL_W-this.player.y+this.soul.DOH/this.scale.x/2)*.3;
this.enemy.y+=this.H*.005*eSpeed*this.enemyStartSpeed;
this.enemy.x=this.player.x+=(this.W/2+this.player.pos.x*this.W*SS.DELTA_W-this.player.x)*.3;
}
}else{
this.tutorial.update();
if(!this.isMonsterStartMove&&!this.isFly){
if(GodStep.IsKeyPressed(GodStep.KEY_LEFT)){
this.tutorial.visible=false;
this.turnPlayer(-1);
}
if(GodStep.IsKeyPressed(GodStep.KEY_RIGHT)){
this.tutorial.visible=false;
this.turnPlayer(1);
}
}
if(this.isFly){
this.flyPhase+=.05;
var delta=(this.player.pos.y*this.H*SS.CELL_W-this.player.y)*.3;
this.player.x+=(this.W/2+Math.sin(this.flyPhase)*this.W*.2-this.player.x)*.2;
this.player.y+=Math.max(delta,-this.H*.02);
if(Math.abs(delta)<this.H*SS.CELL_W/4){
this.isFly=false;
this.player.stay();
this.player.pos.y+=1;
this.turnPlayer(this.player.pos.x);
}
for(var i=this.oldFlyPos;i>this.player.pos.y;i--){
var cell1=this.cells[1][i];
var cell2=this.cells[-1][i];
if(cell1.isCoin&&cell1.visible){
if(cell1.y>this.player.y){
this.takeCoin(cell1);
}
}
if(cell2.isCoin&&cell2.visible){
if(cell2.y>this.player.y){
this.takeCoin(cell2);
}
}
}
}else{
this.enemy.x=this.player.x+=(this.W/2+this.player.pos.x*this.W*SS.DELTA_W-this.player.x)*.3;
this.player.y+=(this.player.pos.y*this.H*SS.CELL_W-this.player.y+this.soul.DOH/this.scale.x/2)*.3;
}
this.updateWorld(.2);
while(this.player.pos.y-5<this.lastPatternPlace){
this.addPattern();
}
if(this.elements.length>0){
if(this.elements[0].yi-this.player.pos.y>10){
this.world.removeChild(this.elements[0].destroy());
this.elements.splice(0,1);
}
}
for(var e=0;e<this.elements.length;e++){
this.elements[e].move();
}
this.enemyTimer+=SS.FRAME_RATE;
if(this.player.pos.y<-3){
if(this.enemyMode){
this.enemy.y-=this.H*.01*eSpeed*this.enemyStartSpeed;
if(this.enemyStartSpeed>0.01){
if(this.enemy.y-this.player.y<this.H*.5){
this.enemyStartSpeed+=(1-this.enemyStartSpeed)*.4;
}
}
if(this.enemyTimer>this.soul.SETTINGS.s_enemyTime){
this.enemyMode=false;
this.enemyTimer=0;
}
if(this.enemy.y<this.player.y+this.H*.1){
this.player.end();
GodStep.playSound('caught',0,SS.SOUND);
this.enemy.visible=false;
this.over();
}
}else{
this.enemy.y+=this.H*.005*eSpeed*this.enemyStartSpeed;
if(this.enemyTimer>this.soul.SETTINGS.s_enemyPeriod){
this.enemyTimer=0;
this.enemyMode=true;
this.enemyStartSpeed=3;
this.enemy.y=this.player.y+this.H*.7;
}
}
}
if(this.isMonsterStartMove){
if(this.startTimer>0){
this.startTimer--;
}else{
if(this.startMonster.animTimer--==0){
this.startMonster.animTimer=this.startMonster.animTime;
this.startMonster.nextFrame();
if(this.isLastMonsterStart){
this.isMonsterStartMove=false;
this.startMonster.visible=false;
this.player.Visible=true;
}
if(this.startMonster.currentFrame==this.startMonster.totalFrames-1){
this.isLastMonsterStart=true;
}
}
}
}
}
}
};
pro.updateWorld=function(v){
SS.WORLD_S_Y+=(SS.WORLD_S_Y_START+(SS.WORLD_S_Y_END-SS.WORLD_S_Y_START)*Math.min(-this.player.pos.y/3,1)-SS.WORLD_S_Y)*.2;
this.world.y+=(-this.player.y+this.H*SS.WORLD_S_Y-this.world.y+this.soul.DOH/2/this.scale.x)*v;
this.line.y=Math.min(this.H*.5-this.deltaYStart*this.H+this.world.y-this.H*SS.WORLD_S_Y,.5*this.H);
this.back2.y=this.back0.y=this.back1.y=(this.soul.OH-this.soul.DOH/2)/this.scale.x+this.world.y-this.H*SS.WORLD_S_Y;
if(this.back1.y>(this.soul.OH*2-this.soul.DOH)/this.scale.x){
this.back1.visible=false;
}
var b=this.back0.children[0];
if(b.y+this.back0.y>(this.H*1-this.soul.DOH*.5)){
this.back0.removeChild(b);
this.back0.addChild(b);
b.y=this.back0.children[4].y-b.height;
}
b=this.back2.children[0];
if(b.y+this.back2.y>(this.H*2-this.soul.DOH*.5)){
this.back2.removeChild(b);
this.back2.addChild(b);
if(this.bankSaloonTimer-->0){
b.setToFrame(parseInt(Math.random()*(b.totalFrames-2)));
}else{
b.setToFrame(parseInt(Math.random()*b.totalFrames));
if(b.currentFrame>=4){
this.bankSaloonTimer=7;
}
}
b.anchor=new PIXI.Point(1,1);
if(b.x>this.W*.5){
b.scale.x=Math.abs(b.scale.x);
}else{
b.scale.x=-Math.abs(b.scale.x);
}
if(b.currentFrame>=4){
b.scale.x=Math.abs(b.scale.x);
if(b.x>this.W*.5){
b.anchor=new PIXI.Point(1,.5);
}else{
b.anchor=new PIXI.Point(0,.5);
}
}
b.y=this.back2.children[this.back2.children.length-2].y-this.maxHomeH
}
};
pro.addElement=function(e,x,y){
var elem;
var xx=x;
if(xx==1){
if(this.soul.BONUS_FLY){
this.flyCounter--;
if(this.flyCounter==0){
this.flyNext+=10;
this.flyCounter=this.flyNext;
elem=new SS.Element(SS.FLY,this.s);
}
}
}
if(this.soul.BONUS_BIGCOIN||this.soul.BONUS_CRYSTAL){
if(e==SS.COIN){
this.bigCoinCounter--;
if(this.bigCoinCounter==0){
this.bigCoinNext*=2;
this.bigCoinCounter=this.bigCoinNext;
elem=new SS.Element((this.soul.BONUS_CRYSTAL)?SS.CRYSTAL:SS.BIGCOIN,this.s);
}
}
}
if(elem==null){
elem=new SS.Element(e,this.s);
}
if(e==SS.BLOCK){
if(xx<0){
elem.scale.x=-elem.scale.x;
}
}
elem.x=this.W/2+xx*this.W*SS.DELTA_W_ELEM;
elem.y=y*this.H*SS.CELL_W+this.H*SS.CELL_W*.07+this.soul.DOH*.5/this.scale.x;
this.world.addChildAt(elem,0);
this.elements.push(elem);
elem.yi=y;
return elem;
};
pro.addPattern=function(){
var availablePacks=-this.player.pos.y/this.patternGrow;
var countPacks=Math.min(3,availablePacks);
var minPack=0;
if(availablePacks>4){
minPack=1;
}
if(availablePacks>6){
minPack=2;
}
var packID=parseInt(Math.random()*(countPacks-minPack))+minPack;
packID=Math.max(0,Math.min(2,packID));
var patternPack=this.soul.PATTERNS[packID];
var pat=patternPack[parseInt(Math.random()*patternPack.length)];
var cells=pat.cells;
var pattHeight=parseInt(pat.cells.length/2);
var di=0;
var dx;
if(Math.random()>.5){
dx=1;
}else{
dx=-1;
}
for(var i=0;i<cells.length;i+=2){
var index=this.lastPatternPlace-pattHeight+di;
this.cells[-dx][index]=this.addElement(cells[i],-dx,index);
this.cells[dx][index]=this.addElement(cells[i+1],dx,index);
di++
}
this.lastPatternPlace-=pattHeight;
};
pro.init=function(){
if(createjs){
if(createjs.Sound)createjs.Sound.stop();
}
GodStep.playSound('theme',-1,SS.MUSIC);
var i,b;
for(i=0;i<5;i++){
b=this.back0.children[i];
b.y=-i*b.height;
}
for(i=0;i<this.back2.children.length;i++){
b=this.back2.children[i];
b.y=-i*this.maxHomeH-this.H*1.2;
}
SS.WORLD_S_Y=SS.WORLD_S_Y_START;
this.deltaYStart=.31;
this.startTimer=1;
this.endTimer=100;
this.isMonsterStartMove=true;
this.isLastMonsterStart=false;
this.startMonster.visible=true;
this.player.init();
this.player.Visible=false;
this.back1.visible=true;
this.enemy.visible=true;
this.isFall=false;
this.fallSpeed=-0.04;
while(this.elements.length){
this.world.removeChild(this.elements[0].destroy());
this.elements.splice(0,1);
}
this.flyPhase=0;
this.flyNext=15;
this.flyCounter=15;
this.bigCoinCounter=5;
this.bigCoinNext=5;
this.soul.loadSettings();
var player=this.soul.PLAYER;
this.soul.BONUS_FLY=player.items[0];
this.soul.BONUS_BIGCOIN=player.items[1];
this.soul.BONUS_CRYSTAL=player.items[2];
this.soul.BONUS_COINMULT=player.items[3];
this.soul.BONUS_POINTMULT=player.items[4];
this.patternGrow=this.soul.SETTINGS.s_patternSpeed;
this.enemyMode=false;
this.enemyTimer=0;
this.enemySpeed=this.soul.SETTINGS.s_enemySpeed/50;
this.enemyGrowSpeed=this.soul.SETTINGS.s_enemyGrowSpeed/10000;
this.elements=[];
this.coins=0;
this.points=0;
this.pointsMult=1;
this.coinMult=1;
this.coinTarget=0;
this.pointTarget=0;
this.coinStart=this.coinTargetNext=this.soul.SETTINGS.s_multCoinStart;
this.pointStart=this.pointTargetNext=this.soul.SETTINGS.s_multPointsStart;
this.cells=[];
this.cells[-1]=[0];
this.cells[1]=[0];
this.time=0;
this.scoreText.setText('0');this.scoreText.updateText();
this.coinText.setText('0');this.coinText.updateText();
this.lastPatternPlace=-2;
this.visible=true;
this.isOver=false;
this.pause.visible=false;
this.player.x=this.W*.65;
this.player.y=0;
this.world.y=0;
this.enemy.y=this.H*1.8;
this.multText.x=this.W*.93-this.multText.width;
this.player.pos=new PIXI.Point(1,0);
this.multText.setText('x'+1);
this.x_coins.visible=this.soul.BONUS_COINMULT;
this.x_score.visible=this.soul.BONUS_POINTMULT;
this.multText.visible=(this.soul.BONUS_POINTMULT||this.soul.BONUS_COINMULT);
if(this.soul.BONUS_COINMULT){
this.multText.tint=0xC46F00;
}
if(this.soul.BONUS_POINTMULT){
this.multText.tint=0x515E0D;
}
this.updateWorld(1);
};
pro.over=function(){
this.isOver=true;
this.endTimer=120;
var player=SS.ChinUpShinUp.instance.PLAYER;
player.score=this.points;
player.lastCoins=this.coins;
player.coins+=this.coins;
player.top=Math.max(this.points,player.top);
GodStep.SaveLocal(player,SS.ChinUpShinUp.instance.PLAYER_SLOT);
};
pro.turnPlayer=function(p){
this.player.pos.x=p;
this.player.pos.y-=1;
this.player.turn(p);
this.enemy.turn(p);
var cell=this.cells[p][this.player.pos.y];
var reCell=this.cells[-p][this.player.pos.y];
this.player.run();
if(reCell){
if(reCell.elemType==SS.COIN){
if(this.soul.BONUS_COINMULT){
this.coinMult=1;
this.coinTargetNext=this.soul.SETTINGS.s_multCoinStart;
this.multText.setText('x'+this.coinMult);
GodStep.playSound('multiply',0,SS.SOUND);
}else
if(this.soul.BONUS_POINTMULT){
this.pointsMult=1;
this.pointTargetNext=this.soul.SETTINGS.s_multPointsStart;
this.multText.setText('x'+this.pointsMult);
}
}
}
if(cell){
switch(cell.elemType){
case SS.CRYSTAL:
case SS.BIGCOIN:
case SS.COIN:
this.takeCoin(cell);
break;
case SS.FLY:
GodStep.playSound('balloon',0,SS.SOUND);
this.oldFlyPos=this.player.pos.y;
this.player.pos.y-=10;
this.isFly=true;
cell.visible=false;
this.player.bubble();
var column=this.cells[this.player.pos.x];
while(!column[this.player.pos.y]){
this.addPattern();
}
if(column[this.player.pos.y].elemType==SS.BLOCK){
this.player.pos.x=-this.player.pos.x;
}
break;
case SS.BLOCK:
GodStep.playSound('fall',0,SS.SOUND);
cell.visible=true;
this.player.fall();
this.isFall=true;
this.over();
break;
}
}
};
pro.takeCoin=function(cell){
if(cell.elemType==SS.CRYSTAL){
GodStep.playSound('daimond',0,SS.SOUND);
}else{
GodStep.playSound('catch',0,SS.SOUND);
}
var dc=cell.cost*this.coinMult;
var dp=cell.cost*10*this.pointsMult;
this.coinTarget+=dc;
this.pointTarget+=dp;
if(this.soul.BONUS_COINMULT){
if(this.coinTarget>=this.coinTargetNext){
this.coinMult++;
this.coinTarget-=this.coinTargetNext;
this.coinTargetNext=this.coinStart*this.coinMult;
this.multText.setText('x'+this.coinMult);
}
}
if(this.soul.BONUS_POINTMULT){
if(this.pointTarget>=this.pointTargetNext){
this.pointsMult++;
this.pointTarget-=this.pointTargetNext;
this.pointTargetNext=this.pointStart*this.pointsMult;
this.multText.setText('x'+this.pointsMult);
}
}
this.coins+=dc;
this.points+=dp;
this.coinText.setText(this.coins+"");
this.scoreText.setText(this.points+"");
this.coinText.updateText();
this.scoreText.updateText();
cell.visible=false;
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent.parent;
switch(t){
case p.b_pause:
GodStep.playSound('button',0,SS.SOUND);
p.pause.init();
break;
}
};
pro.h_mouse=function(e){
var t=e.content.target;
if(!t.pause){
return;
}
if(t.pause.visible){
return;
}
switch(e.type){
case GodStep.FRAME_DOWN:
if(!t.isOver&&!t.pause.visible&&!t.isFly&&!t.isMonsterStartMove){
t.tutorial.visible=false;
var pos=e.content.getLocalPosition(t);
if(pos.x>t.W/2){
t.turnPlayer(1);
}else{
t.turnPlayer(-1);
}
}
break;
case GodStep.FRAME_UP:
break;
}
};
Object.defineProperty(pro,'Scale',{
get:function(){
return this.scale.x;
},
set:function(value){
this.scale.x=this.scale.y=value;
this.pause.Scale=value;
var dy=(this.soul.OH-this.soul.H)/2/value;
this.back3.scale.y=this.soul.OH/this.soul.H;
this.line.scale.y=this.soul.OH/this.soul.H*this.s;
this.tutorial.y=(this.soul.DOH*.5+this.soul.H*.87)/value;
this.field_ui.y=(this.soul.H*.1-this.soul.DOH/2)/value;
this.startMonster.y=this.soul.DOH*.5+this.H*.615;
this.setHitArea(0,-dy,this.H,this.soul.OH/value);
}
});
SS.Background=function(parent,name){
this.soul=parent.soul;
this.p=parent;
GodStep.Frame.call(this,'Background',parent.W,parent.H);
this.addChild(this.img=new SS.Img(name,parent.s,this.W*.5,this.H*.5,.5));
};
extend(SS.Background,GodStep.Frame);
pro.rescale=function(s){
this.scale.x=this.scale.y=this.soul.OH/this.soul.H;
this.x=+(this.soul.W-this.soul.W*this.scale.x)/2;
this.y=-(this.soul.OH-this.soul.H)*.5/s;
};
SS.Transmission=function(soul){
this.soul=soul;
Games.Transmission.call(this,soul,.09,0x33CCFF);
};
extend(SS.Transmission,Games.Transmission);
SS.Element=function(type,s){
GodStep.Frame.call(this,'Element'+type,1,1);
this.elemType=type;
switch(type){
case SS.COIN:
this.isCoin=true;
this.cost=1;
this.addChild(this.mvc=new SS.MovieClip(['coin_1','coin_2','coin_3','coin_4','coin_5','coin_6'],s,0,0,.5));
break;
case SS.BLOCK:
this.addChild(this.img=new Games.Img('add_hammer',s,0,0,.5));
break;
case SS.FLY:
this.addChild(this.img=new Games.Img('bubble_1',s,0,0,new PIXI.Point(.5,.4)));
break;
case SS.BIGCOIN:
this.isCoin=true;
this.cost=5;
this.addChild(this.mvc=new SS.MovieClip(['2coin_1','2coin_2','2coin_3','2coin_4','2coin_5','2coin_6'],s,0,0,.5));
break;
case SS.CRYSTAL:
this.isCoin=true;
this.cost=10;
this.addChild(this.img=new Games.Img('stone',s,0,0,.5));
break;
}
};
extend(SS.Element,GodStep.Frame);
SS.COIN=2;
SS.FLY=4;
SS.BLOCK=3;
SS.BIGCOIN=5;
SS.CRYSTAL=6;
pro.move=function(){
if(this.mvc){
this.mvc.animate();
}
};
pro.destroy=function(){
if(this.mvc){
this.removeChild(this.mvc);
}
if(this.img){
this.removeChild(this.img);
}
return this;
};
SS.Enemy=function(parent){
GodStep.Frame.call(this,'Enemy');
var cc=.15;
this.addChild(this.a_stay=new SS.MovieClip(['sheriff_1','sheriff_2'],parent.s,0,0,.5));
this.animTime=6;
};
extend(SS.Enemy,GodStep.Frame);
pro.update=function(){
this.a_stay.animate();
};
pro.turn=function(v){
this.scale.x=-v;
};
SS.MovieClip=function(frames,scale,px,py,anchor){
this.frames=frames;
this.animTime=6;
this.animTimer=6;
var tex=GodStep.textures[this.frames[0]];
GodStep.Image.call(this,tex);
this.Scale=this.startS=scale/GodStep.IMAGE_RESOLUTION;
this.currentFrame=0;
this.totalFrames=frames.length;
if(anchor==0.5){
this.anchor=new PIXI.Point(.5,.5);
}else{
if(anchor){
this.anchor=anchor;
}
}
this.place(px,py);
};
extend(SS.MovieClip,GodStep.Image);
pro.animate=function(){
if(this.isAnimate())this.nextFrame();
};
pro.isAnimate=function(){
if(this.animTimer>0){
if(--this.animTimer==0){
this.animTimer=this.animTime;
return true;
}
}
return false;
};
pro.setToFrame=function(frame){
this.currentFrame=frame;
this.setTexture(GodStep.textures[this.frames[frame]]);
};
pro.nextFrame=function(){
this.currentFrame++;
if(this.currentFrame==this.frames.length){
this.currentFrame=0;
}
this.setTexture(GodStep.textures[this.frames[this.currentFrame]]);
return this.currentFrame;
};
SS.Player=function(parent){
this.p=parent;
GodStep.Frame.call(this,'Player',1,1);
var cc=.15;
this.runTimer=0;
parent.addChildAt(this.backArm=new SS.Img('back_arm_2',parent.s,0,0,.5),5);
this.addChild(this.a_bubble=new SS.MovieClip(['bubble_2'],parent.s,0,0,.5));
this.addChild(this.a_stay=new SS.MovieClip(['stay_2'],parent.s,0,0,.5));
this.addChild(this.a_run=new SS.MovieClip(['run_1_1','run_1_2'],parent.s,0,0,.5));
this.addChild(this.a_end=new SS.MovieClip(['end_1','end_2'],parent.s,0,0,new PIXI.Point(.5,.5)));
this.addChild(this.a_fall=new SS.MovieClip(['fail_1','fail_2','fail_3'],parent.s,0,0,new PIXI.Point(.5,.5)));
this.a_bubble.scale.x=this.a_end.scale.x=-this.a_end.scale.x;
this.a_run.visible=false;
this.a_bubble.visible=false;
this.a_run.animTime=10;
this.a_end.animTime=20;
this.addChild(this.item_1=new SS.MovieClip(['2run_icon_1','2stay_icon_1','fail_icon_1','2end_icon_1','icon_1_bubble'],parent.s,0,0,.5));
this.addChild(this.item_2=new SS.MovieClip(['2stay_run_icon_2','2stay_run_icon_2','fail_icon_2','2end_icon_2','icon_2_bubble'],parent.s,0,0,.5));
this.addChild(this.item_3=new SS.MovieClip(['2stay_run_icon_3','2stay_run_icon_3','fail_icon_3','2end_icon_3','icon_3_bubble'],parent.s,0,0,.5));
this.addChild(this.item_4=new SS.MovieClip(['2stay_run_icon_4','2stay_run_icon_4','fail_icon_3','2end_icon_3','icon_4_bubble'],parent.s,0,0,.5));
this.addChild(this.item_5=new SS.MovieClip(['2stay_run_icon_3','2stay_run_icon_3','fail_icon_3','2end_icon_3','icon_5_bubble'],parent.s,0,0,.5));
this.item_1.visible=false;
this.item_2.visible=false;
this.item_3.visible=false;
this.item_4.visible=false;
this.item_5.visible=false;
};
extend(SS.Player,GodStep.Frame);
pro.bubble=function(){
this.a_bubble.visible=true;
this.a_run.visible=false;
this.a_stay.visible=false;
this.item_1.setToFrame(4);
this.item_2.setToFrame(4);
this.item_3.setToFrame(4);
this.item_4.setToFrame(4);
this.item_5.setToFrame(4);
};
pro.fall=function(){
this.a_fall.visible=true;
this.a_run.visible=false;
this.a_stay.visible=false;
this.item_1.setToFrame(2);
this.item_2.setToFrame(2);
this.item_3.setToFrame(2);
this.item_4.setToFrame(2);
this.item_5.setToFrame(2);
};
pro.end=function(){
this.a_end.visible=true;
this.a_run.visible=false;
this.a_stay.visible=false;
this.item_1.setToFrame(3);
this.item_2.setToFrame(3);
this.item_3.setToFrame(3);
this.item_4.setToFrame(3);
this.item_5.setToFrame(3);
};
pro.turn=function(v){
this.scale.x=v;
this.runTimer=0;
this.backArm.scale.x=v*this.p.s;
};
pro.init=function(){
this.turn(1);
this.stay();
this.a_fall.visible=false;
this.a_bubble.visible=false;
this.a_end.visible=false;
var player=SS.ChinUpShinUp.instance.PLAYER;
for(var i=0;i<5;i++){
this['item_'+(i+1)].visible=player.items[i];
}
};
pro.stay=function(){
this.a_bubble.visible=false;
this.a_stay.visible=true;
this.a_run.visible=false;
this.backArm.visible=true;
this.item_1.setToFrame(1);
this.item_2.setToFrame(1);
this.item_3.setToFrame(1);
this.item_4.setToFrame(1);
this.item_5.setToFrame(1);
};
pro.run=function(){
this.runTimer=15;
this.backArm.visible=false;
this.a_stay.visible=false;
this.a_run.visible=true;
this.item_1.setToFrame(0);
this.item_2.setToFrame(0);
};
pro.update=function(){
if(this.a_fall.visible){
this.a_fall.animate();
}
if(this.a_end.visible){
this.a_end.animate();
}
if(this.runTimer>0){
this.runTimer--;
this.a_run.animate();
if(!this.a_fall.visible&&!this.a_bubble.visible&&this.runTimer==0){
this.stay();
}
}
this.backArm.x=this.x+this.parent.x;
this.backArm.y=this.y+this.parent.y;
};
Object.defineProperty(pro,'Visible',{
set:function(value){
this.backArm.visible=
this.visible=value;
}
});
SS.Dialog=function(parent,size){
GodStep.Frame.call(this,'Dialog',parent.W*.7,parent.W*.4);
GodStep.IDownUp.call(this,parent.W,parent.H);
this.soul=parent.soul;
this.x=parent.W*.5;
this.y=parent.W*.543;
this.p=parent;
this.soul=parent.soul;
this.s=parent.s;
this.setHitArea(-parent.W,-parent.H,parent.W*2,parent.H*2);
this.addChild(this.back=new SS.Img('back_up',parent.s,0,0,.5));
this.back.scale.y*=2;
this.back.y-=this.H*.5;
this.addChild(this.popUp=new SS.Img('field_up',parent.s,0,0,.5));
this.addChild(this.b_no=new SS.ImgButton('button_up',this,parent.W*.16,parent.H*.05,'NO',130,0,parent.H*.049));
this.addChild(this.b_yes=new SS.ImgButton('button_up',this,-parent.W*.16,parent.H*.05,'YES',130,0,parent.H*.049));
this.addChild(this.message=new SS.Text('',(size||110)*this.s*3,0,-parent.H*.16,'center',0xA35200));
this.message.y=-parent.H*.16;
this.visible=false;
this.message.alpha=.7;
GodStep.IDownUp.call(this.back,parent.W,parent.H);
this.back.hitArea=new PIXI.Rectangle(-parent.W/2/parent.s,0,parent.W/parent.s,parent.H/parent.s);
addEvent(this.b_no,SS.ImgButton.CLICK,this.h_buttons);
addEvent(this.b_yes,SS.ImgButton.CLICK,this.h_buttons);
};
extend(SS.Dialog,GodStep.Frame);
pro.show=function(message,callbackYES,callbackNO){
this.visible=true;
this.message.setText(message);
this.message.updateText();
this.message.x=-this.message.width/2;
this.yesCallBack=callbackYES;
this.noCallBack=callbackNO;
};
pro.h_buttons=function(e){
var t=e.content.t;
var p=t.parent;
if(p.visible){
switch(t){
case p.b_no:
p.isYes=false;
p.noCallBack(p);
p.visible=false;
break;
case p.b_yes:
p.isYes=true;
p.yesCallBack(p);
p.visible=false;
break;
}
}
};
SS.Tutorial=function(parent){
this.soul=parent.soul;
GodStep.LFrame.call(this,parent.soul,'GamePlay');
this.addChild(this.a_left=new SS.MovieClip(['button_1_off','button_1_on'],parent.s,-this.soul.W*.11,0,.5));
this.addChild(this.a_right=new SS.MovieClip(['button_2_on','button_2_off'],parent.s,this.soul.W*.11,0,.5));
this.a_left.animTime=this.a_right.animTime=15;
this.x=this.soul.W*.5;
this.y=this.soul.H*.87;
this.visible=true;
};
extend(SS.Tutorial,GodStep.LFrame);
pro.update=function(){
this.a_left.animate();
this.a_right.animate();
};
SS.ChinUpShinUp=function(){
GodStep.Game.TRANSPARENT=true;
SS.ChinUpShinUp.instance=this;
SS.ChinUpShinUp.instance.PLAYER={};
GodStep.Game.call(this,'ChinUpShinUp',0x101010,SS.Assets,'ss_settings3','ss_player2',SS.DEFAULT_SETTINGS,'auto');
SS.SOUND=SS.MUSIC=true;
this.MW=1536;
this.MH=1854;
};
extend(SS.ChinUpShinUp,GodStep.Game);
SS.SCALE=1;
SS.IMAGE_PATH='src/ChinUpShinUp/img/';
SS.SOUND_PATH='src/ChinUpShinUp/sound/';
SS.DEFAULT_SETTINGS='{"easy":[[0,0,0,0,0,0,2,1,1,1,1,2,0,0,0,0],[0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,0],[1,1,2,1,1,1,1,2,1,1,2,1,1,1,0,0],[0,0,0,0,0,0,1,2,1,2,2,1,2,1,0,0]],"average":[[0,0,0,0,0,0,1,1,3,2,2,3,1,1,0,0],[0,0,0,0,3,2,1,1,2,3,1,1,3,2,0,0],[0,0,0,0,1,1,3,2,2,3,3,2,1,1,0,0],[0,0,0,0,0,0,2,3,3,2,2,3,0,0,0,0],[0,0,0,0,0,0,2,1,1,2,0,0,0,0,0,0],[0,0,3,1,1,1,1,2,1,3,1,2,1,1,3,1]],"hard":[[3,0,3,0,2,3,3,0,3,0,0,0,0,0,0,0],[3,0,2,3,3,2,2,3,3,0,0,0,0,0,0,0],[0,0,0,0,0,0,3,2,2,3,2,3,3,2,0,0],[0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0],[0,0,0,0,3,1,3,2,3,2,3,1,0,0,0,0],[0,0,0,0,2,3,1,3,1,3,2,3,0,0,0,0],[0,0,0,0,2,3,2,3,3,2,3,2,0,0,0,0]],"s_multPointsStart":50,"s_multCoinStart":10,"s_patternSpeed":10,"s_enemyGrowSpeed":60,"s_enemyTime":14,"s_enemySpeed":70,"s_enemyPeriod":4}';
pro.run=function(){
catched(function(){
var t=SS.ChinUpShinUp.instance;
if(!t.isRunning){
trace('running');
t.isRunning=true;
t.keyboard=new GodStep.Keyboard();
t.addFrame(t.dev=new SS.Dev(t));
t.addFrame(t.shop=new SS.Shop(t));
t.addFrame(t.settings=new SS.Settings(t));
t.addFrame(t.gameplay=new SS.GamePlay(t));
t.addFrame(t.shop=new SS.Shop(t));
t.addFrame(t.startmenu=new SS.StartMenu(t));
t.addFrame(t.gameover=new SS.GameOver(t));
t.addFrame(t.transmission=new SS.Transmission(t));
t.addFrame(t.fps=new GodStep.FPS(t,0xff0000,.7));
t.keyboard=new GodStep.Keyboard(t);
t.loadSettings();
t.screenTo([t.startmenu],t.assets);
t.resizeWindow(t.OW,t.OH);
t.reposition();
}
},'RUN');
};
pro.saveSettings=function(){
var instance=SS.ChinUpShinUp.instance;
GodStep.SaveLocal(instance.SETTINGS,instance.SETTINGS_SLOT);
};
pro.loadSettings=function(){
var instance=SS.ChinUpShinUp.instance;
if(!instance.PLAYER.coins){
instance.PLAYER=GodStep.LoadLocal(instance.PLAYER_SLOT)||{coins:0,top:0,score:0,items:[0,0,0,0,0],shop:[0,0,0,0,0]};
}
var sett=instance.SETTINGS=GodStep.LoadLocal(instance.SETTINGS_SLOT)||GodStep.LoadText(SS.DEFAULT_SETTINGS);
var patt=instance.PATTERNS=[[],[],[]];
var i;
for(i=0;i<sett.easy.length;i++){
patt[0].push(new SS.Pattern(sett.easy[i],true));
}
for(i=0;i<sett.average.length;i++){
patt[1].push(new SS.Pattern(sett.average[i],true));
}
for(i=0;i<sett.hard.length;i++){
patt[2].push(new SS.Pattern(sett.hard[i],true));
}
};
function startChinUpShinUp(view){
if(!SS.ChinUpShinUp.instance){
var game=new SS.ChinUpShinUp(view);
game.div.style.margin='0 auto';
game.div.style['vertical-align']='middle';
game.initResizeEvents();
}
}
